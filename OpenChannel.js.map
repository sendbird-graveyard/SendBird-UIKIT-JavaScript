{"version":3,"file":"OpenChannel.js","sources":["../src/smart-components/OpenchannelConversation/utils.ts","../src/smart-components/OpenchannelConversation/components/MessageInpuetWrapper.tsx","../src/smart-components/OpenchannelConversation/components/FrozenNotification.tsx","../src/ui/OpenchannelConversationHeader/index.tsx","../src/ui/OpenchannelUserMessage/utils.ts","../src/utils/openChannelUtils.ts","../src/ui/OpenchannelUserMessage/index.tsx","../src/ui/OpenChannelAdminMessage/index.tsx","../src/ui/OpenchannelOGMessage/utils.ts","../src/ui/OpenchannelOGMessage/index.tsx","../src/ui/OpenchannelThumbnailMessage/utils.ts","../src/ui/OpenchannelThumbnailMessage/index.tsx","../src/ui/OpenchannelFileMessage/utils.ts","../src/ui/OpenchannelFileMessage/index.tsx","../src/smart-components/OpenchannelConversation/components/RemoveMessageModal.tsx","../src/smart-components/OpenchannelConversation/components/types.ts","../src/smart-components/OpenchannelConversation/components/MessageHOC.tsx","../src/smart-components/OpenchannelConversation/components/OpenchannelConversationScroll.tsx","../src/smart-components/OpenchannelConversation/dux/actionTypes.ts","../src/smart-components/OpenchannelConversation/dux/reducers.ts","../src/smart-components/OpenchannelConversation/dux/initialState.ts","../src/smart-components/OpenchannelConversation/hooks/useSetChannel.ts","../src/smart-components/OpenchannelConversation/hooks/useHandleChannelEvents.ts","../src/smart-components/OpenchannelConversation/hooks/useInitialMessagesFetch.ts","../src/smart-components/OpenchannelConversation/hooks/useScrollCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useCheckScrollBottom.ts","../src/smart-components/OpenchannelConversation/hooks/useSendMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useFileUploadCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useUpdateMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useDeleteMessageCallback.ts","../src/smart-components/OpenchannelConversation/hooks/useResendMessageCallback.ts","../src/smart-components/OpenchannelConversation/index.tsx"],"sourcesContent":["import format from 'date-fns/format';\nimport Sendbird from 'sendbird';\nimport SendbirdUIKit from '../../index';\n\nexport const getMessageCreatedAt = (message: SendbirdUIKit.EveryMessage): string => format(message.createdAt, 'p');\n\nexport const scrollIntoLast = (intialTry = 0): void => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-openchannel-conversation-scroll');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\n\nexport const isSameGroup = (\n  message: SendbirdUIKit.EveryMessage,\n  comparingMessage: SendbirdUIKit.EveryMessage,\n): boolean => {\n  if (\n    !message\n    || !comparingMessage\n    || message.messageType === 'admin'\n    || comparingMessage.messageType === 'admin'\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false\n  }\n\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage: SendbirdUIKit.EveryMessage,\n  currMessage: SendbirdUIKit.EveryMessage,\n  nextMessage: SendbirdUIKit.EveryMessage,\n): [boolean, boolean] => (\n    [\n      isSameGroup(prevMessage, currMessage),\n      isSameGroup(currMessage, nextMessage),\n    ]\n  );\n\nexport const kFormatter = (num: number): string => {\n  if (Math.abs(num) > 999999) {\n    return `${(Math.abs(num) / 1000000).toFixed(1)}M`;\n  }\n\n  if (Math.abs(num) > 999) {\n    return `${(Math.abs(num) / 1000).toFixed(1)}K`;\n  }\n\n  return `${num}`;\n};\n\nexport const isOperator = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { operators } = openChannel;\n  if (operators.map(operator => operator.userId).indexOf(userId) < 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const isDisabledBecauseFrozen = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { isFrozen } = openChannel;\n  return isFrozen && !isOperator(openChannel, userId);\n};\n\nexport const isDisabledBecauseMuted = (mutedParticipantIds: Array<string>, userId: string): boolean => {\n  return mutedParticipantIds.indexOf(userId) < 0;\n};\n\nexport const fetchWithListQuery = (\n  listQuery: SendbirdUIKit.UserListQuery,\n  logger: SendbirdUIKit.Logger,\n  eachQueryNextCallback: (users: Array<Sendbird.User>) => void,\n): void => {\n  const fetchList = (query) => {\n    const { hasNext } = query;\n    if (hasNext) {\n      query.next((error, users) => {\n        if (!error) {\n          eachQueryNextCallback(users);\n          fetchList(query);\n        } else {\n          logger.warning('OpenChannel | FetchUserList failed', error);\n        }\n      });\n    } else {\n      logger.info('OpenChannel | FetchUserList finished');\n    }\n  };\n  logger.info('OpenChannel | FetchUserList start', listQuery);\n  fetchList(listQuery);\n};\n\nexport const pxToNumber = (px: string | number): number | void => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n","import React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\nimport { RenderOpenChannelMessageInputProps } from '../../../index';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageInput from '../../../ui/MessageInput';\n\ninterface Props {\n  channel: Sendbird.OpenChannel;\n  user: Sendbird.User;\n  disabled: boolean;\n  onSendMessage(): void;\n  onFileUpload(file_: File): void;\n  renderMessageInput?(renderProps: RenderOpenChannelMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  disabled,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  if (!channel) {\n    return;\n  }\n\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  return (\n    <div className=\"sendbird-openchannel-footer\">\n      <MessageInput\n        ref={ref}\n        disabled={disabled}\n        onSendMessage={onSendMessage}\n        onFileUpload={onFileUpload}\n        placeholder={(\n          disabled\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED\n          // add disabled because of muted state\n        )}\n      />\n    </div>\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport './frozen-notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-frozen-channel-notification\">\n      <Label\n        className=\"sendbird-frozen-channel-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { ReactElement } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n  LabelStringSet,\n} from '../Label';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation-header';\n\ninterface Props {\n  coverImage?: string;\n  title?: string;\n  subTitle?: string;\n  amIOperator?: boolean;\n  onActionClick?(): void;\n}\n\nexport default function OpenchannelConversationHeader({\n  coverImage,\n  title = LabelStringSet.NO_TITLE,\n  subTitle = LabelStringSet.NO_TITLE,\n  amIOperator,\n  onActionClick,\n}: Props): ReactElement {\n  return (\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__left`}>\n        {\n          coverImage ? (\n            <Avatar\n              className={`${COMPONENT_CLASS_NAME}__left__cover-image`}\n              src={coverImage}\n              alt=\"channel cover image\"\n              width=\"32px\"\n              height=\"32px\"\n            />\n          ) : (\n            <div\n              className={`${COMPONENT_CLASS_NAME}__left__cover-image--icon`}\n              style={{ width: 32, height: 32 }}\n            >\n              <Icon\n                type={IconTypes.CHANNELS}\n                fillColor={IconColors.CONTENT}\n                width=\"18px\"\n                height=\"18px\"\n              />\n            </div>\n          )\n        }\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__left__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title}\n        </Label>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__left__sub-title`}\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__right`}>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__right__trigger`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={(\n              amIOperator\n              ? IconTypes.INFO\n              : IconTypes.MEMBERS\n            )}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","export const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default { copyToClipboard };\n","import Sendbird from 'sendbird';\nimport { ClientUserMessage, ClientFileMessage } from '../index';\n\nconst OpenChannelMessageStatusTypes = {\n  NONE: 'none',\n  PENDING: 'pending',\n  FAILED: 'failed',\n  CANCELED: 'canceled',\n  SUCCEEDED: 'succeeded'\n};\n\nexport const getSenderFromMessage = (message: ClientUserMessage | ClientFileMessage): Sendbird.User => {\n  return message.sender || message._sender;\n};\n\nexport const checkIsSent = (status: string): boolean => (status === OpenChannelMessageStatusTypes.SUCCEEDED);\nexport const checkIsPending = (status: string): boolean => (status === OpenChannelMessageStatusTypes.PENDING);\nexport const checkIsFailed = (status: string): boolean => (status === OpenChannelMessageStatusTypes.FAILED);\n\nexport const checkIsByMe = (message: ClientFileMessage | ClientUserMessage, userId: string): boolean => (getSenderFromMessage(message).userId === userId);\n\ninterface isFineCopyParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineCopy = ({ message }: isFineCopyParams): boolean => {\n  return (message.messageType === 'user' && message.message.length > 0);\n};\n\ninterface isFineResendParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineResend = ({ message, status, userId }: isFineResendParams): boolean => {\n  return checkIsByMe(message, userId)\n    && checkIsFailed(status)\n    && message.isResendable\n    && message.isResendable();\n};\n\ninterface isFineEditParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineEdit = ({ message, status, userId }: isFineEditParams): boolean => {\n  return checkIsByMe(message, userId) && checkIsSent(status);\n};\n\ninterface isFineDeleteParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineDelete = ({ message, userId }: isFineDeleteParams): boolean => {\n  return checkIsByMe(message, userId);\n};\n\ninterface showMenuTriggerParams {\n  message: ClientUserMessage | ClientFileMessage;\n  status: string;\n  userId: string;\n}\nexport const showMenuTrigger = (props: showMenuTriggerParams): boolean => {\n  const { message, status, userId } = props;\n  if (message.messageType === 'user') {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineEdit({ message, status, userId })\n      || isFineCopy({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  } else {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  }\n};\n","import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientUserMessage;\n  userId: string;\n  className?: string | Array<string>;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n}\n\nexport default function OpenchannelUserMessage({\n  message,\n  className,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n  status,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push(`sendbird-openchannel-user-message`);\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef.current.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { ClientAdminMessage } from '../../index';\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\ninterface Props {\n  message: ClientAdminMessage;\n  className?: string | Array<string>;\n}\n\nexport default function OpenChannelAdminMessage({\n  message,\n  className,\n}: Props): ReactElement {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-admin-message');\n\n  return (\n    <div className={[...injectingClassName].join(' ')}>\n      <Label\n        className=\"sendbird-openchannel-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message || ''}\n      </Label>\n    </div>\n  );\n}\n","import Sendbird from 'sendbird';\n\nexport const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const createUrlTester = (regexp: RegExp) => (text: string): boolean => regexp.test(text);\nexport const checkOGIsEnalbed = (message: Sendbird.UserMessage): boolean => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n","import React, { useState, useContext, useMemo, useRef, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport LinkLabel from '../LinkLabel';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport uuidv4 from '../../utils/uuid';\nimport { copyToClipboard } from '../OpenchannelUserMessage/utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkOGIsEnalbed, createUrlTester, URL_REG } from './utils';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientUserMessage;\n  className?: string | Array<string>;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n  userId: string;\n}\n\nexport default function OpenchannelOGMessage({\n  message,\n  className,\n  disabled,\n  showEdit,\n  showRemove,\n  resendMessage,\n  chainTop,\n  status,\n  userId,\n}: Props): JSX.Element {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  const { ogMetaData } = message;\n  const { defaultImage } = ogMetaData;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [contextStyle, setContextStyle] = useState({});\n  const messageComponentRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const isUrl = createUrlTester(URL_REG);\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-og-message');\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const wordClassName = 'sendbird-openchannel-og-message--word';\n    const splitMessage = message.message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={[\n                wordClassName,\n                'sendbird-openchannel-og-message--word--link'\n              ]}\n              src={word}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.PRIMARY}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={wordClassName}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {word}\n            </Label>\n          )\n      ));\n\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={wordClassName}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  // place conxt menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageComponentRef.current.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      ref={messageComponentRef}\n    >\n      <div\n        className=\"sendbird-openchannel-og-message__top\"\n      >\n        <div className=\"sendbird-openchannel-og-message__top__left\">\n          {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-og-message__top__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? (\n                          renderUserProfile({\n                            user: sender,\n                            close: closeDropdown,\n                          })\n                        )\n                        : (\n                          <UserProfile\n                            user={sender}\n                            onSuccess={closeDropdown}\n                            disableMessaging\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className=\"sendbird-openchannel-og-message__top__right\">\n          {\n            !chainTop && (\n              <div className=\"sendbird-openchannel-og-message__top__right__title\">\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sender-name\"\n                  type={LabelTypography.CAPTION_2}\n                  color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n                >\n                  {\n                    sender && (\n                      sender.friendName\n                      || sender.nickname\n                      || sender.userId\n                    )\n                  }\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sent-at\"\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {\n                    message.createdAt && (\n                      format(message.createdAt, 'p')\n                    )\n                  }\n                </Label>\n              </div>\n            )\n          }\n          <div className=\"sendbird-openchannel-og-message__top__right__description\">\n            <Label\n              className=\"sendbird-openchannel-og-message__top__right__description__message\"\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {MemoizedMessageText()}\n            </Label>\n          </div>\n        </div>\n        {\n          <div\n            className=\"sendbird-openchannel-og-message__top__context-menu\"\n            ref={contextMenuRef}\n            style={contextStyle}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message: message, userId: userId, status: status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-og-message__top__context-menu--icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={() => {\n                      toggleDropdown();\n                    }}\n                  >\n                    <Icon\n                      width=\"24px\"\n                      height=\"24px\"\n                      type={IconTypes.MORE}\n                      fillColor={IconColors.CONTENT_INVERSE}\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineCopy({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__copy\"\n                        onClick={() => {\n                          copyToClipboard(message.message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineEdit({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__edit\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__resend\"\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__delete\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          </div>\n        }\n      </div>\n      <div className=\"sendbird-openchannel-og-message__bottom\">\n        <div className=\"sendbird-openchannel-og-message__bottom__og-tag\">\n          {\n            ogMetaData.url && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__url\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {ogMetaData.url}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.title && (\n              <LinkLabel\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__title\"\n                type={LabelTypography.SUBTITLE_2}\n                color={LabelColors.PRIMARY}\n                src={ogMetaData.url}\n              >\n                {\n                  ogMetaData.title\n                }\n              </LinkLabel>\n            )\n          }\n          {\n            ogMetaData.description && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__description\"\n                type={LabelTypography.BODY_2}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {ogMetaData.description}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.url && (\n              <div\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail\"\n                onClick={openLink}\n                onKeyDown={openLink}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {\n                  defaultImage && (\n                    <ImageRenderer\n                      url={defaultImage.url || ''}\n                      alt={defaultImage.alt || ''}\n                      className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image\"\n                      height=\"189px\"\n                      defaultComponent={(\n                        <div className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image--placeholder\">\n                          <Icon\n                            width=\"56px\"\n                            height=\"56px\"\n                            type={IconTypes.THUMBNAIL_NONE}\n                          />\n                        </div>\n                      )}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-og-message__top__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-og-message__top__right__tail__pending\"\n                      width=\"16px\"\n                      height=\"16px\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-og-message__top__right__tail__failed\"\n                    width=\"16px\"\n                    height=\"16px\"\n                    type={IconTypes.ERROR}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n","export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n}\n","import React, { useContext, useRef } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsByMe,\n  checkIsSent,\n  checkIsPending,\n  checkIsFailed,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientFileMessage;\n  className?: string | Array<string>;\n  disabled: boolean;\n  userId: string;\n  status: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  message,\n  className,\n  disabled,\n  userId,\n  status,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-thumbnail-message');\n  const isByMe = checkIsByMe(message, userId);\n  const isMessageSent = checkIsSent(status);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-openchannel-thumbnail-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-thumbnail-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-thumbnail-message__right__body\">\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n            onClick={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            onKeyDown={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n            {\n              {\n                [SUPPORTING_TYPES.VIDEO]: (\n                  (url || localUrl)\n                    ? (\n                      <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                        {\n                          (thumbnailUrl)\n                            ? (\n                              <ImageRenderer\n                                className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\"\n                                url={thumbnailUrl}\n                                height=\"270px\"\n                                alt=\"image\"\n                              />\n                            )\n                            : (\n                              <video\n                                className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\"\n                              >\n                                <source src={url || localUrl} type={type} />\n                              </video>\n                            )\n                        }\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                          width=\"56px\"\n                          height=\"56px\"\n                          type={IconTypes.PLAY}\n                        />\n                      </div>\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.IMAGE]: (\n                  (url || localUrl)\n                    ? (\n                      <ImageRenderer\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                        url={thumbnailUrl || url || localUrl}\n                        width=\"360px\"\n                        height=\"270px\"\n                        alt=\"image\"\n                      />\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.UNSUPPORTED]: (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                    width=\"56px\"\n                    height=\"56px\"\n                    type={IconTypes.PHOTO}\n                    fillColor={IconColors.ON_BACKGROUND_2}\n                  />\n                ),\n              }[getSupportingFileType(type)]\n            }\n          </div>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            showMenuTrigger({ message, userId, status }) && (\n              <IconButton\n                className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                width=\"32px\"\n                height=\"32px\"\n                onClick={toggleDropdown}\n              >\n                <Icon\n                  width=\"24px\"\n                  height=\"24px\"\n                  type={IconTypes.MORE}\n                  fillColor={IconColors.CONTENT_INVERSE}\n                />\n              </IconButton>\n            )\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              parentRef={contextMenuRef}\n              parentContainRef={contextMenuRef}\n              closeDropdown={closeDropdown}\n              openLeft\n            >\n              {\n                isFineResend({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      resendMessage(message);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                  </MenuItem>\n                )\n              }\n              {\n                isFineDelete({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) {\n                        return;\n                      }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","import { IconTypes } from '../Icon';\n\nexport const checkFileType = (fileUrl: string): string => {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport const truncate = (fullStr:string, strLen: number): string => {\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n","import React, { useContext, useRef } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkFileType, truncate } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineDelete,\n  isFineResend,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientFileMessage;\n  className?: string | Array<string>;\n  userId: string;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelFileMessage({\n  message,\n  className,\n  userId,\n  disabled,\n  chainTop,\n  status,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n\n  const openFileUrl = () => { window.open(message.url); };\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-file-message');\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n    >\n      <div className=\"sendbird-openchannel-file-message__left\">\n        {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                  className=\"sendbird-openchannel-file-message__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n      </div>\n      <div className=\"sendbird-openchannel-file-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-file-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-file-message__right__body\">\n          {\n            checkFileType(message.url) && (\n              <Icon\n                className=\"sendbird-openchannel-file-message__right__body__icon\"\n                width=\"48px\"\n                height=\"48px\"\n                type={checkFileType(message.url)}\n                color={IconColors.PRIMARY}\n              />\n            )\n          }\n          <TextButton\n            className=\"sendbird-openchannel-file-message__right__body__file-name\"\n            onClick={openFileUrl}\n          >\n            <Label\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {truncate(message.name || message.url, 40)}\n            </Label>\n          </TextButton>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-file-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-file-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-file-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-openchannel-file-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        {\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message, userId, status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-file-message__context-menu__icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={toggleDropdown}\n                  >\n                    <Icon\n                      type={IconTypes.MORE}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n        }\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react'\nimport { ClientFileMessage, ClientUserMessage } from '../../..'\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  onCloseModal(): void;\n  onDeleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n}\n\nexport default function RemoveMessageModal({\n  onCloseModal,\n  onDeleteMessage,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n}\n","import { EveryMessage } from '../../..';\nimport { isImage, isVideo } from '../../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message: EveryMessage): string => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if (message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return MessageTypes.UNKNOWN;\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import React, {\n  useState,\n  useRef,\n  ReactElement,\n  useMemo,\n} from 'react';\n\nimport format from 'date-fns/format';\nimport * as types from '../../../index';\n\nimport OpenChannelUserMessage from '../../../ui/OpenchannelUserMessage';\nimport OpenChannelAdminMessage from '../../../ui/OpenChannelAdminMessage';\nimport OpenChannelOGMessage from '../../../ui/OpenchannelOGMessage';\nimport OpenChannelThumbnailMessage from '../../../ui/OpenchannelThumbnailMessage';\nimport OpenChannelFileMessage from '../../../ui/OpenchannelFileMessage';\n// import UnknownMessage from '../../../ui/UnknownMessage';\n\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\n\nimport RemoveMessageModal from './RemoveMessageModal';\nimport {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n} from './types';\nimport { OpenChannel } from 'sendbird';\n\ninterface Props {\n  message: types.EveryMessage;\n  userId: string;\n  disabled: boolean;\n  editDisabled: boolean;\n  hasSeperator: boolean;\n  channel: OpenChannel;\n  renderCustomMessage?: types.RenderCustomMessage,\n  deleteMessage(message: types.ClientUserMessage | types.ClientFileMessage, callback?: () => void): void;\n  updateMessage(messageId: number, text: string, callback?: () => void): void;\n  resendMessage(failedMessage: types.ClientUserMessage | types.ClientFileMessage): void;\n  status?: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n}\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  channel,\n  renderCustomMessage,\n  deleteMessage,\n  updateMessage,\n  resendMessage,\n  status,\n  chainTop,\n  chainBottom,\n}: Props): ReactElement {\n  let sender: SendBird.User = null;\n  if (message.messageType !== 'admin') {\n    sender = message.sender;\n  }\n\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, channel, chainTop, chainBottom);\n    }\n    return null;\n  }, [message, renderCustomMessage]);\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  let isByMe = false;\n\n  if (sender && message.messageType !== 'admin') {\n    // pending and failed messages are by me\n    isByMe = (userId === sender.userId)\n      || (message.requestState === SendingMessageStatus.PENDING)\n      || (message.requestState === SendingMessageStatus.FAILED);\n  }\n\n  if(RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (message.messageType === 'user' && showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: (() => {\n            if (message.messageType === 'admin') {\n              return (\n                <OpenChannelAdminMessage message={message} />\n              )\n            }\n          })(),\n          [MessageTypes.FILE]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelFileMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.OG]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelOGMessage\n                  message={message}\n                  status={status}\n                  userId={userId}\n                  showEdit={setShowEdit}\n                  disabled={disabled}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.THUMBNAIL]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelThumbnailMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  onClick={setShowFileViewer}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.USER]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelUserMessage\n                  message={message}\n                  userId={userId}\n                  disabled={disabled}\n                  showEdit={setShowEdit}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.UNKNOWN]: (() => {\n            return;\n            // return (\n            //   <OpenChannelUnknownMessage message={message} />\n            // );\n          })(),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              if (message.messageType !== 'admin') {\n                deleteMessage(message);\n              }\n            }}\n          />\n        )\n      }\n      {\n        (showFileViewer && message.messageType === 'file') && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => deleteMessage(message)}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {/* {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      } */}\n    </div>\n  );\n}\n","import React, { ReactElement, useRef, useState, useMemo } from 'react';\nimport isSameDay from 'date-fns/isSameDay';\nimport {\n  ClientFileMessage,\n  ClientUserMessage,\n  EveryMessage,\n  RenderCustomMessage,\n} from '../../../index';\nimport MessageHoc from './MessageHOC';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport './openchannel-conversation-scroll.scss';\nimport { compareMessagesForGrouping } from '../utils';\n\ninterface Props {\n  openchannel: SendBird.OpenChannel;\n  user: SendBird.User;\n  allMessages: Array<EveryMessage>;\n  useMessageGrouping: boolean;\n  isOnline: boolean;\n  hasMore: boolean;\n  renderCustomMessage?: RenderCustomMessage;\n  onScroll(callback?: () => void): void;\n  updateMessage(messageId: number, text: string, callback?: () => void): void;\n  deleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n  resendMessage(failedMessage: ClientUserMessage | ClientFileMessage): void;\n}\n\nfunction OpenchannelConversationScroll(\n  {\n    useMessageGrouping = true,\n    openchannel,\n    user,\n    allMessages,\n    isOnline = true,\n    hasMore,\n    onScroll,\n    renderCustomMessage,\n    updateMessage,\n    deleteMessage,\n    resendMessage,\n  }: Props,\n  ref: React.RefObject<HTMLDivElement>,\n): ReactElement {\n  const scrollRef = ref || useRef(null);\n  const [showScrollDownButton, setShowScrollDownButton] = useState(false);\n\n  const handleOnScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = element;\n    if (\n      (scrollHeight > scrollTop + clientHeight)\n      && (window.navigator.userAgent.indexOf('MSIE ') < 0) // don't show button in IE\n    ) {\n      setShowScrollDownButton(true);\n    } else {\n      setShowScrollDownButton(false);\n    }\n\n    if (!hasMore) {\n      return;\n    }\n    if (scrollTop === 0) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(() => {\n        try {\n          first.scrollIntoView();\n        } catch (error) { }\n      });\n    }\n  };\n\n  const scrollToBottom = () => {\n    if (scrollRef && scrollRef.current) {\n      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n      setShowScrollDownButton(false);\n    }\n  };\n\n  const hasMessage = useMemo(() => {\n    return allMessages.length > 0;\n  }, [allMessages.length]);\n\n  return (\n    <div\n      className=\"sendbird-openchannel-conversation-scroll\"\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      <div className=\"sendbird-openchannel-conversation-scroll__container\">\n        <div className=\"sendbird-openchannel-conversation-scroll__container__padding\" />\n        <div className={`sendbird-openchannel-conversation-scroll__container__item-container${hasMessage ? '' : '--no-messages'}`}>\n          {\n            hasMessage\n              ? (\n                allMessages.map((message, index) => {\n                  let status: string;\n\n                  if (message.messageType !== 'admin') {\n                    status = message.sendingStatus;\n                  }\n\n                  const previousMessage = allMessages[index - 1];\n                  const nextMessage = allMessages[index - 1];\n\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = message.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeperator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, message, nextMessage)\n                    : [false, false];\n                  return (\n                    <MessageHoc\n                      renderCustomMessage={renderCustomMessage}\n                      channel={openchannel}\n                      key={message.messageId}\n                      message={message}\n                      status={status}\n                      userId={user.userId}\n                      disabled={!isOnline}\n                      editDisabled={openchannel.isFrozen}\n                      hasSeperator={hasSeperator}\n                      chainTop={chainTop}\n                      chainBottom={chainBottom}\n                      deleteMessage={deleteMessage}\n                      updateMessage={updateMessage}\n                      resendMessage={resendMessage}\n                    />\n                  )\n                })\n              )\n              : (\n                <PlaceHolder\n                  className=\"sendbird-openchannel-conversation-scroll__container__place-holder\"\n                  type={PlaceHolderTypes.NO_MESSAGES}\n                />\n              )\n          }\n        </div>\n        {\n          showScrollDownButton && (\n            <div\n              className=\"sendbird-openchannel-conversation-scroll__container__scroll-bottom-button\"\n              onClick={scrollToBottom}\n              onKeyDown={scrollToBottom}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.CONTENT}\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default React.forwardRef(OpenchannelConversationScroll);\n","export const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAIL = 'GET_PREV_MESSAGES_FAIL';\nexport const SENDING_MESSAGE_FAILED = 'SENDING_MESSAGE_FAILED';\nexport const SENDING_MESSAGE_SUCCEEDED = 'SENDING_MESSAGE_SUCCEEDED';\nexport const SENDING_MESSAGE_START = 'SENDING_MESSAGE_START';\nexport const RESENDING_MESSAGE_START = 'RESENDING_MESSAGE_START';\nexport const FETCH_PARTICIPANT_LIST = 'FETCH_PARTICIPANT_LIST';\nexport const FETCH_BANNED_USER_LIST = 'FETCH_BANNED_USER_LIST';\nexport const FETCH_MUTED_USER_LIST= 'FETCH_MUTED_USER_LIST';\n\n// event handlers\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nexport const ON_OPERATOR_UPDATED = 'ON_OPERATOR_UPDATED';\nexport const ON_USER_ENTERED = 'ON_USER_ENTERED';\nexport const ON_USER_EXITED = 'ON_USER_EXITED';\nexport const ON_USER_MUTED = 'ON_USER_MUTED';\nexport const ON_USER_UNMUTED = 'ON_USER_UNMUTED';\nexport const ON_USER_BANNED = 'ON_USER_BANNED';\nexport const ON_USER_UNBANNED = 'ON_USER_UNBANNED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_META_DATA_CREATED = 'ON_META_DATA_CREATED';\nexport const ON_META_DATA_UPDATED = 'ON_META_DATA_UPDATED';\nexport const ON_META_DATA_DELETED = 'ON_META_DATA_DELETED';\nexport const ON_META_COUNTERS_CREATED = 'ON_META_COUNTERS_CREATED';\nexport const ON_META_COUNTERS_UPDATED = 'ON_META_COUNTERS_UPDATED';\nexport const ON_META_COUNTERS_DELETED = 'ON_META_COUNTERS_DELETED';\nexport const ON_MENTION_RECEIVED = 'ON_MENTION_RECEIVED';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\nimport compareIds from '../../../utils/compareIds.js';\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\n// @ts-ignore: Unreachable code error\ninterface ActionInterface {\n  type: string;\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.RESET_MESSAGES: {\n      return {\n        ...state,\n        allMessages: [],\n      };\n    }\n\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const gottenChannel = action.payload;\n      const operators = gottenChannel.operators;\n      if (\n        !state.isInvalid\n        && state.currentOpenChannel\n        && state.currentOpenChannel.url\n        && (state.currentOpenChannel.url === gottenChannel.url)\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: gottenChannel,\n        isInvalid: false,\n        operators: operators,\n        participants: operators,\n        bannedParticipantIds: [],\n        mutedParticipantIds: [],\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_SUCESS:\n    case actionTypes.GET_PREV_MESSAGES_FAIL: {\n      const isFailed = (action.type === actionTypes.GET_PREV_MESSAGES_FAIL);\n      const {\n        currentOpenChannel = {},\n        messages = [],\n        hasMore,\n        lastMessageTimestamp,\n      } = action.payload;\n      const actionChannelUrl = currentOpenChannel.url;\n      const receivedMessages = isFailed ? [] : messages;\n      const _hasMore = isFailed ? false : hasMore;\n      const _lastMessageTimestamp = isFailed ? 0 : lastMessageTimestamp;\n\n      const stateChannel = state.currentOpenChannel;\n      const stateChannelUrl = stateChannel.url;\n\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      const filteredAllMessages = state.allMessages.filter((message) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, message.messageId)))\n      ));\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: _hasMore,\n        lastMessageTimestamp: _lastMessageTimestamp,\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_START: {\n      const {\n        message,\n        channel,\n      } = action.payload;\n      if (channel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...message },\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_SUCCEEDED: {\n      const sentMessage = action.payload;\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_FAILED: {\n      const sentMessage = action.payload;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n        )),\n      };\n    }\n    case actionTypes.RESENDING_MESSAGE_START: {\n      const eventedChannel = action.payload.channel;\n      const resentMessage = action.payload.message;\n      if (eventedChannel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, resentMessage.reqId) ? resentMessage : m\n        )),\n      };\n    }\n    case actionTypes.FETCH_PARTICIPANT_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedParticipantList = action.payload.users;\n      if (eventedChannel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: [... state.participants, ...fetchedParticipantList],\n        // Should check duplication\n      };\n    }\n    case actionTypes.FETCH_BANNED_USER_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedBannedUserList = action.payload.users;\n      if (\n        (eventedChannel.url !== state.currentOpenChannel.url)\n        || !(fetchedBannedUserList.every(user => typeof user.userId === 'string'))\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: [\n          ... state.bannedParticipantIds,\n          ...fetchedBannedUserList.map(user => user.userId),\n        ],\n        // Should check duplication\n      };\n    }\n    case actionTypes.FETCH_MUTED_USER_LIST: {\n      const eventedChannel = action.payload.channel;\n      const fetchedMutedUserList = action.payload.users;\n      if (\n        (eventedChannel.url !== state.currentOpenChannel.url)\n        || !(fetchedMutedUserList.every(user => typeof user.userId === 'string'))\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: [\n          ... state.bannedParticipantIds,\n          ...fetchedMutedUserList.map(user => user.userId),\n        ],\n        // Should check duplication\n      };\n    }\n    // events\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const eventedChannel = action.payload.channel;\n      const receivedMessage = action.payload.message;\n\n      const {\n        currentOpenChannel\n      } = state;\n\n      if (\n        !compareIds(eventedChannel.url, currentOpenChannel.url)\n        || (\n          !(state.allMessages.map(\n            (message) => message.messageId).indexOf(receivedMessage.messageId) < 0\n        ))\n      ) {\n        return state;\n      }\n\n      return {\n        ...state,\n        allMessages: [...state.allMessages, receivedMessage],\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedMessage = action.payload.message;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((message) => (\n          message.isIdentical(updatedMessage)\n            ? updatedMessage\n            : message\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED: {\n      const eventedChannel = action.payload.channel;\n      const deletedMessageId = action.payload.messageId;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((message) => (\n          !compareIds(message.messageId, deletedMessageId)\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID: {\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    }\n    case actionTypes.ON_OPERATOR_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedOperators = action.payload.operators;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: {\n          ...state.currentOpenChannel,\n          operators: updatedOperators,\n        },\n        operators: updatedOperators,\n      };\n    }\n    case actionTypes.ON_USER_ENTERED: {\n      const eventedChannel = action.payload.channel;\n      const enteredUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: [...state.participants, enteredUser],\n      };\n    }\n    case actionTypes.ON_USER_EXITED: {\n      const eventedChannel = action.payload.channel;\n      const exitedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: state.participants.filter((participant) => (\n          !compareIds(participant.userId, exitedUser.userId)\n        )),\n      };\n    }\n    case actionTypes.ON_USER_MUTED: {\n      const eventedChannel = action.payload.channel;\n      const mutedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.mutedParticipantIds.indexOf(mutedUser.userId) >= 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: [...state.mutedParticipantIds, mutedUser.userId],\n      };\n    }\n    case actionTypes.ON_USER_UNMUTED: {\n      const eventedChannel = action.payload.channel;\n      const unmutedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.mutedParticipantIds.indexOf(unmutedUser.userId) < 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        mutedParticipantIds: state.mutedParticipantIds.filter(userId => userId !== unmutedUser.userId),\n      };\n    }\n    case actionTypes.ON_USER_BANNED: {\n      const eventedChannel = action.payload.channel;\n      const bannedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.bannedParticipantIds.indexOf(bannedUser.userId) >= 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: [...state.bannedParticipantIds, bannedUser.userId],\n      };\n    }\n    case actionTypes.ON_USER_UNBANNED: {\n      const eventedChannel = action.payload.channel;\n      const unbannedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (\n        !currentChannel\n        || (currentChannel.url && (currentChannel.url !== eventedChannel.url))\n        || state.bannedParticipantIds.indexOf(unbannedUser.userId) < 0\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        bannedParticipantIds: state.bannedParticipantIds.filter(userId => userId !== unbannedUser.userId),\n      };\n    }\n    case actionTypes.ON_CHANNEL_FROZEN: {\n      const frozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== frozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: true,\n      };\n    }\n    case actionTypes.ON_CHANNEL_UNFROZEN: {\n      const unfrozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== unfrozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: false,\n      };\n    }\n    case actionTypes.ON_CHANNEL_CHANGED: {\n      const changedChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== changedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: changedChannel,\n      };\n    }\n    case actionTypes.ON_META_DATA_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaDataKeys = action.payload.metaDataKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaCounterKeys = action.payload.metaCounterKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_MENTION_RECEIVED: {\n      // const eventedChannel = action.payload.channel;\n      // const mentionedMessage = action.payload.message;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n","import Sendbird from 'sendbird';\nimport { EveryMessage } from '../../../index';\n\nexport interface State {\n  allMessages: Array<EveryMessage>;\n  loading: boolean;\n  initialized: boolean;\n  currentOpenChannel: Sendbird.OpenChannel;\n  isInvalid: boolean;\n  hasMore: boolean;\n  lastMessageTimestamp: number;\n  frozen: boolean;\n  operators: Array<Sendbird.User>;\n  participants: Array<Sendbird.User>;\n  bannedParticipantIds: Array<string | number>;\n  mutedParticipantIds: Array<string | number>;\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  initialized: false,\n  currentOpenChannel: null,\n  isInvalid: false,\n  hasMore: false,\n  lastMessageTimestamp: 0,\n  frozen: false,\n  operators: [],\n  participants: [],\n  bannedParticipantIds: [],\n  mutedParticipantIds: [],\n};\n\nexport default initialState;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface MainProps {\n  channelUrl: string;\n  sdkInit: boolean;\n  fetchingParticipants: boolean;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useSetChannel(\n  { channelUrl, sdkInit, fetchingParticipants }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): void {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.OpenChannel) {\n      logger.info('OpenChannel | useSetChannel fetching channel', channelUrl);\n      sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: openChannel,\n          });\n          openChannel.enter((_, error) => {\n            if (error) {\n              logger.warning('OpenChannel | useSetChannel enter channel failed', { channelUrl, error });\n              messagesDispatcher({\n                type: messageActionTypes.SET_CHANNEL_INVALID,\n                payload: null,\n              });\n            }\n            if (fetchingParticipants) {\n              // fetch participants, banned participantIds, muted participantIds\n              const participantListQuery = openChannel.createParticipantListQuery();\n              const bannedParticipantListQuery = openChannel.createBannedUserListQuery();\n              const mutedParticipantListQuery = openChannel.createMutedUserListQuery();\n              utils.fetchWithListQuery(\n                participantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_PARTICIPANT_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n              utils.fetchWithListQuery(\n                bannedParticipantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_BANNED_USER_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n              utils.fetchWithListQuery(\n                mutedParticipantListQuery,\n                logger,\n                (users) => {\n                  messagesDispatcher({\n                    type: messageActionTypes.FETCH_MUTED_USER_LIST,\n                    payload: {\n                      channel: openChannel,\n                      users,\n                    },\n                  });\n                },\n              );\n            }\n          });\n        } else {\n          logger.warning('OpenChannel | useSetChannel fetching channel failed', { channelUrl, error });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n            payload: null,\n          });\n        }\n      });\n      // .then((openChannel) => {\n      //   logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CURRENT_CHANNEL,\n      //     payload: openChannel,\n      //   });\n      //   openChannel.enter((_, error) => {\n      //     if (error) {\n      //       logger.warning('OpenChannel | useSetChannel enter channel failed', { channelUrl, error });\n      //       messagesDispatcher({\n      //         type: messageActionTypes.SET_CHANNEL_INVALID,\n      //       });\n      //     }\n      //     if (fetchingParticipants) {\n      //       // fetch participants, banned participantIds, muted participantIds\n      //       const participantListQuery = openChannel.createParticipantListQuery();\n      //       const bannedParticipantListQuery = openChannel.createBannedUserListQuery();\n      //       const mutedParticipantListQuery = openChannel.createMutedUserListQuery();\n      //       utils.fetchWithListQuery(\n      //         participantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_PARTICIPANT_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //       utils.fetchWithListQuery(\n      //         bannedParticipantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_BANNED_USER_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //       utils.fetchWithListQuery(\n      //         mutedParticipantListQuery,\n      //         logger,\n      //         (users) => {\n      //           messagesDispatcher({\n      //             type: messageActionTypes.FETCH_MUTED_USER_LIST,\n      //             payload: {\n      //               channel: openChannel,\n      //               users,\n      //             },\n      //           });\n      //         },\n      //       );\n      //     }\n      //   });\n      // })\n      // .catch((error) => {\n      //   logger.warning('OpenChannel | useSetChannel fetching channel failed', { channelUrl, error });\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CHANNEL_INVALID,\n      //   });\n      // });\n    }\n  }, [channelUrl, sdkInit, fetchingParticipants]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport uuidv4 from '../../../utils/uuid';\nimport { scrollIntoLast } from '../utils';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  checkScrollBottom: () => boolean;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useHandleChannelEvents(\n  { currentOpenChannel, checkScrollBottom }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): void {\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (currentOpenChannel && currentOpenChannel.url && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('OpenChannel | useHandleChannelEvents: Setup evnet handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        const scrollToEnd = checkScrollBottom();\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_RECEIVED,\n          payload: { channel, message },\n        });\n        if (scrollToEnd) {\n          try {\n            setTimeout(() => {\n              scrollIntoLast();\n            });\n          } catch (error) {\n            logger.warning('OpenChannel | onMessageReceived | scroll to end failed');\n          }\n        }\n      };\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageUpdated', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n      ChannelHandler.onMessageDeleted = (channel, messageId) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageDeleted', { channelUrl, messageId });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: { channel, messageId },\n        });\n      };\n      ChannelHandler.onOperatorUpdated = (channel, operators) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onOperatorUpdated', { channelUrl, operators });\n        messagesDispatcher({\n          type: messageActionTypes.ON_OPERATOR_UPDATED,\n          payload: { channel, operators },\n        });\n      };\n      ChannelHandler.onUserEntered = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserEntered', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_ENTERED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserExited = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserExited', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_EXITED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserMuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserMuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_MUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnmuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnmuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNMUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserBanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserBanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_BANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnbanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnbanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNBANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onChannelFrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelFrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_FROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelUnfrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelUnfrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_UNFROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelChanged = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelChanged', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_CHANGED,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onMetaDataCreated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataCreated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_CREATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataUpdated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataUpdated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_UPDATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataDeleted = (channel, metaDataKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataDeleted', { channelUrl, metaDataKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_DELETED,\n          payload: { channel, metaDataKeys },\n        });\n      };\n      ChannelHandler.onMetaCountersCreated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersCreated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_CREATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersUpdated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersUpdated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_UPDATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersDeleted = (channel, metaCounterKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersDeleted', { channelUrl, metaCounterKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_DELETED,\n          payload: { channel, metaCounterKeys },\n        });\n      };\n      ChannelHandler.onMentionReceived = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMentionReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MENTION_RECEIVED,\n          payload: { channel, message },\n        });\n      };\n\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('OpenChannel | useHandleChannelEvents: Removing message receiver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { scrollIntoLast } from '../utils';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  /* eslint-disable @typescript-eslint/no-explicit-any*/\n  userFilledMessageListParams?: Record<string, any>;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useInitialMessagesFetch(\n  { currentOpenChannel, userFilledMessageListParams }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): void {\n  useEffect(() => {\n    logger.info('OpenChannel | useInitialMessagesFetch: Setup started', currentOpenChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n      payload: null,\n    });\n\n    if (sdk && sdk.MessageListParams && currentOpenChannel && currentOpenChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReactions = false;\n      if (userFilledMessageListParams) {\n        Object.keys(userFilledMessageListParams).forEach((key) => {\n          messageListParams[key] = userFilledMessageListParams[key];\n        });\n        logger.info('OpenChannel | useInitialMessagesFetch: Used customizedMessageListParams');\n      }\n\n      logger.info('OpenChannel | useInitialMessagesFetch: Fetching messages', { currentOpenChannel, messageListParams });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n        payload: null,\n      });\n      currentOpenChannel.getMessagesByTimestamp(new Date().getTime(), messageListParams, (messages, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useInitialMessagesFetch: Fetching messages succeeded', messages);\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimestamp = hasMore ? messages[0].createdAt : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              currentOpenChannel,\n              messages,\n              hasMore,\n              lastMessageTimestamp,\n            },\n          });\n          setTimeout(() => { scrollIntoLast(); });\n        } else {\n          logger.error('OpenChannel | useInitialMessagesFetch: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n            payload: {\n              currentOpenChannel,\n              messages: [],\n              hasMore: false,\n              lastMessageTimestamp: 0,\n            },\n          });\n        }\n      });\n    }\n  }, [currentOpenChannel, userFilledMessageListParams]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  lastMessageTimestamp: number;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  hasMore: boolean;\n  /* eslint-disable @typescript-eslint/no-explicit-any*/\n  userFilledMessageListParams?: Record<string, any>;\n}\ntype CallbackReturn = (callback: () => void) => void;\n\nfunction useScrollCallback(\n  { currentOpenChannel, lastMessageTimestamp }: MainProps,\n  { sdk, logger, messagesDispatcher, hasMore, userFilledMessageListParams }: ToolProps,\n): CallbackReturn {\n  return useCallback((callback) => {\n    if (hasMore && sdk && sdk.MessageListParams) {\n      logger.info('OpenChannel | useScrollCallback: start');\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReactions = false;\n\n      if (userFilledMessageListParams) {\n        Object.keys(userFilledMessageListParams).forEach((key) => {\n          messageListParams[key] = userFilledMessageListParams[key];\n        });\n        logger.info('OpenChannel | useScrollCallback: Used userFilledMessageListParams', userFilledMessageListParams);\n      }\n\n      logger.info('OpenChannel | useScrollCallback: Fetching messages', { currentOpenChannel, messageListParams });\n\n      currentOpenChannel.getMessagesByTimestamp(lastMessageTimestamp || new Date().getTime(), messageListParams, (messages, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useScrollCallback: Fetching messages succeeded', messages);\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimestamp = hasMore ? messages[0].createdAt : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              currentOpenChannel,\n              messages,\n              hasMore,\n              lastMessageTimestamp,\n            }\n          });\n          setTimeout(() => {\n            callback();\n          });\n        } else {\n          logger.error('OpenChannel | useScrollCallback: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n            payload: {\n              currentOpenChannel,\n              messages: [],\n              hasMore: false,\n              lastMessageTimestamp: 0,\n            }\n          });\n        }\n      });\n    }\n  }, [currentOpenChannel, lastMessageTimestamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\ninterface MainProps {\n  conversationScrollRef: React.RefObject<HTMLDivElement>;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n}\n\nfunction useCheckScrollBottom(\n  { conversationScrollRef }: MainProps,\n  { logger }: ToolProps,\n): () => boolean {\n  return useCallback(() => {\n    let isBottom = true;\n    if (conversationScrollRef) {\n      try {\n        const conversationScroll = conversationScrollRef.current;\n        isBottom = conversationScroll.scrollHeight <= conversationScroll.scrollTop + conversationScroll.clientHeight;\n      } catch(error) {\n        logger.error('OpenChannel | useCheckScrollBottom', error);\n      }\n    }\n    return isBottom;\n  }, [conversationScrollRef])\n}\n\nexport default useCheckScrollBottom;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendUserMessage: (text: string) => Sendbird.UserMessageParams;\n  checkScrollBottom: () => boolean;\n  messageInputRef: React.RefObject<HTMLInputElement>;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\nfunction useSendMessageCallback(\n  { currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): () => void {\n  return useCallback(() => {\n    if (sdk && sdk.UserMessageParams) {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt: string | number): Sendbird.UserMessageParams => {\n        const message = typeof txt === 'string' ? txt.trim() : txt.toString(10).trim();\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      }\n      const createCustomParams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function';\n      if (createCustomParams) {\n        logger.info('OpenChannel | useSendMessageCallback: Creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n      const params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text) : createParamsDefault(text);\n      logger.info('OpenChannel | useSendMessageCallback: Sending message has started', params);\n\n      const isBottom = checkScrollBottom();\n      const pendingMessage = currentOpenChannel.sendUserMessage(params, (message, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useSendMessageCallback: Sending message succeeded', message);\n          messagesDispatcher({\n            type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n            payload: message,\n          });\n          if (isBottom) {\n            setTimeout(() => {\n              utils.scrollIntoLast();\n            });\n          }\n        } else {\n          logger.warning('OpenChannel | useSendMessageCallback: Sending message failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.SENDING_MESSAGE_FAILED,\n            payload: messageActionTypes,\n          });\n        }\n      });\n      messagesDispatcher({\n        type: messageActionTypes.SENDING_MESSAGE_START,\n        payload: {\n          message: pendingMessage,\n          channel: currentOpenChannel,\n        }\n      });\n    }\n  }, [currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef]);\n}\n\nexport default useSendMessageCallback;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendFileMessage: (file: File) => Sendbird.FileMessageParams;\n  checkScrollBottom: () => boolean;\n  imageCompression?: {\n    compressionRate?: number,\n    resizingWidth?: number | string,\n    resizingHeight?: number | string,\n  };\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\ntype CallbackReturn = (file: File) => void;\n\nfunction useFileUploadCallback(\n  {\n    currentOpenChannel,\n    checkScrollBottom,\n    imageCompression = {},\n    onBeforeSendFileMessage,\n  }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): CallbackReturn {\n  return useCallback((file) => {\n    if (sdk && sdk.FileMessageParams) {\n      const {\n        compressionRate,\n        resizingWidth,\n        resizingHeight,\n      } = imageCompression;\n      const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n      const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n      const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n      // pxToNumber returns null if values are invalid\n      const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n        || utils.pxToNumber(resizingHeight);\n\n      const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n      const createParamsDefault = (file_): Sendbird.FileMessageParams => {\n        const params = new sdk.FileMessageParams();\n        params.file = file_;\n        return params;\n      };\n\n      if (canCompressImage) { // Using image compression\n        try {\n          const image: HTMLImageElement = document.createElement('img');\n          image.src = URL.createObjectURL(file);\n          image.onload = () => {\n            URL.revokeObjectURL(image.src);\n            const canvas = document.createElement('canvas');\n            const imageWidth = image.naturalWidth || image.width;\n            const imageHeight = image.naturalHeight || image.height;\n            let targetWidth = utils.pxToNumber(resizingWidth) || imageWidth;\n            let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n            // In canvas.toBlob(callback, mimeType, qualityArgument)\n            // qualityArgument doesnt work\n            // so in case compressibleDiamensions are not present, we use ratio\n            if (file.type === 'image/png' && !compressibleDiamensions) {\n              targetWidth *= compressionRate;\n              targetHeight *= compressionRate;\n            }\n\n            canvas.width = targetWidth;\n            canvas.height = targetHeight;\n            const context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0, targetWidth, targetHeight);\n            context.canvas.toBlob(\n              (newImageBlob) => {\n                const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n                if (createCustomParams) {\n                  logger.info('OpenChannel | useFileUploadCallback: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n                }\n                const params = onBeforeSendFileMessage ? onBeforeSendFileMessage(compressedFile) : createParamsDefault(compressedFile);\n                logger.info('OpenChannel | useFileUploadCallback: Uploading file message start', params);\n\n                const isBottom = checkScrollBottom();\n                const pendingMessage = currentOpenChannel.sendFileMessage(\n                  params,\n                  (message: SendbirdUIKit.ClientFileMessage, error) => {\n                    if (!error) {\n                      logger.info('OpenChannel | useFileUploadCallback: Sending message succeeded', message);\n                      messagesDispatcher({\n                        type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n                        payload: message,\n                      });\n                      if (isBottom) {\n                        setTimeout(() => {\n                          utils.scrollIntoLast();\n                        });\n                      }\n                    } else {\n                      logger.error('OpenChannel | useFileUploadCallback: Sending file message failed', { message, error });\n                      message.localUrl = URL.createObjectURL(file);\n                      message.file = file;\n                      messagesDispatcher({\n                        type: messageActionTypes.SENDING_MESSAGE_FAILED,\n                        payload: message,\n                      });\n                    }\n                  },\n                );\n\n                messagesDispatcher({\n                  type: messageActionTypes.SENDING_MESSAGE_START,\n                  payload: {\n                    message: {\n                      ...pendingMessage,\n                      url: URL.createObjectURL(file),\n                      // pending thumbnail message seems to be failed\n                      requestState: 'pending',\n                    },\n                    channel: currentOpenChannel,\n                  }\n                });\n              },\n              file.type,\n              compressionRate,\n            );\n          }\n        } catch (error) {\n          logger.warning('OpenChannel | useFileUploadCallback: Sending file message with image compression failed', error);\n        }\n      } else { // Not using image compression\n        if (createCustomParams) {\n          logger.info('OpenChannel | useFileUploadCallback: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n        }\n        const params = onBeforeSendFileMessage ? onBeforeSendFileMessage(file) : createParamsDefault(file);\n        logger.info('OpenChannel | useFileUploadCallback: Uploading file message start', params);\n\n        const isBottom = checkScrollBottom();\n        const pendingMessage = currentOpenChannel.sendFileMessage(\n          params,\n          (message: SendbirdUIKit.ClientFileMessage, error) => {\n            if (!error) {\n              logger.info('OpenChannel | useFileUploadCallback: Sending message succeeded', message);\n              messagesDispatcher({\n                type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n                payload: message,\n              });\n              if (isBottom) {\n                setTimeout(() => {\n                  utils.scrollIntoLast();\n                });\n              }\n            } else {\n              logger.error('OpenChannel | useFileUploadCallback: Sending file message failed', { message, error });\n              message.localUrl = URL.createObjectURL(file);\n              message.file = file;\n              messagesDispatcher({\n                type: messageActionTypes.SENDING_MESSAGE_FAILED,\n                payload: message,\n              });\n            }\n          }\n        );\n\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_START,\n          payload: {\n            message: {\n              ...pendingMessage,\n              url: URL.createObjectURL(file),\n              // pending thumbnail message seems to be failed\n              requestState: 'pending',\n            },\n            channel: currentOpenChannel,\n          }\n        });\n      }\n    }\n  }, [currentOpenChannel, onBeforeSendFileMessage, checkScrollBottom, imageCompression]);\n}\n\nexport default useFileUploadCallback;\n","import Sendbird from 'sendbird';\nimport { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n  onBeforeSendUserMessage?: (text) => Sendbird.UserMessageParams;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload :any }) => void;\n}\ntype CallbackReturn = (messageId, text, callback) => void;\n\nfunction useUpdateMessageCallback(\n  { currentOpenChannel, onBeforeSendUserMessage }: MainProps,\n  { sdk, logger, messagesDispatcher }: ToolProps,\n): CallbackReturn {\n  return useCallback((messageId, text, callback) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    if (onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function') {\n      logger.info('OpenChannel | useUpdateMessageCallback: Creating params using onBeforeUpdateUserMessage');\n    }\n    const params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text) : createParamsDefault(text);\n    currentOpenChannel.updateUserMessage(messageId, params, (message, error) => {\n      if (callback) {\n        callback();\n      }\n      if (!error) {\n        logger.info('OpenChannel | useUpdateMessageCallback: Updating message succeeded', { message, params });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentOpenChannel,\n            message,\n          },\n        });\n      } else {\n        logger.warning('OpenChannel | useUpdateMessageCallback: Updating message failed', error);\n      }\n    });\n  }, [currentOpenChannel, onBeforeSendUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\n\ntype CallbackReturn = (\n  message: SendbirdUIKit.ClientUserMessage | SendbirdUIKit.ClientFileMessage,\n  callback?: () => void,\n) => void;\n\nfunction useDeleteMessageCallback(\n  { currentOpenChannel }: MainProps,\n  { logger, messagesDispatcher }: ToolProps,\n): CallbackReturn {\n  return useCallback((message, callback) => {\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message', message);\n    const { sendingStatus } = message;\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message requestState', sendingStatus);\n\n    if (sendingStatus === 'failed' || sendingStatus === 'pending') {\n      logger.info('OpenChannel | useDeleteMessageCallback: Deleted message from local', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (callback) {\n        callback();\n      }\n    } else {\n      currentOpenChannel.deleteMessage(message, (error) => {\n        logger.info('OpenChannel | useDeleteMessageCallback: Deleting message on server', sendingStatus);\n        if (callback) {\n          callback();\n        }\n        if (!error) {\n          logger.info('OpenChannel | useDeleteMessageCallback: Deleting message succeeded', message);\n          messagesDispatcher({\n            type: messageActionTypes.ON_MESSAGE_DELETED,\n            payload: {\n              channel: currentOpenChannel,\n              messageId: message.messageId,\n            },\n          });\n        } else {\n          logger.warning('OpenChannel | useDeleteMessageCallback: Deleting message failed', error);\n        }\n      });\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  currentOpenChannel: SendbirdUIKit.OpenChannelType;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n}\ntype CallbackReturn = (failedMessage: SendbirdUIKit.ClientUserMessage | SendbirdUIKit.ClientFileMessage) => void;\n\nfunction useResendMessageCallback(\n  { currentOpenChannel }: MainProps,\n  { logger, messagesDispatcher }: ToolProps,\n): CallbackReturn {\n  return useCallback((failedMessage) => {\n    logger.info('OpenChannel | useResendMessageCallback: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function' && failedMessage.isResendable()) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESENDING_MESSAGE_START,\n        payload: {\n          channel: currentOpenChannel,\n          message: failedMessage,\n        },\n      });\n\n      // userMessage\n      if (messageType === 'user' && failedMessage.messageType === 'user') {\n        currentOpenChannel.resendUserMessage(failedMessage, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | useResendMessageCallback: Reseding message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | useResendMessageCallback: Resending message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n        return;\n      }\n\n      // fileMessage\n      if (messageType === 'file' && failedMessage.messageType === 'file') {\n        currentOpenChannel.resendFileMessage(failedMessage, file, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | useResendMessageCallback: Resending file message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | useResendMessageCallback: Resending file message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('OpenChannel | useResendMessageCallback: Message is not resendable');\n      logger.warning('OpenChannel | useResendMessageCallback: Message is not resendable', failedMessage);\n    }\n  }, [currentOpenChannel]);\n}\n\nexport default useResendMessageCallback;\n","import React, {\n  useRef,\n  useEffect,\n  useReducer,\n  useContext,\n  useMemo,\n} from 'react';\nimport * as utils from './utils';\nimport './index.scss';\n\nimport MessageInputWrapper from './components/MessageInpuetWrapper';\nimport FrozenChannelNotification from './components/FrozenNotification';\nimport OpenchannelConversationHeader from '../../ui/OpenchannelConversationHeader';\nimport OpenchannelConversationScroll from './components/OpenchannelConversationScroll';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport { OpenChannelProps } from '../../index';\nimport messagesReducer from './dux/reducers';\nimport messagesInitialState from './dux/initialState';\nimport * as messageActionTypes from './dux/actionTypes';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext.jsx';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { scrollIntoLast } from './utils';\nimport * as topics from '../../lib/pubSub/topics';\n\n// hooks\nimport useSetChannel from './hooks/useSetChannel';\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useCheckScrollBottom from './hooks/useCheckScrollBottom';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useFileUploadCallback from './hooks/useFileUploadCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation';\n\ninterface Props extends OpenChannelProps {\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: SendbirdUIKit.UserStore,\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    pubSub: any,\n    disableUserProfile?: boolean,\n    renderUserProfile?(): JSX.Element,\n    imageCompression?: {\n      compressionRate?: number,\n      resizingWidth?: number | string,\n      resizingHeight?: number | string,\n    },\n  };\n}\n\nexport const OpenchannelConversation = (props: Props): JSX.Element => {\n  // props\n  const {\n    useMessageGrouping,\n    channelUrl,\n    stores,\n    config,\n    queries = {},\n    disableUserProfile,\n    fetchingParticipants = false, // We didn't decide to support fetching participant list\n    renderCustomMessage,\n    renderUserProfile,\n    renderChannelTitle,\n    renderMessageInput,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onChatHeaderActionClick\n  } = props;\n\n  const {\n    sdkStore,\n    userStore,\n  } = stores;\n  const {\n    userId,\n    isOnline,\n    logger,\n    pubSub,\n    imageCompression,\n  } = config;\n\n  const {\n    sdk\n  } = sdkStore;\n  const {\n    user\n  } = userStore;\n\n  // hook variables\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const {\n    allMessages,\n    loading,\n    initialized,\n    currentOpenChannel,\n    isInvalid,\n    hasMore,\n    lastMessageTimestamp,\n    operators,\n    bannedParticipantIds,\n    mutedParticipantIds,\n  } = messagesStore;\n  // ref\n  const messageInputRef = useRef(null); // useSendMessageCallback\n  const conversationScrollRef = useRef(null); // useScrollAfterSendMessageCallback\n  const { stringSet } = useContext(LocalizationContext);\n\n  // const\n  const sdkInit = sdkStore.initialized;\n  const userFilledMessageListParams = queries ? queries.messageListParams: null;\n  const disabled = !initialized\n    || !isOnline\n    || utils.isDisabledBecauseFrozen(currentOpenChannel, userId);\n  // || utils.isDisabledBecauseMuted(mutedParticipantIds, userId)\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  // useMemo\n  const amIBanned = useMemo(() => {\n    return bannedParticipantIds.indexOf(user.userId) >= 0;\n  }, [channelUrl, bannedParticipantIds, user]);\n  const amIMuted = useMemo(() => {\n    return mutedParticipantIds.indexOf(user.userId) >= 0;\n  }, [channelUrl, mutedParticipantIds, user]);\n  const amIOperator = useMemo(() => {\n    return operators.map(operator => operator.userId).indexOf(user.userId) >= 0;\n  }, [channelUrl, operators, user]);\n\n  // use hooks\n  useSetChannel(\n    { channelUrl, sdkInit, fetchingParticipants },\n    { sdk, logger, messagesDispatcher },\n  );\n  const checkScrollBottom = useCheckScrollBottom(\n    { conversationScrollRef },\n    { logger },\n  );\n  useHandleChannelEvents(\n    { currentOpenChannel, checkScrollBottom },\n    { sdk, logger, messagesDispatcher },\n  );\n  useInitialMessagesFetch(\n    { currentOpenChannel, userFilledMessageListParams },\n    { sdk, logger, messagesDispatcher },\n  );\n  const onScroll = useScrollCallback(\n    { currentOpenChannel, lastMessageTimestamp },\n    { sdk, logger, messagesDispatcher, hasMore, userFilledMessageListParams },\n  );\n  const handleSendMessage = useSendMessageCallback(\n    { currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef },\n    { sdk, logger, messagesDispatcher },\n  );\n  const handleFileUpload = useFileUploadCallback(\n    { currentOpenChannel, onBeforeSendFileMessage, checkScrollBottom, imageCompression },\n    { sdk, logger, messagesDispatcher },\n  );\n  const updateMessage = useUpdateMessageCallback(\n    { currentOpenChannel, onBeforeSendUserMessage },\n    { sdk, logger, messagesDispatcher },\n  );\n  const deleteMessage = useDeleteMessageCallback(\n    { currentOpenChannel },\n    { logger, messagesDispatcher },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentOpenChannel },\n    { logger, messagesDispatcher },\n  );\n\n  // handle API calls from withSendbird\n  useEffect(() => {\n    const subscriber = new Map();\n    if (!pubSub || !pubSub.subscribe) {\n      return;\n    }\n    subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n      const { channel, message } = msg;\n      scrollIntoLast();\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n          payload: message,\n        });\n      }\n    }));\n    subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n      const { channel, message } = msg;\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_START,\n          payload: message,\n        });\n      }\n    }));\n    subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n      const { channel, message } = msg;\n      scrollIntoLast();\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n          payload: message,\n        });\n      }\n    }));\n    subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n      const { channel, message, fromSelector } = msg;\n      if (fromSelector && channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      }\n    }));\n    subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n      const { channel, messageId } = msg;\n      if (channel && (channelUrl === channel.url)) {\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      }\n    }));\n\n    return () => {\n      if (subscriber) {\n        subscriber.forEach((s) => {\n          try {\n            s.remove();\n          } catch {\n            //\n          }\n        });\n      }\n    };\n  }, [channelUrl, sdkInit]);\n\n  if (\n    !currentOpenChannel\n    || !currentOpenChannel.url\n    || amIBanned\n  ) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (loading) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n\n  return (\n    <UserProfileProvider\n      className={COMPONENT_CLASS_NAME}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChannelTitle\n          ? renderChannelTitle({\n            channel: currentOpenChannel,\n            user: user,\n          })\n          : (\n            <OpenchannelConversationHeader\n              title={currentOpenChannel.name}\n              subTitle={`${utils.kFormatter(currentOpenChannel.participantCount)} ${stringSet.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS}`}\n              coverImage={currentOpenChannel.coverUrl}\n              onActionClick={onChatHeaderActionClick}\n              amIOperator={amIOperator}\n            />\n          )\n      }\n      {\n        currentOpenChannel.isFrozen && (\n          <FrozenChannelNotification />\n        )\n      }\n      <OpenchannelConversationScroll\n        ref={conversationScrollRef}\n        renderCustomMessage={renderCustomMessage}\n        openchannel={currentOpenChannel}\n        user={user}\n        useMessageGrouping={useMessageGrouping}\n        isOnline={isOnline}\n        allMessages={allMessages}\n        onScroll={onScroll}\n        hasMore={hasMore}\n        updateMessage={updateMessage}\n        deleteMessage={deleteMessage}\n        resendMessage={resendMessage}\n      />\n      {\n        renderMessageInput\n          ? (\n            renderMessageInput({\n              channel: currentOpenChannel,\n              user: user,\n              disabled: disabled,\n            })\n          )\n          : (\n            <MessageInputWrapper\n              channel={currentOpenChannel}\n              user={user}\n              ref={messageInputRef}\n              disabled={disabled || amIMuted}\n              onSendMessage={handleSendMessage}\n              onFileUpload={handleFileUpload}\n              renderMessageInput={renderMessageInput}\n            />\n          )\n      }\n    </UserProfileProvider>\n  );\n};\n\nexport default withSendbirdContext(OpenchannelConversation);\n"],"names":["getMessageCreatedAt","message","format","createdAt","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","isSameGroup","comparingMessage","messageType","sender","userId","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","kFormatter","num","Math","abs","toFixed","isOperator","openChannel","operators","map","operator","indexOf","isDisabledBecauseFrozen","isFrozen","fetchWithListQuery","listQuery","logger","eachQueryNextCallback","fetchList","query","hasNext","next","users","warning","info","pxToNumber","px","parsed","Number","parseFloat","isNaN","MessageInputWrapper","_a","ref","channel","user","disabled","onSendMessage","onFileUpload","renderMessageInput","stringSet","useContext","LocalizationContext","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","React","forwardRef","FrozenNotification","LabelTypography","CAPTION_2","CHANNEL_FROZEN","COMPONENT_CLASS_NAME","OpenchannelConversationHeader","coverImage","_b","title","LabelStringSet","NO_TITLE","_c","subTitle","amIOperator","onActionClick","width","height","IconTypes","CHANNELS","IconColors","CONTENT","H_2","LabelColors","ONBACKGROUND_1","BODY_2","ONBACKGROUND_2","INFO","MEMBERS","PRIMARY","copyToClipboard","text","window","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","OpenChannelMessageStatusTypes","NONE","PENDING","FAILED","CANCELED","SUCCEEDED","getSenderFromMessage","_sender","checkIsSent","status","checkIsPending","checkIsFailed","checkIsByMe","isFineCopy","length","isFineResend","isResendable","isFineEdit","isFineDelete","showMenuTrigger","props","OpenchannelUserMessage","className","resendMessage","showEdit","showRemove","chainTop","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","useState","contextStyle","setContextStyle","injectingClassName","Array","isArray","push","isByMe","isPending","isFailed","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","word","updatedAt","uuidv4","BODY_1","MESSAGE_EDITED","useEffect","current","clientHeight","top","innerWidth","join","toggleDropdown","profileUrl","closeDropdown","paddingTop","paddingBottom","close","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","SPINNER","ERROR","MORE","CONTENT_INVERSE","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelAdminMessage","__spreadArrays","URL_REG","createUrlTester","regexp","test","checkOGIsEnalbed","ogMetaData","url","OpenchannelOGMessage","defaultImage","messageComponentRef","isUrl","wordClassName","openLink","open","SUBTITLE_2","description","alt","THUMBNAIL_NONE","SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","OpenchannelThumbnailMessage","onClick","localUrl","thumbnails","thumbnailUrl","isMessageSent","PLAY","PHOTO","ON_BACKGROUND_2","checkFileType","fileUrl","result","imageFile","audioFile","FILE_DOCUMENT","FILE_AUDIO","truncate","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","ceil","backChars","floor","substr","OpenchannelFileMessage","openFileUrl","name","RemoveMessageModal","onCloseModal","onDeleteMessage","MODAL__DELETE_MESSAGE__TITLE","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","UNKNOWN","SendingMessageStatus","getMessageType","isUserMessage","isAdminMessage","isImage","isVideo","MessageHoc","editDisabled","hasSeperator","renderCustomMessage","deleteMessage","updateMessage","chainBottom","RenderedMessage","setShowEdit","_d","setShowRemove","_e","showFileViewer","setShowFileViewer","editMessageInputRef","requestState","messageId","OpenChannelFileMessage","OpenChannelOGMessage","OpenChannelThumbnailMessage","OpenChannelUserMessage","OpenchannelConversationScroll","useMessageGrouping","openchannel","allMessages","isOnline","hasMore","onScroll","scrollRef","showScrollDownButton","setShowScrollDownButton","handleOnScroll","e","element","target","navigator","userAgent","nodes","querySelectorAll","first_1","scrollIntoView","scrollToBottom","scrollTo","hasMessage","index","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","PlaceHolderTypes","NO_MESSAGES","CHEVRON_DOWN","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","RESET_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_PREV_MESSAGES_FAIL","SENDING_MESSAGE_FAILED","SENDING_MESSAGE_SUCCEEDED","SENDING_MESSAGE_START","RESENDING_MESSAGE_START","FETCH_PARTICIPANT_LIST","FETCH_BANNED_USER_LIST","FETCH_MUTED_USER_LIST","ON_MESSAGE_RECEIVED","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","ON_OPERATOR_UPDATED","ON_USER_ENTERED","ON_USER_EXITED","ON_USER_MUTED","ON_USER_UNMUTED","ON_USER_BANNED","ON_USER_UNBANNED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_CHANNEL_CHANGED","ON_META_DATA_CREATED","ON_META_DATA_UPDATED","ON_META_DATA_DELETED","ON_META_COUNTERS_CREATED","ON_META_COUNTERS_UPDATED","ON_META_COUNTERS_DELETED","ON_MENTION_RECEIVED","reducer","state","action","actionTypes","gottenChannel","payload","isInvalid","currentOpenChannel","participants","bannedParticipantIds","mutedParticipantIds","loading","messages","lastMessageTimestamp","actionChannelUrl","receivedMessages_1","_hasMore","_lastMessageTimestamp","stateChannel","stateChannelUrl","filteredAllMessages","filter","find","compareIds","initialized","sentMessage_1","newMessages","m","reqId","sentMessage_2","eventedChannel","resentMessage_1","fetchedParticipantList","fetchedBannedUserList","every","fetchedMutedUserList","receivedMessage","updatedMessage_1","currentChannel","isIdentical","deletedMessageId_1","updatedOperators","enteredUser","exitedUser_1","participant","mutedUser","unmutedUser_1","bannedUser","unbannedUser_1","frozenChannel","frozen","unfrozenChannel","changedChannel","initialState","useSetChannel","channelUrl","sdkInit","fetchingParticipants","sdk","messagesDispatcher","OpenChannel","getChannel","messageActionTypes","enter","_","participantListQuery","createParticipantListQuery","bannedParticipantListQuery","createBannedUserListQuery","mutedParticipantListQuery","createMutedUserListQuery","utils","useHandleChannelEvents","checkScrollBottom","messageReceiverId","ChannelHandler","onMessageReceived","scrollToEnd","onMessageUpdated","onMessageDeleted","onOperatorUpdated","onUserEntered","onUserExited","onUserMuted","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelFrozen","onChannelUnfrozen","onChannelChanged","onMetaDataCreated","metaData","onMetaDataUpdated","onMetaDataDeleted","metaDataKeys","onMetaCountersCreated","metaCounter","onMetaCountersUpdated","onMetaCountersDeleted","metaCounterKeys","onMentionReceived","addChannelHandler","removeChannelHandler","useInitialMessagesFetch","userFilledMessageListParams","MessageListParams","getMessagesByTimestamp","messageListParams_1","prevResultSize","isInclusive","includeReplies","includeReactions","Object","keys","forEach","key","messageListParams","Date","getTime","useScrollCallback","useCallback","callback","hasMore_1","lastMessageTimestamp_1","useCheckScrollBottom","conversationScrollRef","isBottom","conversationScroll","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","UserMessageParams","value","createParamsDefault","txt","trim","toString","params","createCustomParams","isBottom_1","pendingMessage","sendUserMessage","useFileUploadCallback","imageCompression","onBeforeSendFileMessage","file","FileMessageParams","compressionRate_1","resizingWidth_1","resizingHeight_1","createCustomParams_1","compressibleFileType","compressibleRatio","compressibleDiamensions_1","canCompressImage","createParamsDefault_1","file_","image_1","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWidth","naturalWidth","imageHeight","naturalHeight","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","sendFileMessage","useUpdateMessageCallback","updateUserMessage","useDeleteMessageCallback","useResendMessageCallback","failedMessage","resendUserMessage","resendFileMessage","console","OpenchannelConversation","stores","config","queries","renderChannelTitle","onChatHeaderActionClick","sdkStore","userStore","pubSub","useReducer","messagesReducer","messagesInitialState","messagesStore","userDefinedDisableUserProfile","userDefinedRenderProfile","amIBanned","amIMuted","handleSendMessage","handleFileUpload","subscriber","Map","subscribe","set","topics","msg","fromSelector","s","remove","NO_CHANNELS","LOADING","WRONG","participantCount","OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS","coverUrl","FrozenChannelNotification","withSendbirdContext"],"mappings":"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"}