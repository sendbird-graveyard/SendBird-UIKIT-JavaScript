{"version":3,"file":"Channel.js","sources":["../src/smart-components/Conversation/dux/actionTypes.js","../src/smart-components/Conversation/types.js","../src/smart-components/Conversation/utils.js","../src/smart-components/Conversation/dux/initialState.js","../src/smart-components/Conversation/dux/reducers.js","../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../src/smart-components/Conversation/hooks/useGetChannel.js","../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../src/smart-components/Conversation/hooks/useHandleReconnect.js","../src/smart-components/Conversation/hooks/useScrollCallback.js","../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../src/smart-components/Conversation/hooks/useSetReadStatus.js","../src/ui/ReactionButton/index.jsx","../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../src/ui/MessageStatus/index.jsx","../src/ui/ReactionBadge/index.jsx","../src/ui/Tooltip/index.jsx","../src/ui/TooltipWrapper/index.jsx","../src/ui/EmojiReactions/index.jsx","../src/ui/Message/memoizedMessageText.jsx","../src/hooks/onMouseHover.jsx","../src/ui/Message/index.jsx","../src/ui/AdminMessage/index.jsx","../src/ui/ThumbnailMessage/util.js","../src/ui/ThumbnailMessage/index.jsx","../src/ui/FileMessage/index.jsx","../src/smart-components/Conversation/components/RemoveMessage.jsx","../src/ui/UnknownMessage/utils.js","../src/ui/UnknownMessage/index.jsx","../src/ui/OGMessage/const.js","../src/ui/OGMessage/utils.js","../src/ui/OGMessage/memoizedMessageText.jsx","../src/ui/OGMessage/index.jsx","../src/smart-components/Conversation/components/MessageHOC.jsx","../src/smart-components/Conversation/components/ConversationScroll.jsx","../src/smart-components/Conversation/components/Notification.jsx","../src/smart-components/Conversation/components/FrozenNotification.tsx","../src/smart-components/Conversation/components/TypingIndicator.jsx","../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../src/ui/ConnectionStatus/index.jsx","../src/ui/ChatHeader/utils.js","../src/ui/AutoRefresh/index.jsx","../src/ui/ChatHeader/index.jsx","../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nexport const SET_READ_STATUS = 'SET_READ_STATUS';\n","import { isImage, isVideo } from '../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message) => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if ((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return '';\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../../ui/MessageStatus/type';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport { SendingMessageStatus } from './types';\n\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = SendingMessageStatus;\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  emojiContainer: {},\n  readStatus: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages } from '../utils';\nimport { SendingMessageStatus } from '../types';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = SendingMessageStatus;\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message } = action.payload;\n      const { currentGroupChannel = {}, unreadCount, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (!(state.allMessages.map((msg) => msg.messageId).indexOf(message.messageId) < 0)) {\n        return state;\n      }\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount: unreadCount + 1,\n        unreadSince: (unreadCount === 0)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.SET_READ_STATUS: {\n      return {\n        ...state,\n        readStatus: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        if (compareIds(channel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nfunction useInitialMessagesFetch({ currentGroupChannel, userFilledMessageListQuery }, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByMessageId) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      currentGroupChannel.getMessagesByTimestamp(\n        new Date().getTime(),\n        messageListParams,\n      )\n        .then((messages) => {\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimeStamp = hasMore\n            ? messages[0].createdAt\n            : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages,\n              hasMore,\n              lastMessageTimeStamp,\n              currentGroupChannel,\n            },\n          });\n        })\n        .catch((error) => {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel,\n            },\n          });\n        })\n        .finally(() => {\n          currentGroupChannel.markAsRead();\n          setTimeout(() => utils.scrollIntoLast());\n        });\n    }\n  }, [channelUrl, userFilledMessageListQuery]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', message);\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!');\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', message);\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\n\nexport default function useSetReadStatus({ allMessages, currentGroupChannel }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (!sdk.ChannelHandler || !currentGroupChannel.url) {\n      return () => {};\n    }\n    // todo: move to reducer?\n    const setReadStatus = () => {\n      const allReadStatus = allMessages.reduce((accumulator, msg) => {\n        if (msg.messageId !== 0) {\n          return {\n            ...accumulator,\n            [msg.messageId]: utils.getParsedStatus(msg, currentGroupChannel),\n          };\n        }\n        return accumulator;\n      }, {});\n      messagesDispatcher({\n        type: messageActionTypes.SET_READ_STATUS,\n        payload: allReadStatus,\n      });\n    };\n    if (allMessages.length > 0) {\n      setReadStatus();\n    }\n\n    const channelUrl = currentGroupChannel.url;\n    const handler = new sdk.ChannelHandler();\n    const handleMessageStatus = (c) => {\n      if (channelUrl === c.url) {\n        setReadStatus();\n      }\n    };\n    handler.onDeliveryReceiptUpdated = handleMessageStatus;\n    handler.onReadReceiptUpdated = handleMessageStatus;\n    // Add this channel event handler to the SendBird object.\n    const handlerId = uuidv4();\n    logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n    sdk.addChannelHandler(handlerId, handler);\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n        sdk.removeChannelHandler(handlerId);\n      }\n    };\n  }, [allMessages, currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    children,\n    width,\n    height,\n    onClick,\n    selected,\n    className,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={ref}\n      className={`sendbird-reaction-button${selected ? '--selected' : ''} ${injectingClassName.join(' ')}`}\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      role=\"button\"\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nReactionButton.defaultProps = {\n  selected: false,\n  width: '36px',\n  height: '36px',\n  onClick: () => { },\n  className: '',\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.EMOJI_FAILED} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\nimport MessageStatusType from './type';\n\nimport { getMessageCreatedAt } from '../../utils/utils';\n\nconst MessageStatusTypes = MessageStatusType;\nexport { MessageStatusTypes };\nexport default function MessageStatus({\n  message,\n  status,\n  className,\n}) {\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  const label = () => {\n    switch (status) {\n      case MessageStatusType.FAILED:\n      case MessageStatusType.PENDING: {\n        return null;\n      }\n      case MessageStatusType.SENT:\n      case MessageStatusType.DELIVERED:\n      case MessageStatusType.READ: {\n        return (\n          <Label\n            className=\"sendbird-message-status__text\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getMessageCreatedAt(message)}\n          </Label>\n        );\n      }\n      default: return null;\n    }\n  };\n\n  const icon = {\n    PENDING: (\n      <Loader className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\">\n        <Icon type={IconTypes.SPINNER} width=\"16px\" height=\"16px\" />\n      </Loader>\n    ),\n    SENT: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.SENT} fillColor={IconColors.SENT} />,\n    DELIVERED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DELIVERED} fillColor={IconColors.SENT} />,\n    READ: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.READ} fillColor={IconColors.READ} />,\n    FAILED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.ERROR} />,\n  };\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message-status'].join(' ')}>\n      {icon[status]}\n      <br />\n      {label(status)}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nMessageStatus.defaultProps = {\n  message: null,\n  status: '',\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  if (selected && !isAdd) {\n    injectingClassName.unshift('sendbird-reaction-badge--selected');\n  } else if (isAdd) {\n    injectingClassName.push('sendbird-reaction-badge--is-add');\n  } else {\n    injectingClassName.unshift('sendbird-reaction-badge');\n  }\n\n  return (\n    <div\n      ref={ref}\n      tabIndex={0}\n      role=\"button\"\n      className={injectingClassName.join(' ')}\n      onClick={onClick}\n      onKeyDown={onClick}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label className={children && count ? 'sendbird-reaction-badge__inner__count' : ''} type={LabelTypography.CAPTION_3} color={LabelColors.ONBACKGROUND_1}>\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label from '../Label';\n\nconst CLASS_NAME = 'sendbird-tooltip';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <Label\n        className={`${CLASS_NAME}__text`}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst CLASS_NAME = 'sendbird-tooltip-wrapper';\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const injectingClassName = Array.isArray(className)\n    ? [CLASS_NAME, ...className]\n    : [CLASS_NAME, className];\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className={`${CLASS_NAME}__children`}\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className={`${CLASS_NAME}__hover-tooltip`}\n            style={{\n              bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)`,\n            }}\n          >\n            <div\n              className={`${CLASS_NAME}__hover-tooltip__inner`}\n            >\n              <div\n                className={`${CLASS_NAME}__hover-tooltip__inner__tooltip-container`}\n                style={{\n                  left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)`,\n                }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React, { useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ReactionBadge from '../ReactionBadge';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu from '../ContextMenu';\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function EmojiReactions({\n  className,\n  userId,\n  message,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift('sendbird-emoji-reactions');\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const imageWidth = '20px';\n  const imageHeight = '20px';\n  const emojiReactionAddRef = useRef(null);\n  const { reactions = [] } = message;\n  const messageReactions = reactions;\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-emoji-reactions--inner\">\n        {\n          messageReactions && (\n            messageReactions.map((reaction) => {\n              const { userIds = [] } = reaction;\n              const emojiUrl = emojiAllMap.get(reaction.key) || '';\n              const reactedUserCount = userIds.length;\n              const reactedByMe = !(userIds.indexOf(userId) < 0);\n              const nicknames = userIds\n                .filter((currentUserId) => currentUserId !== userId)\n                .map((currentUserId) => (\n                  membersMap.get(currentUserId) || stringSet.TOOLTIP__UNKOWN_USER\n                ));\n              const stringSetForMe = (nicknames.length > 0)\n                ? stringSet.TOOLTIP__AND_YOU : stringSet.TOOLTIP__YOU;\n              return (\n                <TooltipWrapper\n                  className=\"sendbird-emoji-reactions__emoji-reaction\"\n                  key={reaction.key}\n                  hoverTooltip={\n                    userIds.length > 0 && (\n                      <Tooltip>\n                        <>\n                          {\n                            `${(\n                              nicknames.join(', ')\n                            )}${(\n                              reactedByMe\n                                ? stringSetForMe\n                                : ''\n                            )}`\n                          }\n                        </>\n                      </Tooltip>\n                    )\n                  }\n                >\n                  <ReactionBadge\n                    count={reactedUserCount}\n                    selected={reactedByMe}\n                    onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n                  >\n                    <ImageRenderer\n                      circle\n                      url={emojiUrl}\n                      width={imageWidth}\n                      height={imageHeight}\n                      defaultComponent={(\n                        <Icon\n                          width={imageWidth}\n                          height={imageHeight}\n                          type={IconTypes.EMOJI_FAILED}\n                        />\n                      )}\n                    />\n                  </ReactionBadge>\n                </TooltipWrapper>\n              );\n            })\n          )\n        }\n        {\n          (messageReactions.length < emojiAllMap.size)\n          && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <ReactionBadge\n                  isAdd\n                  onClick={toggleDropdown}\n                  className=\"sendbird-emoji-reactions__emoji-reaction-add\"\n                  ref={emojiReactionAddRef}\n                >\n                  <Icon\n                    width={imageWidth}\n                    height={imageHeight}\n                    fillColor={IconColors.ON_BACKGROUND_3}\n                    type={IconTypes.EMOJI_REACTIONS_ADD}\n                  />\n                </ReactionBadge>\n              )}\n              menuItems={(closeDropdown) => (\n                <MemoizedEmojiListItems\n                  message={message}\n                  parentRef={emojiReactionAddRef}\n                  parentContainRef={emojiReactionAddRef}\n                  closeDropdown={closeDropdown}\n                  spaceFromTrigger={{ y: 4 }}\n                />\n              )}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nEmojiReactions.propTypes = {\n  userId: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    reactions: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\nEmojiReactions.defaultProps = {\n  className: '',\n  membersMap: new Map(),\n  userId: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport uuidv4 from '../../utils/uuid';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(/\\r/);\n    const matchedMessage = splitMessage\n      .map((word) => (word !== '' ? word : <br />));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import { useEffect } from 'react';\n\nconst MOUSE_ENTER = 'mouseenter';\nconst MOUSE_LEAVE = 'mouseleave';\n\nconst useMouseHover = ({\n  ref,\n  setHover,\n}) => {\n  const handleMouseOver = () => {\n    if (ref.current) {\n      setHover(true);\n    }\n  };\n  const handleMouseOut = () => {\n    if (ref.current) {\n      setHover(false);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = ref;\n    current.addEventListener(MOUSE_ENTER, handleMouseOver);\n    current.addEventListener(MOUSE_LEAVE, handleMouseOut);\n    return () => {\n      current.removeEventListener(MOUSE_ENTER, handleMouseOver);\n      current.removeEventListener(MOUSE_LEAVE, handleMouseOut);\n    };\n  });\n};\n\nexport default useMouseHover;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport UserProfile from '../UserProfile';\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport MessageStatus from '../MessageStatus';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  copyToClipboard,\n  getMessageCreatedAt,\n  getSenderName,\n  getSenderProfileUrl,\n  getIsSentFromStatus,\n} from './utils';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst noop = () => { };\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function Message(props) {\n  const {\n    isByMe,\n    userId,\n    message,\n    className,\n    resendMessage,\n    disabled,\n    showEdit,\n    showRemove,\n    status,\n    useReaction,\n    emojiAllMap,\n    membersMap,\n    toggleReaction,\n    memoizedEmojiListItems,\n    chainTop,\n    chainBottom,\n  } = props;\n\n  if (!message) return null;\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  injectingClassName.push(`sendbird-message${isByMe ? '--outgoing' : '--incoming'}`);\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-user-message-word',\n  });\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message'].join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUserMessage\n              userId={userId}\n              message={message}\n              resendMessage={resendMessage}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUserMessage\n              userId={userId}\n              message={message}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])).isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showEdit: PropTypes.func,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  userId: '',\n  resendMessage: noop,\n  className: '',\n  showEdit: noop,\n  showRemove: noop,\n  status: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUserMessage({\n  userId,\n  message,\n  showEdit,\n  disabled,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  // TODO: when message.requestState is succeeded, consider if it's SENT or DELIVERED\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-user-message--outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div\n          className=\"sendbird-user-message__left-padding\"\n        >\n          <div className=\"sendbird-user-message__more\" ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className=\"sendbird-user-message__more__menu\"\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          className=\"sendbird-user-message--copy\"\n                          onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                        >\n                          Copy\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          onClick={() => {\n                            if (disabled) { return; }\n                            showEdit(true);\n                            closeDropdown();\n                          }}\n                        >\n                          Edit\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem\n                      onClick={() => {\n                        if (disabled) { return; }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__add-reaction\"\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-user-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-user-message__text-balloon\">\n          <div className=\"sendbird-user-message__text-balloon__inner\">\n            <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n              <Label\n                className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                <MemoizedMessageText />\n              </Label>\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUserMessage({\n  userId,\n  message,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className=\"sendbird-user-message--incoming\"\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div className=\"sendbird-user-message--body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-user-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-user-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-user-message__text-balloon\">\n            <div className=\"sendbird-user-message__text-balloon__inner\">\n              <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n                <Label\n                  className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  <MemoizedMessageText />\n                </Label>\n              </div>\n              {\n                showEmojiReactions && (\n                  <EmojiReactions\n                    className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                    userId={userId}\n                    message={message}\n                    emojiAllMap={emojiAllMap}\n                    membersMap={membersMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"sendbird-user-message__right-padding\">\n          <div\n            className=\"sendbird-user-message__more\"\n            ref={parentContainRef}\n            style={{ top: chainTop ? '6px' : '22px' }}\n          >\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        message={message}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                  >\n                    <MenuItem\n                      className=\"sendbird-user-message--copy\"\n                      onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                    >\n                      Copy\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-user-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nIncomingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingUserMessage.defaultProps = {\n  message: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nOutgoingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  disabled: PropTypes.bool,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUserMessage.defaultProps = {\n  message: {},\n  resendMessage: noop,\n  showEdit: noop,\n  showRemove: noop,\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!message.messageType || message.messageType !== 'admin') { // change to use message.isAdminMessage()\n    return null;\n  }\n\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  return (\n    <div className={[...injectingClassName, 'sendbird-admin-message'].join(' ')}>\n      <Label className=\"sendbird-admin-message__text\" type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport default {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n};\n","import React, { useContext, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n} from './util';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  isImage,\n  isVideo,\n  unSupported,\n} from '../FileViewer/types';\nimport {\n  getSenderName,\n  getSenderProfileUrl,\n} from '../../utils/utils';\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst noop = () => { };\n\nconst OUTGOING_THUMBNAIL_MESSAGE = 'sendbird-outgoing-thumbnail-message';\nconst INCOMING_THUMBNAIL_MESSAGE = 'sendbird-incoming-thumbnail-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function ThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  isByMe,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  return (\n    isByMe\n      ? (\n        <OutgoingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          disabled={disabled}\n          chainTop={chainTop}\n          showRemove={showRemove}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          resendMessage={resendMessage}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n      : (\n        <IncomingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          chainTop={chainTop}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n  );\n}\n\nexport function OutgoingThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={OUTGOING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__left-padding`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    color={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              isMessageSent && showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <MessageStatus\n                message={message}\n                status={status}\n                className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__status`}\n              />\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__body`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap`}\n          >\n            <div\n              className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n              tabIndex={0}\n              role=\"button\"\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                            url={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                          >\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingThumbnailMessage({\n  message = {},\n  userId,\n  onClick,\n  status,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const avatarRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={INCOMING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      {\n        !chainTop && (\n          <Label\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__sender-name`}\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message) || ''}\n          </Label>\n        )\n      }\n      <div className={`${INCOMING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__body`}>\n          <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap`}>\n            {\n              !chainBottom && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <Avatar\n                      ref={avatarRef}\n                      onClick={() => {\n                        if (!disableUserProfile) {\n                          toggleDropdown();\n                        }\n                      }}\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__avatar`}\n                      src={getSenderProfileUrl(message)}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      /**\n                       * parentRef: For catching location(x, y) of MenuItems\n                       * parentContainRef: For toggling more options(menus & reactions)\n                       */\n                      parentRef={avatarRef}\n                      parentContainRef={avatarRef}\n                      closeDropdown={closeDropdown}\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                    >\n                      {\n                        renderUserProfile\n                          ? renderUserProfile({\n                            user: message.sender,\n                            close: closeDropdown,\n                          })\n                          : (\n                            <UserProfile\n                              user={message.sender}\n                              onSuccess={closeDropdown}\n                            />\n                          )\n                      }\n                    </MenuItems>\n                  )}\n                />\n              )\n            }\n            <div\n              className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              role=\"button\"\n              tabIndex={0}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}\n                            src={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}>\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${INCOMING_THUMBNAIL_MESSAGE}__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${INCOMING_THUMBNAIL_MESSAGE}__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap-overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${INCOMING_THUMBNAIL_MESSAGE}__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className={`${INCOMING_THUMBNAIL_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__more`}\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  showRemove: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\nThumbnailMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  resendMessage: noop,\n  onClick: noop,\n  showRemove: noop,\n  status: '',\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nOutgoingThumbnailMessage.defaultProps = {\n  status: '',\n};\n\nIncomingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nIncomingThumbnailMessage.defaultProps = {\n  status: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport Avatar from '../Avatar/index';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\n\nimport { getSenderProfileUrl, getSenderName, getMessageCreatedAt } from '../../utils/utils';\nimport {\n  truncate,\n  getIsSentFromStatus,\n} from './utils';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst MAX_TRUNCATE_LENGTH = 40;\nconst GROUPAING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\nconst noop = () => { };\n\nfunction checkFileType(fileUrl) {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport function OutgoingFileMessage({\n  message,\n  userId,\n  status,\n  showRemove,\n  disabled,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    url,\n  } = message;\n  const openFileUrl = () => { window.open(url); };\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n  const showEmojiReactions = isMessageSent && useReaction && message.reactions\n    && (message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__left-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon width=\"24px\" height=\"24px\" type={IconTypes.MORE} />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-file-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-file-message__tooltip\">\n          <div className=\"sendbird-file-message__tooltip__inner\">\n            {\n              checkFileType(url)\n                ? (\n                  <Icon\n                    className=\"sendbird-file-message__tooltip__icon\"\n                    width=\"28px\"\n                    height=\"28px\"\n                    type={checkFileType(url)}\n                  />\n                )\n                : null\n            }\n            <TextButton\n              className=\"sendbird-file-message__tooltip__text\"\n              onClick={openFileUrl}\n            >\n              <Label\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n              </Label>\n            </TextButton>\n          </div>\n          {\n            showEmojiReactions && (\n              <EmojiReactions\n                className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                userId={userId}\n                message={message}\n                emojiAllMap={emojiAllMap}\n                membersMap={membersMap}\n                toggleReaction={toggleReaction}\n                memoizedEmojiListItems={memoizedEmojiListItems}\n              />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingFileMessage({\n  message,\n  userId,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const openFileUrl = () => { window.open(message.url); };\n  const messageRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__incoming\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-file-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-file-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-file-message__tooltip\">\n            <div className=\"sendbird-file-message__tooltip__inner\">\n              {\n                checkFileType(message.url)\n                  ? (\n                    <Icon\n                      className=\"sendbird-file-message__tooltip__icon\"\n                      width=\"28px\"\n                      height=\"28px\"\n                      type={checkFileType(message.url)}\n                    />\n                  )\n                  : null\n              }\n              <TextButton\n                className=\"sendbird-file-message__tooltip__text\"\n                onClick={openFileUrl}\n              >\n                <Label\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n                </Label>\n              </TextButton>\n            </div>\n            {\n              (useReaction && message.reactions && (message.reactions.length > 0)) && (\n                <EmojiReactions\n                  className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className=\"sendbird-file-message__right-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-file-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingFileMessage.defaultProps = {\n  status: '',\n  showRemove: noop,\n  resendMessage: noop,\n  message: {},\n  userId: '',\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nIncomingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingFileMessage.defaultProps = {\n  message: {},\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nconst MessageSwitch = ({\n  message,\n  userId,\n  disabled,\n  isByMe,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) => (\n  <div className={`sendbird-file-message${isByMe ? '--outgoing' : '--incoming'}`}>\n    {\n      isByMe\n        ? (\n          <OutgoingFileMessage\n            message={message}\n            userId={userId}\n            disabled={disabled}\n            showRemove={showRemove}\n            status={status}\n            resendMessage={resendMessage}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n        : (\n          <IncomingFileMessage\n            userId={userId}\n            message={message}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n    }\n  </div>\n);\n\n\nMessageSwitch.propTypes = {\n  message: PropTypes.shape({}),\n  userId: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessageSwitch.defaultProps = {\n  message: {},\n  isByMe: false,\n  disabled: false,\n  showRemove: noop,\n  resendMessage: noop,\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nexport default MessageSwitch;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import format from 'date-fns/format';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport default {\n  getMessageCreatedAt,\n};\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst CLASS_NAME = 'sendbird-unknown-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function UnknownMessage({\n  message,\n  isByMe,\n  status,\n  className,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n  injectingClassName.push(`${CLASS_NAME}${isByMe ? '--outgoing' : '--incoming'}`);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUnknownMessage\n              status={status}\n              message={message}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUnknownMessage\n              message={message}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  isByMe: PropTypes.bool,\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nUnknownMessage.defaultProps = {\n  isByMe: false,\n  status: '',\n  className: '',\n  showRemove: () => { },\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUnknownMessage({\n  message,\n  status,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-outgoing-unknown-message';\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}--left-padding`}>\n          <div\n            className={`${className}__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${className}__more__menu`}\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    <MenuItem\n                      onClick={() => { showRemove(true); closeDropdown(); }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className={`${className}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUnknownMessage({\n  message,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-incoming-unknown-message';\n  const { sender } = message;\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  return (\n    <div\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}__left`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${className}__left__sender-profile-image`}\n                    src={sender.profileUrl}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          {\n            !chainTop && (\n              <Label\n                className={`${className}__body__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {sender.nickname || stringSet.NO_NAME}\n              </Label>\n            )\n          }\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n        <div className={`${className}--right-padding`}>\n          {\n            !chainBottom && (\n              <Label\n                className={`${className}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {utils.getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  status: PropTypes.string.isRequired,\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUnknownMessage.defaultProps = {\n  showRemove: () => { },\n};\n\nIncomingUnknownMessage.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      nickname: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n  }).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","export const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const OG_MESSAGE = 'sendbird-og-message';\nexport const OUTGOING_OG_MESSAGE = 'sendbird-outgoing-og-message';\nexport const INCOMING_OG_MESSAGE = 'sendbird-incoming-og-message';\nexport const generateMockMessage = (process) => {\n  const message = {\n    message: 'go to this link sendbird.com it will be usefull to you!!',\n    ogMetaData: {\n      title: 'This is the TITLE',\n      description: 'I\\'m description I\\'m description I\\'m description I\\'m description ',\n      url: 'https://sendbird.com/',\n      defaultImage: {\n        url: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n        alt: 'test',\n      },\n    },\n    sender: {\n      profileUrl: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n      nickname: 'Hoonying',\n    },\n    createdAt: 2000000,\n  };\n  if (process && typeof process === 'function') {\n    return process(message);\n  }\n  return message;\n};\n\nexport default {\n  URL_REG,\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n  generateMockMessage,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const createUrlTester = (regexp) => (text) => regexp.test(text);\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport const copyToClipboard = (text) => {\n  try {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path\n      // to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData('Text', text);\n    }\n    if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n      const textarea = document.createElement('textarea');\n      textarea.textContent = text;\n      textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n    return false;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const checkOGIsEnalbed = (message) => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n\nexport default {\n  getSenderName,\n  createUrlTester,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { createUrlTester } from './utils';\nimport { URL_REG } from './const';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst WORD_COLOR = LabelColors.ONBACKGROUND_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\nconst isUrl = createUrlTester(URL_REG);\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={className}\n              src={word}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={className}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </Label>\n          )\n      ));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n} from './const';\nimport {\n  getSenderName,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n} from './utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport './index.scss';\n\nimport UserProfile from '../UserProfile';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport Avatar from '../Avatar/index';\n\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst GROUPING_PADDING = '1px';\nconst NORAML_PADDING = '8px';\n\nconst OGMessageSwitch = ({\n  isByMe,\n  userId,\n  status,\n  message,\n  disabled,\n  showEdit,\n  chainTop,\n  className,\n  membersMap,\n  showRemove,\n  useReaction,\n  emojiAllMap,\n  chainBottom,\n  resendMessage,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) => {\n  const { ogMetaData } = message;\n  const injectingClassName = Array.isArray(className) ? className : [className];\n\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-og-message-word',\n  });\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  return (\n    <div className={`${OG_MESSAGE} ${OG_MESSAGE}${isByMe ? '--outgoing' : '--incoming'} ${injectingClassName.join(' ')}`}>\n      {\n        isByMe\n          ? (\n            <OutgoingOGMessage\n              status={status}\n              userId={userId}\n              message={message}\n              disabled={disabled}\n              openLink={openLink}\n              showEdit={showEdit}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n          : (\n            <IncomingOGMessage\n              userId={userId}\n              message={message}\n              openLink={openLink}\n              chainTop={chainTop}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nfunction OutgoingOGMessage(props) {\n  const {\n    status,\n    userId,\n    message,\n    disabled,\n    openLink,\n    showEdit,\n    chainTop,\n    showRemove,\n    membersMap,\n    chainBottom,\n    emojiAllMap,\n    useReaction,\n    resendMessage,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={OUTGOING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_OG_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_OG_MESSAGE}--left-padding`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${OUTGOING_OG_MESSAGE}__more__menu`}\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        className={`${OUTGOING_OG_MESSAGE}__more__menu__copy`}\n                        onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className={`${OUTGOING_OG_MESSAGE}__more__add-reaction`}\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className={`${OUTGOING_OG_MESSAGE}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_OG_MESSAGE}--body`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt}\n                  className={`${OUTGOING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${OUTGOING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.NO_THUMBNAIL}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__title`}>\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <Label\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_2}\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__url`}\n                >\n                  {ogMetaData.url}\n                </Label>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingOGMessage(props) {\n  const {\n    userId,\n    message,\n    openLink,\n    chainTop,\n    membersMap,\n    chainBottom,\n    useReaction,\n    emojiAllMap,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={INCOMING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${INCOMING_OG_MESSAGE}--inner`}>\n        <div className={`${INCOMING_OG_MESSAGE}--body`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${INCOMING_OG_MESSAGE}__avatar`}\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt || ''}\n                  className={`${INCOMING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${INCOMING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.NO_THUMBNAIL}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__title`}>\n\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__url`}>\n                  <Label\n                    type={LabelTypography.CAPTION_3}\n                    color={LabelColors.ONBACKGROUND_2}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__url__label`}\n                  >\n                    {ogMetaData.url}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_OG_MESSAGE}--right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      message={message}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                >\n                  <MenuItem\n                    className={`${INCOMING_OG_MESSAGE}__more__menu__copy`}\n                    onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OGMessageSwitch;\n\nconst noop = () => { };\n\nOGMessageSwitch.propTypes = {\n  isByMe: PropTypes.bool.isRequired,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  status: PropTypes.string,\n  disabled: PropTypes.bool,\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  toggleReaction: PropTypes.func,\n  membersMap: PropTypes.instanceOf(Map),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nOGMessageSwitch.defaultProps = {\n  className: '',\n  status: '',\n  disabled: false,\n  showEdit: noop,\n  showRemove: noop,\n  resendMessage: noop,\n  toggleReaction: noop,\n  membersMap: new Map(),\n  emojiAllMap: new Map(),\n  memoizedEmojiListItems: noop,\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingOGMessage.propTypes = {\n  status: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n    isResendable: PropTypes.func,\n    errorCode: PropTypes.number,\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  openLink: PropTypes.func.isRequired,\n  showEdit: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingOGMessage.defaultProps = {\n  status: '',\n};\n\nIncomingOGMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  openLink: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Message from '../../../ui/Message';\nimport AdminMessage from '../../../ui/AdminMessage';\nimport ThumbnailMessage from '../../../ui/ThumbnailMessage';\nimport FileMessage from '../../../ui/FileMessage';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport UnknownMessage from '../../../ui/UnknownMessage';\nimport OGMessage from '../../../ui/OGMessage';\n\nimport { MessageTypes, getMessageType } from '../types';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  deleteMessage,\n  updateMessage,\n  status,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel);\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        {/* date-seperator */}\n        {\n          hasSeperator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy')}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: <AdminMessage message={message} />,\n          [MessageTypes.FILE]: (\n            <FileMessage\n              message={message}\n              userId={userId}\n              disabled={disabled}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.OG]: (\n            <OGMessage\n              message={message}\n              status={status}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              disabled={disabled}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.THUMBNAIL]: (\n            <ThumbnailMessage\n              disabled={disabled}\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              onClick={setShowFileViewer}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.USER]: (\n            <Message\n              message={message}\n              disabled={disabled}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateSeperator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeperator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeperator: false,\n  disabled: false,\n  status: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport {\n  getParsedStatus,\n  compareMessagesForGrouping,\n} from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      readStatus,\n      membersMap,\n      initialized,\n      allMessages,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n    } = this.props;\n    if (!initialized) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__not-initialized\"\n          type={PlaceHolderTypes.WRONG}\n        />\n      );\n    }\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeperator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            emojiContainer,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      status={readStatus[m.messageId] || getParsedStatus(m, currentGroupChannel)}\n                      // show status for pending/failed messages\n                      message={m}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      editDisabled={editDisabled}\n                      hasSeperator={hasSeperator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  initialized: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  initialized: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  onScroll: null,\n  useReaction: true,\n  emojiContainer: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.SHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { RenderMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(renderProps: RenderMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n  isOnline,\n  initialized,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={(utils.isDisabledBecauseFrozen(channel)\n        && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n        || (utils.isDisabledBecauseMuted(channel)\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED\n        )\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className=\"sendbird-conversation__connection-status\"\n    >\n      <Label type={LabelTypography.BODY_2} color={LabelColors.ONBACKGROUND_2}>\n        { stringSet.TRYING_TO_CONNECT }\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        height=\"14px\"\n        width=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getOthersLastSeenAt = (channel) => {\n  if (!channel || !channel.getReadStatus || !channel.members || channel.members.length !== 2) {\n    return '';\n  }\n  const lastSeenList = [...Object.values(channel.getReadStatus())];\n  const lastSeenAt = lastSeenList.length > 0\n    ? lastSeenList[0].last_seen_at\n    : 0;\n  if (lastSeenAt === 0) {\n    return '';\n  }\n  return prettyDate(lastSeenAt);\n};\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AutoRefresh({\n  repeatFunc,\n}) {\n  const [label, setLabel] = useState(repeatFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (label !== repeatFunc()) {\n        setLabel(repeatFunc());\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (<div className=\"sendbird-repeat-text\">{label}</div>);\n}\n\nAutoRefresh.propTypes = {\n  repeatFunc: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport AutoRefresh from '../AutoRefresh';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isActive,\n    isMuted,\n    onActionClick,\n    theme,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        {\n          (typeof isActive === 'string' && isActive === 'true') || (typeof isActive === 'boolean' && isActive)\n            ? <div className=\"sendbird-chat-header__active\" />\n            : null\n        }\n        <Label\n          className=\"sendbird-chat-header__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {\n            subTitle\n            || <AutoRefresh repeatFunc={() => utils.getOthersLastSeenAt(currentGroupChannel)} />\n          }\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          (typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted)\n            ? <Icon className=\"sendbird-chat-header__mute\" type={IconTypes.MUTE} width=\"24px\" height=\"24px\" />\n            : null\n        }\n        <IconButton\n          className=\"sendbird-chat-header__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon type={IconTypes.INFO} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  theme: PropTypes.string,\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isActive: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  title: '',\n  theme: 'light',\n  subTitle: '',\n  isActive: false,\n  isMuted: false,\n  currentUser: {},\n  onActionClick: () => { },\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useSetReadStatus from './hooks/useSetReadStatus';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    useReaction,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery will be deprecared in v1.3.0, please use messageListParams instead');\n  }\n\n  const userFilledMessageListQuery = queries.messageListParams || queries.messageListQuery;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    hasMore,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    lastMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, userId },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useInitialMessagesFetch({ currentGroupChannel, userFilledMessageListQuery }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // to create initial read status\n  useSetReadStatus(\n    { allMessages, currentGroupChannel },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (loading) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isActive={false}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              utils.scrollIntoLast();\n              // there is no scroll\n              if (scrollRef.current.scrollTop === 0) {\n                currentGroupChannel.markAsRead();\n                messagesDispatcher({\n                  type: messageActionTypes.MARK_AS_READ,\n                });\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      <ConversationScroll\n        swapParams={\n          sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n        }\n        userId={userId}\n        hasMore={hasMore}\n        disabled={!isOnline}\n        onScroll={onScrollCallback}\n        scrollRef={scrollRef}\n        readStatus={readStatus}\n        initialized={initialized}\n        useReaction={usingReaction}\n        allMessages={allMessages}\n        emojiAllMap={emojiAllMap}\n        membersMap={nicknamesMap}\n        editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n        deleteMessage={deleteMessage}\n        updateMessage={updateMessage}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        emojiContainer={emojiContainer}\n        renderChatItem={renderChatItem}\n        renderCustomMessage={renderCustomMessage}\n        useMessageGrouping={useMessageGrouping}\n        messagesDispatcher={messagesDispatcher}\n        currentGroupChannel={currentGroupChannel}\n        memoizedEmojiListItems={memoizedEmojiListItems}\n      />\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n    // deprecate in v1.3\n    messageListQuery: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","SET_READ_STATUS","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","message","isUserMessage","messageType","ogMetaData","isAdminMessage","isFileMessage","isImage","type","isVideo","UNDEFINED","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","url","channelActions","payload","fromSelector","messageId","getParsedStatus","currentGroupChannel","requestState","MessageStatusType","SENT","unreadCount","getReadReceipt","READ","isDelivered","getDeliveryReceipt","DELIVERED","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","hasMore","lastMessageTimeStamp","readStatus","unreadSince","isInvalid","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","indexOf","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","messageActions","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","markAsRead","catch","e","warning","getAllEmoji","emojiContainer_","err","useInitialMessagesFetch","userFilledMessageListQuery","MessageListParams","getMessagesByMessageId","messageListParams","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","getMessagesByTimestamp","getTime","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","useDeleteMessageCallback","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","current","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","useSetReadStatus","setReadStatus","allReadStatus","reduce","accumulator","handler","handleMessageStatus","c","onDeliveryReceiptUpdated","onReadReceiptUpdated","handlerId","ReactionButton","React","forwardRef","props","ref","children","onClick","selected","className","injectingClassName","Array","isArray","join","slice","propTypes","PropTypes","element","isRequired","func","bool","oneOfType","number","string","arrayOf","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","emoji","reactedReaction","reactions","reaction","isReacted","userIds","IconTypes","EMOJI_FAILED","useToggleReactionCallback","deleteReaction","addReaction","MessageStatus","status","label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","icon","SPINNER","IconColors","ERROR","objectOf","array","object","ReactionBadge","count","isAdd","unshift","ONBACKGROUND_1","CLASS_NAME","Tooltip","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","EmojiReactions","emojiAllMap","membersMap","memoizedEmojiListItems","MemoizedEmojiListItems","imageWidth","emojiReactionAddRef","messageReactions","useContext","LocalizationContext","stringSet","emojiUrl","get","reactedUserCount","reactedByMe","nicknames","currentUserId","TOOLTIP__UNKOWN_USER","stringSetForMe","TOOLTIP__AND_YOU","TOOLTIP__YOU","size","toggleDropdown","ON_BACKGROUND_3","EMOJI_REACTIONS_ADD","y","shape","instanceOf","WORD_TYPOGRAPHY","BODY_1","EDITED_COLOR","useMemoizedMessageText","updatedAt","splitMessage","split","matchedMessage","word","MESSAGE_EDITED","MOUSE_ENTER","MOUSE_LEAVE","useMouseHover","setHover","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","noop","GROUPING_PADDING","NORMAL_PADDING","Message","isByMe","resendMessage","disabled","showEdit","showRemove","chainTop","chainBottom","memoizedMessageText","OutgoingUserMessage","MemoizedMessageText","messageRef","parentRefReactions","parentRefMenus","isMessageSent","getIsSentFromStatus","mousehover","setMousehover","moreActive","setMoreActive","menuDisplaying","setMenuDisplaying","handleMoreIconClick","handleMoreIconBlur","paddingTop","paddingBottom","MORE","CONTENT_INVERSE","close","copyToClipboard","IncomingUserMessage","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","showReactionAddButton","showEmojiReactions","getSenderProfileUrl","user","CAPTION_2","getSenderName","top","AdminMessage","OUTGOING_THUMBNAIL_MESSAGE","INCOMING_THUMBNAIL_MESSAGE","ThumbnailMessage","OutgoingThumbnailMessage","thumbnails","thumbnailUrl","menuRef","reactionAddRef","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","PLAY","unSupported","UNKNOWN__UNKNOWN_MESSAGE_TYPE","IncomingThumbnailMessage","MAX_TRUNCATE_LENGTH","GROUPAING_PADDING","checkFileType","fileUrl","result","imageFile","audioFile","test","FILE_DOCUMENT","FILE_AUDIO","OutgoingFileMessage","openFileUrl","window","open","reactionAddButtonRef","truncate","IncomingFileMessage","MessageSwitch","RemoveMessage","onCloseModal","onDeleteMessage","MODAL__DELETE_MESSAGE__TITLE","UnknownMessage","OutgoingUnknownMessage","UNKNOWN__CANNOT_READ_MESSAGE","IncomingUnknownMessage","profileUrl","NO_NAME","URL_REG","OG_MESSAGE","OUTGOING_OG_MESSAGE","INCOMING_OG_MESSAGE","createUrlTester","regexp","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","friendName","checkOGIsEnalbed","WORD_COLOR","isUrl","NORAML_PADDING","OGMessageSwitch","openLink","OutgoingOGMessage","defaultImage","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","alt","NO_THUMBNAIL","title","SUBTITLE_2","description","BODY_2","event","stopPropagation","IncomingOGMessage","errorCode","MessageHoc","editDisabled","hasSeperator","updateMessage","renderCustomMessage","setShowEdit","setShowRemove","showFileViewer","setShowFileViewer","editMessageInputRef","RenderedMessage","FileMessage","OGMessage","RemoveMessageModal","isDateSeperator","ConversationScroll","scrollRef","onScroll","target","clientHeight","nodes","querySelectorAll","first","scrollIntoView","renderChatItem","useMessageGrouping","PlaceHolderTypes","WRONG","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","MessageHOC","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","ONCONTENT_1","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","SHEVRON_DOWN","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","setHandlerId","typingMembers","setTypingMembers","newHandlerId","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","_a","onSendMessage","onFileUpload","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","prettyDate","date","formatDistanceToNowStrict","addSuffix","getOthersLastSeenAt","getReadStatus","lastSeenList","values","lastSeenAt","last_seen_at","getChannelTitle","LabelStringSet","NO_TITLE","NO_MEMBERS","AutoRefresh","repeatFunc","setLabel","interval","setInterval","clearInterval","ChatHeader","currentUser","subTitle","isActive","isMuted","onActionClick","theme","H_2","MUTE","INFO","PRIMARY","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","LOADING","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}