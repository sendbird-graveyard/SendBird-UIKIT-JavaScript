{"version":3,"file":"Channel.js","sources":["../src/smart-components/Conversation/dux/actionTypes.js","../src/smart-components/Conversation/types.js","../src/smart-components/Conversation/utils.js","../src/smart-components/Conversation/dux/initialState.js","../src/smart-components/Conversation/dux/reducers.js","../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../src/smart-components/Conversation/hooks/useGetChannel.js","../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../src/smart-components/Conversation/hooks/useHandleReconnect.js","../src/smart-components/Conversation/hooks/useScrollCallback.js","../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../src/smart-components/Conversation/hooks/useSetReadStatus.js","../src/ui/ReactionButton/index.jsx","../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../src/ui/MessageStatus/index.jsx","../src/ui/ReactionBadge/index.jsx","../src/ui/Tooltip/index.jsx","../src/ui/TooltipWrapper/index.jsx","../src/ui/EmojiReactions/index.jsx","../src/ui/Message/memoizedMessageText.jsx","../src/hooks/onMouseHover.jsx","../src/ui/Message/index.jsx","../src/ui/AdminMessage/index.jsx","../src/ui/ThumbnailMessage/util.js","../src/ui/ThumbnailMessage/index.jsx","../src/ui/FileMessage/index.jsx","../src/smart-components/Conversation/components/RemoveMessage.jsx","../src/ui/UnknownMessage/utils.js","../src/ui/UnknownMessage/index.jsx","../src/ui/OGMessage/const.js","../src/ui/OGMessage/utils.js","../src/ui/OGMessage/memoizedMessageText.jsx","../src/ui/OGMessage/index.jsx","../src/smart-components/Conversation/components/MessageHOC.jsx","../src/smart-components/Conversation/components/ConversationScroll.jsx","../src/smart-components/Conversation/components/Notification.jsx","../src/smart-components/Conversation/components/FrozenNotification.tsx","../src/smart-components/Conversation/components/TypingIndicator.jsx","../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../src/ui/ConnectionStatus/index.jsx","../src/ui/ChatHeader/utils.js","../src/ui/AutoRefresh/index.jsx","../src/ui/ChatHeader/index.jsx","../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nexport const SET_READ_STATUS = 'SET_READ_STATUS';\n","import { isImage, isVideo } from '../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message) => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if ((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return '';\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../../ui/MessageStatus/type';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport { SendingMessageStatus } from './types';\n\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = SendingMessageStatus;\n\nexport const scrollIntoLast = (selector, intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const nodes = document.querySelectorAll(selector);\n    const last = nodes[nodes.length - 1];\n    last.scrollIntoView(false); /** alignToTop: false */\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(selector, currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast('.sendbird-msg--scroll-ref');\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast('.sendbird-msg--scroll-ref');\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  emojiContainer: {},\n  readStatus: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages } from '../utils';\nimport { SendingMessageStatus } from '../types';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = SendingMessageStatus;\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message } = action.payload;\n      const { currentGroupChannel = {}, unreadCount, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (!(state.allMessages.map((msg) => msg.messageId).indexOf(message.messageId) < 0)) {\n        return state;\n      }\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount: unreadCount + 1,\n        unreadSince: (unreadCount === 0)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.SET_READ_STATUS: {\n      return {\n        ...state,\n        readStatus: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        if (compareIds(channel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nfunction useInitialMessagesFetch({ currentGroupChannel, userFilledMessageListQuery }, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByMessageId) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n      currentGroupChannel.getMessagesByTimestamp(\n        new Date().getTime(),\n        messageListParams,\n      )\n        .then((messages) => {\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimeStamp = hasMore\n            ? messages[0].createdAt\n            : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages,\n              hasMore,\n              lastMessageTimeStamp,\n              currentGroupChannel,\n            },\n          });\n        })\n        .catch((error) => {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel,\n            },\n          });\n        })\n        .finally(() => {\n          currentGroupChannel.markAsRead();\n          setTimeout(() => utils.scrollIntoLast('.sendbird-msg--scroll-ref'));\n        });\n    }\n  }, [channelUrl, userFilledMessageListQuery]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast('.sendbird-msg--scroll-ref'));\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast('.sendbird-msg--scroll-ref'));\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel, onBeforeSendFileMessage,\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeSendFileMessage\n      && typeof onBeforeSendFileMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n    }\n\n    const params = onBeforeSendFileMessage\n      ? onBeforeSendFileMessage(file)\n      : createParamsDefault(file);\n\n    logger.info('Channel: Uploading file message start!', params);\n    const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = response;\n      let error = err;\n      if (swapParams) {\n        message = err;\n        error = response;\n      }\n      if (error) {\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        logger.error('Channel: Sending file message failed!', message);\n        message.localUrl = URL.createObjectURL(file);\n        message.file = file;\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n          payload: message,\n        });\n        return;\n      }\n      logger.info('Channel: Sending message success!', message);\n      messagesDispatcher({\n        type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    });\n    pubSub.publish(topics.SEND_MESSAGE_START, {\n      /* pubSub is used instead of messagesDispatcher\n        to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n      message: {\n        ...pendingMsg,\n        url: URL.createObjectURL(file),\n        // pending thumbnail message seems to be failed\n        requestState: 'pending',\n      },\n      channel: currentGroupChannel,\n    });\n    setTimeout(() => utils.scrollIntoLast('.sendbird-msg--scroll-ref'), 1000);\n  }, [currentGroupChannel, onBeforeSendFileMessage]);\n  return [sendMessage];\n}\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\n\nexport default function useSetReadStatus({ allMessages, currentGroupChannel }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (!sdk.ChannelHandler || !currentGroupChannel.url) {\n      return () => {};\n    }\n    // todo: move to reducer?\n    const setReadStatus = () => {\n      const allReadStatus = allMessages.reduce((accumulator, msg) => {\n        if (msg.messageId !== 0) {\n          return {\n            ...accumulator,\n            [msg.messageId]: utils.getParsedStatus(msg, currentGroupChannel),\n          };\n        }\n        return accumulator;\n      }, {});\n      messagesDispatcher({\n        type: messageActionTypes.SET_READ_STATUS,\n        payload: allReadStatus,\n      });\n    };\n    if (allMessages.length > 0) {\n      setReadStatus();\n    }\n\n    const channelUrl = currentGroupChannel.url;\n    const handler = new sdk.ChannelHandler();\n    const handleMessageStatus = (c) => {\n      if (channelUrl === c.url) {\n        setReadStatus();\n      }\n    };\n    handler.onDeliveryReceiptUpdated = handleMessageStatus;\n    handler.onReadReceiptUpdated = handleMessageStatus;\n    // Add this channel event handler to the SendBird object.\n    const handlerId = uuidv4();\n    logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n    sdk.addChannelHandler(handlerId, handler);\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n        sdk.removeChannelHandler(handlerId);\n      }\n    };\n  }, [allMessages, currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    children,\n    width,\n    height,\n    onClick,\n    selected,\n    className,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={ref}\n      className={`sendbird-reaction-button${selected ? '--selected' : ''} ${injectingClassName.join(' ')}`}\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      role=\"button\"\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nReactionButton.defaultProps = {\n  selected: false,\n  width: '36px',\n  height: '36px',\n  onClick: () => { },\n  className: '',\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.EMOJI_FAILED} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\nimport MessageStatusType from './type';\n\nimport { getMessageCreatedAt } from '../../utils/utils';\n\nconst MessageStatusTypes = MessageStatusType;\nexport { MessageStatusTypes };\nexport default function MessageStatus({\n  message,\n  status,\n  className,\n}) {\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  const label = () => {\n    switch (status) {\n      case MessageStatusType.FAILED:\n      case MessageStatusType.PENDING: {\n        return null;\n      }\n      case MessageStatusType.SENT:\n      case MessageStatusType.DELIVERED:\n      case MessageStatusType.READ: {\n        return (\n          <Label\n            className=\"sendbird-message-status__text\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getMessageCreatedAt(message)}\n          </Label>\n        );\n      }\n      default: return null;\n    }\n  };\n\n  const icon = {\n    PENDING: (\n      <Loader className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\">\n        <Icon type={IconTypes.SPINNER} width=\"16px\" height=\"16px\" />\n      </Loader>\n    ),\n    SENT: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.SENT} fillColor={IconColors.SENT} />,\n    DELIVERED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DELIVERED} fillColor={IconColors.SENT} />,\n    READ: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.READ} fillColor={IconColors.READ} />,\n    FAILED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.ERROR} />,\n  };\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message-status'].join(' ')}>\n      {icon[status]}\n      <br />\n      {label(status)}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nMessageStatus.defaultProps = {\n  message: null,\n  status: '',\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  if (selected && !isAdd) {\n    injectingClassName.unshift('sendbird-reaction-badge--selected');\n  } else if (isAdd) {\n    injectingClassName.push('sendbird-reaction-badge--is-add');\n  } else {\n    injectingClassName.unshift('sendbird-reaction-badge');\n  }\n\n  return (\n    <div\n      ref={ref}\n      tabIndex={0}\n      role=\"button\"\n      className={injectingClassName.join(' ')}\n      onClick={onClick}\n      onKeyDown={onClick}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label className={children && count ? 'sendbird-reaction-badge__inner__count' : ''} type={LabelTypography.CAPTION_3} color={LabelColors.ONBACKGROUND_1}>\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label from '../Label';\n\nconst CLASS_NAME = 'sendbird-tooltip';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <Label\n        className={`${CLASS_NAME}__text`}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst CLASS_NAME = 'sendbird-tooltip-wrapper';\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const injectingClassName = Array.isArray(className)\n    ? [CLASS_NAME, ...className]\n    : [CLASS_NAME, className];\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className={`${CLASS_NAME}__children`}\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className={`${CLASS_NAME}__hover-tooltip`}\n            style={{\n              bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)`,\n            }}\n          >\n            <div\n              className={`${CLASS_NAME}__hover-tooltip__inner`}\n            >\n              <div\n                className={`${CLASS_NAME}__hover-tooltip__inner__tooltip-container`}\n                style={{\n                  left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)`,\n                }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React, { useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ReactionBadge from '../ReactionBadge';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu from '../ContextMenu';\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function EmojiReactions({\n  className,\n  userId,\n  message,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift('sendbird-emoji-reactions');\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const imageWidth = '20px';\n  const imageHeight = '20px';\n  const emojiReactionAddRef = useRef(null);\n  const { reactions = [] } = message;\n  const messageReactions = reactions;\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-emoji-reactions--inner\">\n        {\n          messageReactions && (\n            messageReactions.map((reaction) => {\n              const { userIds = [] } = reaction;\n              const emojiUrl = emojiAllMap.get(reaction.key) || '';\n              const reactedUserCount = userIds.length;\n              const reactedByMe = !(userIds.indexOf(userId) < 0);\n              const nicknames = userIds\n                .filter((currentUserId) => currentUserId !== userId)\n                .map((currentUserId) => (\n                  membersMap.get(currentUserId) || stringSet.TOOLTIP__UNKOWN_USER\n                ));\n              const stringSetForMe = (nicknames.length > 0)\n                ? stringSet.TOOLTIP__AND_YOU : stringSet.TOOLTIP__YOU;\n              return (\n                <TooltipWrapper\n                  className=\"sendbird-emoji-reactions__emoji-reaction\"\n                  key={reaction.key}\n                  hoverTooltip={\n                    userIds.length > 0 && (\n                      <Tooltip>\n                        <>\n                          {\n                            `${(\n                              nicknames.join(', ')\n                            )}${(\n                              reactedByMe\n                                ? stringSetForMe\n                                : ''\n                            )}`\n                          }\n                        </>\n                      </Tooltip>\n                    )\n                  }\n                >\n                  <ReactionBadge\n                    count={reactedUserCount}\n                    selected={reactedByMe}\n                    onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n                  >\n                    <ImageRenderer\n                      circle\n                      url={emojiUrl}\n                      width={imageWidth}\n                      height={imageHeight}\n                      defaultComponent={(\n                        <Icon\n                          width={imageWidth}\n                          height={imageHeight}\n                          type={IconTypes.EMOJI_FAILED}\n                        />\n                      )}\n                    />\n                  </ReactionBadge>\n                </TooltipWrapper>\n              );\n            })\n          )\n        }\n        {\n          (messageReactions.length < emojiAllMap.size)\n          && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <ReactionBadge\n                  isAdd\n                  onClick={toggleDropdown}\n                  className=\"sendbird-emoji-reactions__emoji-reaction-add\"\n                  ref={emojiReactionAddRef}\n                >\n                  <Icon\n                    width={imageWidth}\n                    height={imageHeight}\n                    fillColor={IconColors.ON_BACKGROUND_3}\n                    type={IconTypes.EMOJI_REACTIONS_ADD}\n                  />\n                </ReactionBadge>\n              )}\n              menuItems={(closeDropdown) => (\n                <MemoizedEmojiListItems\n                  message={message}\n                  parentRef={emojiReactionAddRef}\n                  parentContainRef={emojiReactionAddRef}\n                  closeDropdown={closeDropdown}\n                  spaceFromTrigger={{ y: 4 }}\n                />\n              )}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nEmojiReactions.propTypes = {\n  userId: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    reactions: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\nEmojiReactions.defaultProps = {\n  className: '',\n  membersMap: new Map(),\n  userId: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport uuidv4 from '../../utils/uuid';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(/\\r/);\n    const matchedMessage = splitMessage\n      .map((word) => (word !== '' ? word : <br />));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import { useEffect } from 'react';\n\nconst MOUSE_ENTER = 'mouseenter';\nconst MOUSE_LEAVE = 'mouseleave';\n\nconst useMouseHover = ({\n  ref,\n  setHover,\n}) => {\n  const handleMouseOver = () => {\n    if (ref.current) {\n      setHover(true);\n    }\n  };\n  const handleMouseOut = () => {\n    if (ref.current) {\n      setHover(false);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = ref;\n    current.addEventListener(MOUSE_ENTER, handleMouseOver);\n    current.addEventListener(MOUSE_LEAVE, handleMouseOut);\n    return () => {\n      current.removeEventListener(MOUSE_ENTER, handleMouseOver);\n      current.removeEventListener(MOUSE_LEAVE, handleMouseOut);\n    };\n  });\n};\n\nexport default useMouseHover;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport UserProfile from '../UserProfile';\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport MessageStatus from '../MessageStatus';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  copyToClipboard,\n  getMessageCreatedAt,\n  getSenderName,\n  getSenderProfileUrl,\n  getIsSentFromStatus,\n} from './utils';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst noop = () => { };\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function Message(props) {\n  const {\n    isByMe,\n    userId,\n    message,\n    className,\n    resendMessage,\n    disabled,\n    showEdit,\n    showRemove,\n    status,\n    useReaction,\n    emojiAllMap,\n    membersMap,\n    toggleReaction,\n    memoizedEmojiListItems,\n    chainTop,\n    chainBottom,\n  } = props;\n\n  if (!message) return null;\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  injectingClassName.push(`sendbird-message${isByMe ? '--outgoing' : '--incoming'}`);\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-user-message-word',\n  });\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message'].join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUserMessage\n              userId={userId}\n              message={message}\n              resendMessage={resendMessage}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUserMessage\n              userId={userId}\n              message={message}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])).isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showEdit: PropTypes.func,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  userId: '',\n  resendMessage: noop,\n  className: '',\n  showEdit: noop,\n  showRemove: noop,\n  status: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUserMessage({\n  userId,\n  message,\n  showEdit,\n  disabled,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  // TODO: when message.requestState is succeeded, consider if it's SENT or DELIVERED\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-user-message--outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div\n          className=\"sendbird-user-message__left-padding\"\n        >\n          <div className=\"sendbird-user-message__more\" ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className=\"sendbird-user-message__more__menu\"\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        className=\"sendbird-user-message--copy\"\n                        onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                      >\n                        Copy\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        Edit\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        Resend\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    Delete\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__add-reaction\"\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className=\"sendbird-user-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                // onDelete={() => { showRemove(true); }}\n                // onResend={() => resendMessage(message)}\n                // duplicated and should replace to more\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-user-message__text-balloon\">\n          <div className=\"sendbird-user-message__text-balloon__inner\">\n            <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n              <Label\n                className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                <MemoizedMessageText />\n              </Label>\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUserMessage({\n  userId,\n  message,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className=\"sendbird-user-message--incoming\"\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      {\n        // showProfile && (<UserProfile user={message.sender} />)\n      }\n      <div className=\"sendbird-user-message--inner\">\n        <div className=\"sendbird-user-message--body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-user-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-user-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-user-message__text-balloon\">\n            <div className=\"sendbird-user-message__text-balloon__inner\">\n              <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n                <Label\n                  className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  <MemoizedMessageText />\n                </Label>\n              </div>\n              {\n                showEmojiReactions && (\n                  <EmojiReactions\n                    className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                    userId={userId}\n                    message={message}\n                    emojiAllMap={emojiAllMap}\n                    membersMap={membersMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"sendbird-user-message__right-padding\">\n          <div className=\"sendbird-user-message__more\" ref={parentContainRef}>\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      message={message}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                >\n                  <MenuItem\n                    className=\"sendbird-user-message--copy\"\n                    onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                  >\n                    Copy\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className=\"sendbird-user-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nIncomingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingUserMessage.defaultProps = {\n  message: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nOutgoingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  disabled: PropTypes.bool,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUserMessage.defaultProps = {\n  message: {},\n  resendMessage: noop,\n  showEdit: noop,\n  showRemove: noop,\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!message.messageType || message.messageType !== 'admin') { // change to use message.isAdminMessage()\n    return null;\n  }\n\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  return (\n    <div className={[...injectingClassName, 'sendbird-admin-message'].join(' ')}>\n      <Label className=\"sendbird-admin-message__text\" type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport default {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n};\n","import React, { useContext, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n} from './util';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  isImage,\n  isVideo,\n  unSupported,\n} from '../FileViewer/types';\nimport {\n  getSenderName,\n  getSenderProfileUrl,\n} from '../../utils/utils';\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst noop = () => { };\n\nconst OUTGOING_THUMBNAIL_MESSAGE = 'sendbird-outgoing-thumbnail-message';\nconst INCOMING_THUMBNAIL_MESSAGE = 'sendbird-incoming-thumbnail-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function ThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  isByMe,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  return (\n    isByMe\n      ? (\n        <OutgoingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          disabled={disabled}\n          chainTop={chainTop}\n          showRemove={showRemove}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          resendMessage={resendMessage}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n      : (\n        <IncomingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          chainTop={chainTop}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n  );\n}\n\nexport function OutgoingThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n  } = message;\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={OUTGOING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__left-padding`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    color={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={menuRef}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem onClick={() => {\n                    if (disabled) { return; }\n                    showRemove(true);\n                    closeDropdown();\n                  }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              isMessageSent && showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={reactionAddRef}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <MessageStatus\n                message={message}\n                status={status}\n                className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__status`}\n              />\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__body`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap`}\n          >\n            <div\n              className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n              tabIndex={0}\n              role=\"button\"\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n                    <video\n                      className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                    >\n                      <source src={url || localUrl} type={type} />\n                    </video>\n                    <Icon\n                      className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <div\n                    className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__img`}\n                    style={{\n                      backgroundImage: `url(${url || localUrl})`,\n                      height: '280px',\n                      width: '404px',\n                      backgroundSize: 'cover',\n                      backgroundRepeat: 'no-repeat',\n                      backgroundPosition: 'center',\n                    }}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingThumbnailMessage({\n  message = {},\n  userId,\n  onClick,\n  status,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n  } = message;\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const avatarRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={INCOMING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      {\n        !chainTop && (\n          <Label\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__sender-name`}\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message) || ''}\n          </Label>\n        )\n      }\n      <div className={`${INCOMING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__body`}>\n          <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap`}>\n            {\n              !chainBottom && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <Avatar\n                      onClick={() => {\n                        if (!disableUserProfile) {\n                          toggleDropdown();\n                        }\n                      }}\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__avatar`}\n                      src={getSenderProfileUrl(message)}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={avatarRef}\n                      // for catching location(x, y) of MenuItems\n                      parentContainRef={avatarRef}\n                      // for toggling more options(menus & reactions)\n                      closeDropdown={closeDropdown}\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                    >\n                      {\n                        renderUserProfile\n                          ? renderUserProfile({\n                            user: message.sender,\n                            close: closeDropdown,\n                          })\n                          : (\n                            <UserProfile\n                              user={message.sender}\n                              onSuccess={closeDropdown}\n                            />\n                          )\n                      }\n                    </MenuItems>\n                  )}\n                />\n              )\n            }\n            <div\n              className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              role=\"button\"\n              tabIndex={0}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n                    <video className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}>\n                      <source src={url || localUrl} type={type} />\n                    </video>\n                    <Icon\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <div\n                    className={`${INCOMING_THUMBNAIL_MESSAGE}__img`}\n                    style={{\n                      backgroundImage: `url(${url || localUrl})`,\n                      height: '280px',\n                      width: '404px',\n                      backgroundSize: 'cover',\n                      backgroundRepeat: 'no-repeat',\n                      backgroundPosition: 'center',\n                    }}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${INCOMING_THUMBNAIL_MESSAGE}__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap-overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${INCOMING_THUMBNAIL_MESSAGE}__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className={`${INCOMING_THUMBNAIL_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__more`}\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={reactionAddRef}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  showRemove: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\nThumbnailMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  resendMessage: noop,\n  onClick: noop,\n  showRemove: noop,\n  status: '',\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nOutgoingThumbnailMessage.defaultProps = {\n  status: '',\n};\n\nIncomingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nIncomingThumbnailMessage.defaultProps = {\n  status: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport Avatar from '../Avatar/index';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\n\nimport { getSenderProfileUrl, getSenderName, getMessageCreatedAt } from '../../utils/utils';\nimport {\n  truncate,\n  getIsSentFromStatus,\n} from './utils';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst MAX_TRUNCATE_LENGTH = 40;\nconst GROUPAING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\nconst noop = () => { };\n\nfunction checkFileType(fileUrl) {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport function OutgoingFileMessage({\n  message,\n  userId,\n  status,\n  showRemove,\n  disabled,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    url,\n  } = message;\n  const openFileUrl = () => { window.open(url); };\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n  const showEmojiReactions = isMessageSent && useReaction && message.reactions\n    && (message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__left-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon width=\"24px\" height=\"24px\" type={IconTypes.MORE} />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={menuRef}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        Resend\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem onClick={() => {\n                    if (disabled) { return; }\n                    showRemove(true);\n                    closeDropdown();\n                  }}\n                  >\n                    Delete\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={reactionAddButtonRef}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className=\"sendbird-file-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-file-message__tooltip\">\n          <div className=\"sendbird-file-message__tooltip__inner\">\n            {\n              checkFileType(url)\n                ? (\n                  <Icon\n                    className=\"sendbird-file-message__tooltip__icon\"\n                    width=\"28px\"\n                    height=\"28px\"\n                    type={checkFileType(url)}\n                  />\n                )\n                : null\n            }\n            <TextButton\n              className=\"sendbird-file-message__tooltip__text\"\n              onClick={openFileUrl}\n            >\n              <Label\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n              </Label>\n            </TextButton>\n          </div>\n          {\n            showEmojiReactions && (\n              <EmojiReactions\n                className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                userId={userId}\n                message={message}\n                emojiAllMap={emojiAllMap}\n                membersMap={membersMap}\n                toggleReaction={toggleReaction}\n                memoizedEmojiListItems={memoizedEmojiListItems}\n              />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingFileMessage({\n  message,\n  userId,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const openFileUrl = () => { window.open(message.url); };\n  const messageRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__incoming\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-file-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-file-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-file-message__tooltip\">\n            <div className=\"sendbird-file-message__tooltip__inner\">\n              {\n                checkFileType(message.url)\n                  ? (\n                    <Icon\n                      className=\"sendbird-file-message__tooltip__icon\"\n                      width=\"28px\"\n                      height=\"28px\"\n                      type={checkFileType(message.url)}\n                    />\n                  )\n                  : null\n              }\n              <TextButton\n                className=\"sendbird-file-message__tooltip__text\"\n                onClick={openFileUrl}\n              >\n                <Label\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n                </Label>\n              </TextButton>\n            </div>\n            {\n              (useReaction && message.reactions && (message.reactions.length > 0)) && (\n                <EmojiReactions\n                  className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className=\"sendbird-file-message__right-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={reactionAddButtonRef}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className=\"sendbird-file-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingFileMessage.defaultProps = {\n  status: '',\n  showRemove: noop,\n  resendMessage: noop,\n  message: {},\n  userId: '',\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nIncomingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingFileMessage.defaultProps = {\n  message: {},\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nconst MessageSwitch = ({\n  message,\n  userId,\n  disabled,\n  isByMe,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) => (\n  <div className={`sendbird-file-message${isByMe ? '--outgoing' : '--incoming'}`}>\n    {\n      isByMe\n        ? (\n          <OutgoingFileMessage\n            message={message}\n            userId={userId}\n            disabled={disabled}\n            showRemove={showRemove}\n            status={status}\n            resendMessage={resendMessage}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n        : (\n          <IncomingFileMessage\n            userId={userId}\n            message={message}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n    }\n  </div>\n);\n\n\nMessageSwitch.propTypes = {\n  message: PropTypes.shape({}),\n  userId: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessageSwitch.defaultProps = {\n  message: {},\n  isByMe: false,\n  disabled: false,\n  showRemove: noop,\n  resendMessage: noop,\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nexport default MessageSwitch;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import format from 'date-fns/format';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport default {\n  getMessageCreatedAt,\n};\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst CLASS_NAME = 'sendbird-unknown-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function UnknownMessage({\n  message,\n  isByMe,\n  status,\n  className,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n  injectingClassName.push(`${CLASS_NAME}${isByMe ? '--outgoing' : '--incoming'}`);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUnknownMessage\n              status={status}\n              message={message}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUnknownMessage\n              message={message}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  isByMe: PropTypes.bool,\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nUnknownMessage.defaultProps = {\n  isByMe: false,\n  status: '',\n  className: '',\n  showRemove: () => { },\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUnknownMessage({\n  message,\n  status,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-outgoing-unknown-message';\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}--left-padding`}>\n          <div\n            className={`${className}__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${className}__more__menu`}\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={menuRef}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  <MenuItem\n                    onClick={() => { showRemove(true); closeDropdown(); }}\n                  >\n                    Delete\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className={`${className}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUnknownMessage({\n  message,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-incoming-unknown-message';\n  const { sender } = message;\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  return (\n    <div\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}__left`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${className}__left__sender-profile-image`}\n                    src={sender.profileUrl}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          {\n            !chainTop && (\n              <Label\n                className={`${className}__body__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {sender.nickname || stringSet.NO_NAME}\n              </Label>\n            )\n          }\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n        <div className={`${className}--right-padding`}>\n          {\n            !chainBottom && (\n              <Label\n                className={`${className}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {utils.getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  status: PropTypes.string.isRequired,\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUnknownMessage.defaultProps = {\n  showRemove: () => { },\n};\n\nIncomingUnknownMessage.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      nickname: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n  }).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","export const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const OG_MESSAGE = 'sendbird-og-message';\nexport const OUTGOING_OG_MESSAGE = 'sendbird-outgoing-og-message';\nexport const INCOMING_OG_MESSAGE = 'sendbird-incoming-og-message';\nexport const generateMockMessage = (process) => {\n  const message = {\n    message: 'go to this link sendbird.com it will be usefull to you!!',\n    ogMetaData: {\n      title: 'This is the TITLE',\n      description: 'I\\'m description I\\'m description I\\'m description I\\'m description ',\n      url: 'https://sendbird.com/',\n      defaultImage: {\n        url: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n        alt: 'test',\n      },\n    },\n    sender: {\n      profileUrl: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n      nickname: 'Hoonying',\n    },\n    createdAt: 2000000,\n  };\n  if (process && typeof process === 'function') {\n    return process(message);\n  }\n  return message;\n};\n\nexport default {\n  URL_REG,\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n  generateMockMessage,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const createUrlTester = (regexp) => (text) => regexp.test(text);\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport const copyToClipboard = (text) => {\n  try {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path\n      // to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData('Text', text);\n    }\n    if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n      const textarea = document.createElement('textarea');\n      textarea.textContent = text;\n      textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n    return false;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const checkOGIsEnalbed = (message) => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n\nexport default {\n  getSenderName,\n  createUrlTester,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { createUrlTester } from './utils';\nimport { URL_REG } from './const';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst WORD_COLOR = LabelColors.ONBACKGROUND_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\nconst isUrl = createUrlTester(URL_REG);\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={className}\n              src={word}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={className}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </Label>\n          )\n      ));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n} from './const';\nimport {\n  getSenderName,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n} from './utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport './index.scss';\n\nimport UserProfile from '../UserProfile';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport Avatar from '../Avatar/index';\n\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst GROUPING_PADDING = '1px';\nconst NORAML_PADDING = '8px';\n\nconst OGMessageSwitch = ({\n  isByMe,\n  userId,\n  status,\n  message,\n  disabled,\n  showEdit,\n  chainTop,\n  className,\n  membersMap,\n  showRemove,\n  useReaction,\n  emojiAllMap,\n  chainBottom,\n  resendMessage,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) => {\n  const { ogMetaData } = message;\n  const injectingClassName = Array.isArray(className) ? className : [className];\n\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-og-message-word',\n  });\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  return (\n    <div className={`${OG_MESSAGE} ${OG_MESSAGE}${isByMe ? '--outgoing' : '--incoming'} ${injectingClassName.join(' ')}`}>\n      {\n        isByMe\n          ? (\n            <OutgoingOGMessage\n              status={status}\n              userId={userId}\n              message={message}\n              disabled={disabled}\n              openLink={openLink}\n              showEdit={showEdit}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n          : (\n            <IncomingOGMessage\n              userId={userId}\n              message={message}\n              openLink={openLink}\n              chainTop={chainTop}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nfunction OutgoingOGMessage(props) {\n  const {\n    status,\n    userId,\n    message,\n    disabled,\n    openLink,\n    showEdit,\n    chainTop,\n    showRemove,\n    membersMap,\n    chainBottom,\n    emojiAllMap,\n    useReaction,\n    resendMessage,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={OUTGOING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_OG_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_OG_MESSAGE}--left-padding`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${OUTGOING_OG_MESSAGE}__more__menu`}\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        className={`${OUTGOING_OG_MESSAGE}__more__menu__copy`}\n                        onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className={`${OUTGOING_OG_MESSAGE}__more__add-reaction`}\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className={`${OUTGOING_OG_MESSAGE}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_OG_MESSAGE}--body`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt}\n                  className={`${OUTGOING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${OUTGOING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.NO_THUMBNAIL}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__title`}>\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <Label\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_2}\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__url`}\n                >\n                  {ogMetaData.url}\n                </Label>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingOGMessage(props) {\n  const {\n    userId,\n    message,\n    openLink,\n    chainTop,\n    membersMap,\n    chainBottom,\n    useReaction,\n    emojiAllMap,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={INCOMING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${INCOMING_OG_MESSAGE}--inner`}>\n        <div className={`${INCOMING_OG_MESSAGE}--body`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${INCOMING_OG_MESSAGE}__avatar`}\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt || ''}\n                  className={`${INCOMING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${INCOMING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.NO_THUMBNAIL}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__title`}>\n\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__url`}>\n                  <Label\n                    type={LabelTypography.CAPTION_3}\n                    color={LabelColors.ONBACKGROUND_2}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__url__label`}\n                  >\n                    {ogMetaData.url}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_OG_MESSAGE}--right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_REACTIONS_ADD}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      message={message}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                >\n                  <MenuItem\n                    className={`${INCOMING_OG_MESSAGE}__more__menu__copy`}\n                    onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OGMessageSwitch;\n\nconst noop = () => { };\n\nOGMessageSwitch.propTypes = {\n  isByMe: PropTypes.bool.isRequired,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  status: PropTypes.string,\n  disabled: PropTypes.bool,\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  toggleReaction: PropTypes.func,\n  membersMap: PropTypes.instanceOf(Map),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nOGMessageSwitch.defaultProps = {\n  className: '',\n  status: '',\n  disabled: false,\n  showEdit: noop,\n  showRemove: noop,\n  resendMessage: noop,\n  toggleReaction: noop,\n  membersMap: new Map(),\n  emojiAllMap: new Map(),\n  memoizedEmojiListItems: noop,\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingOGMessage.propTypes = {\n  status: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n    isResendable: PropTypes.func,\n    errorCode: PropTypes.number,\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  openLink: PropTypes.func.isRequired,\n  showEdit: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingOGMessage.defaultProps = {\n  status: '',\n};\n\nIncomingOGMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  openLink: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Message from '../../../ui/Message';\nimport AdminMessage from '../../../ui/AdminMessage';\nimport ThumbnailMessage from '../../../ui/ThumbnailMessage';\nimport FileMessage from '../../../ui/FileMessage';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport UnknownMessage from '../../../ui/UnknownMessage';\nimport OGMessage from '../../../ui/OGMessage';\n\nimport { MessageTypes, getMessageType } from '../types';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  deleteMessage,\n  updateMessage,\n  status,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel);\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        {/* date-seperator */}\n        {\n          hasSeperator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy')}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: <AdminMessage message={message} />,\n          [MessageTypes.FILE]: (\n            <FileMessage\n              message={message}\n              userId={userId}\n              disabled={disabled}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.OG]: (\n            <OGMessage\n              message={message}\n              status={status}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              disabled={disabled}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.THUMBNAIL]: (\n            <ThumbnailMessage\n              disabled={disabled}\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              onClick={setShowFileViewer}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.USER]: (\n            <Message\n              message={message}\n              disabled={disabled}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateSeperator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape,\n  hasSeperator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeperator: false,\n  disabled: false,\n  status: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport {\n  getParsedStatus,\n  compareMessagesForGrouping,\n} from '../utils';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      readStatus,\n      membersMap,\n      initialized,\n      allMessages,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n    } = this.props;\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              initialized\n              && allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeperator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            emojiContainer,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      status={readStatus[m.messageId] || getParsedStatus(m, currentGroupChannel)}\n                      // show status for pending/failed messages\n                      message={m}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      editDisabled={editDisabled}\n                      hasSeperator={hasSeperator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  initialized: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  initialized: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  onScroll: null,\n  useReaction: true,\n  emojiContainer: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.SHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { RenderMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(renderProps: RenderMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n  isOnline,\n  initialized,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={(utils.isDisabledBecauseFrozen(channel)\n        && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n        || (utils.isDisabledBecauseMuted(channel)\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED\n        )\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className=\"sendbird-conversation__connection-status\"\n    >\n      <Label type={LabelTypography.BODY_2} color={LabelColors.ONBACKGROUND_2}>\n        { stringSet.TRYING_TO_CONNECT }\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        height=\"14px\"\n        width=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getOthersLastSeenAt = (channel) => {\n  if (!channel || !channel.getReadStatus || !channel.members || channel.members.length !== 2) {\n    return '';\n  }\n  const lastSeenList = [...Object.values(channel.getReadStatus())];\n  const lastSeenAt = lastSeenList.length > 0\n    ? lastSeenList[0].last_seen_at\n    : 0;\n  if (lastSeenAt === 0) {\n    return '';\n  }\n  return prettyDate(lastSeenAt);\n};\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AutoRefresh({\n  repeatFunc,\n}) {\n  const [label, setLabel] = useState(repeatFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (label !== repeatFunc()) {\n        setLabel(repeatFunc());\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (<div className=\"sendbird-repeat-text\">{label}</div>);\n}\n\nAutoRefresh.propTypes = {\n  repeatFunc: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport AutoRefresh from '../AutoRefresh';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isActive,\n    isMuted,\n    onActionClick,\n    theme,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        {\n          (typeof isActive === 'string' && isActive === 'true') || (typeof isActive === 'boolean' && isActive)\n            ? <div className=\"sendbird-chat-header__active\" />\n            : null\n        }\n        <Label\n          className=\"sendbird-chat-header__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {\n            subTitle\n            || <AutoRefresh repeatFunc={() => utils.getOthersLastSeenAt(currentGroupChannel)} />\n          }\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          (typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted)\n            ? <Icon className=\"sendbird-chat-header__mute\" type={IconTypes.MUTE} width=\"24px\" height=\"24px\" />\n            : null\n        }\n        <IconButton\n          className=\"sendbird-chat-header__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon type={IconTypes.INFO} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  theme: PropTypes.string,\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isActive: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  title: '',\n  theme: 'light',\n  subTitle: '',\n  isActive: false,\n  isMuted: false,\n  currentUser: {},\n  onActionClick: () => { },\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useSetReadStatus from './hooks/useSetReadStatus';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    useReaction,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery will be deprecared in v1.3.0, please use messageListParams instead');\n  }\n\n  const userFilledMessageListQuery = queries.messageListParams || queries.messageListQuery;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    hasMore,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    lastMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    (appInfo.isUsingReaction && !isBroadcast) || useReaction || false\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, userId },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useInitialMessagesFetch({ currentGroupChannel, userFilledMessageListQuery }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // to create initial read status\n  useSetReadStatus(\n    { allMessages, currentGroupChannel },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (loading) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isActive={false}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              utils.scrollIntoLast('.sendbird-msg--scroll-ref');\n              // there is no scroll\n              if (scrollRef.current.scrollTop === 0) {\n                currentGroupChannel.markAsRead();\n                messagesDispatcher({\n                  type: messageActionTypes.MARK_AS_READ,\n                });\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      <ConversationScroll\n        swapParams={\n          sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n        }\n        userId={userId}\n        hasMore={hasMore}\n        disabled={!isOnline}\n        onScroll={onScrollCallback}\n        scrollRef={scrollRef}\n        readStatus={readStatus}\n        initialized={initialized}\n        useReaction={usingReaction}\n        allMessages={allMessages}\n        emojiAllMap={emojiAllMap}\n        membersMap={nicknamesMap}\n        editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n        deleteMessage={deleteMessage}\n        updateMessage={updateMessage}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        emojiContainer={emojiContainer}\n        renderChatItem={renderChatItem}\n        renderCustomMessage={renderCustomMessage}\n        useMessageGrouping={useMessageGrouping}\n        messagesDispatcher={messagesDispatcher}\n        currentGroupChannel={currentGroupChannel}\n        memoizedEmojiListItems={memoizedEmojiListItems}\n      />\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n    // deprecate in v1.3\n    messageListQuery: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","SET_READ_STATUS","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","message","isUserMessage","messageType","ogMetaData","isAdminMessage","isFileMessage","isImage","type","isVideo","UNDEFINED","scrollIntoLast","selector","intialTry","MAX_TRIES","currentTry","nodes","document","querySelectorAll","last","length","scrollIntoView","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","url","channelActions","payload","fromSelector","messageId","getParsedStatus","currentGroupChannel","requestState","MessageStatusType","SENT","unreadCount","getReadReceipt","READ","isDelivered","getDeliveryReceipt","DELIVERED","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","lastIndexOf","messages","splice","initialized","loading","hasMore","lastMessageTimeStamp","readStatus","unreadSince","isInvalid","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","indexOf","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","messageActions","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","markAsRead","catch","e","warning","getAllEmoji","emojiContainer_","err","useInitialMessagesFetch","userFilledMessageListQuery","MessageListParams","getMessagesByMessageId","messageListParams","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","getMessagesByTimestamp","getTime","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","useDeleteMessageCallback","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","current","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","file_","FileMessageParams","sendFileMessage","response","localUrl","URL","createObjectURL","useSetReadStatus","setReadStatus","allReadStatus","reduce","accumulator","handler","handleMessageStatus","c","onDeliveryReceiptUpdated","onReadReceiptUpdated","handlerId","ReactionButton","React","forwardRef","props","ref","children","width","height","onClick","selected","className","injectingClassName","Array","isArray","join","slice","propTypes","PropTypes","element","isRequired","func","bool","oneOfType","number","string","arrayOf","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","emoji","reactedReaction","reactions","reaction","isReacted","userIds","IconTypes","EMOJI_FAILED","useToggleReactionCallback","deleteReaction","addReaction","MessageStatus","status","label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","icon","SPINNER","IconColors","ERROR","objectOf","array","object","ReactionBadge","count","isAdd","unshift","ONBACKGROUND_1","CLASS_NAME","Tooltip","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","EmojiReactions","emojiAllMap","membersMap","memoizedEmojiListItems","MemoizedEmojiListItems","imageWidth","imageHeight","emojiReactionAddRef","messageReactions","useContext","LocalizationContext","stringSet","emojiUrl","get","reactedUserCount","reactedByMe","nicknames","currentUserId","TOOLTIP__UNKOWN_USER","stringSetForMe","TOOLTIP__AND_YOU","TOOLTIP__YOU","size","toggleDropdown","ON_BACKGROUND_3","EMOJI_REACTIONS_ADD","y","shape","instanceOf","WORD_TYPOGRAPHY","BODY_1","EDITED_COLOR","useMemoizedMessageText","updatedAt","splitMessage","split","matchedMessage","word","MESSAGE_EDITED","MOUSE_ENTER","MOUSE_LEAVE","useMouseHover","setHover","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","noop","GROUPING_PADDING","NORMAL_PADDING","Message","isByMe","resendMessage","disabled","showEdit","showRemove","chainTop","chainBottom","memoizedMessageText","OutgoingUserMessage","MemoizedMessageText","messageRef","parentRefReactions","parentRefMenus","isMessageSent","getIsSentFromStatus","mousehover","setMousehover","moreActive","setMoreActive","handleMoreIconClick","handleMoreIconBlur","paddingTop","paddingBottom","MORE","CONTENT_INVERSE","copyToClipboard","IncomingUserMessage","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","showReactionAddButton","showEmojiReactions","getSenderProfileUrl","user","close","CAPTION_2","getSenderName","AdminMessage","OUTGOING_THUMBNAIL_MESSAGE","INCOMING_THUMBNAIL_MESSAGE","ThumbnailMessage","OutgoingThumbnailMessage","menuRef","reactionAddRef","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","PLAY","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","unSupported","UNKNOWN__UNKNOWN_MESSAGE_TYPE","IncomingThumbnailMessage","MAX_TRUNCATE_LENGTH","GROUPAING_PADDING","checkFileType","fileUrl","result","imageFile","audioFile","test","FILE_DOCUMENT","FILE_AUDIO","OutgoingFileMessage","openFileUrl","window","open","reactionAddButtonRef","truncate","IncomingFileMessage","MessageSwitch","RemoveMessage","onCloseModal","onDeleteMessage","MODAL__DELETE_MESSAGE__TITLE","UnknownMessage","OutgoingUnknownMessage","UNKNOWN__CANNOT_READ_MESSAGE","IncomingUnknownMessage","profileUrl","NO_NAME","URL_REG","OG_MESSAGE","OUTGOING_OG_MESSAGE","INCOMING_OG_MESSAGE","createUrlTester","regexp","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","friendName","checkOGIsEnalbed","WORD_COLOR","isUrl","NORAML_PADDING","OGMessageSwitch","openLink","OutgoingOGMessage","defaultImage","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","alt","NO_THUMBNAIL","title","SUBTITLE_2","description","BODY_2","event","stopPropagation","IncomingOGMessage","errorCode","MessageHoc","editDisabled","hasSeperator","updateMessage","renderCustomMessage","setShowEdit","setShowRemove","showFileViewer","setShowFileViewer","editMessageInputRef","RenderedMessage","FileMessage","OGMessage","RemoveMessageModal","isDateSeperator","ConversationScroll","scrollRef","onScroll","target","scrollTop","clientHeight","scrollHeight","first","renderChatItem","useMessageGrouping","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","MessageHOC","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","ONCONTENT_1","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","SHEVRON_DOWN","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","setHandlerId","typingMembers","setTypingMembers","newHandlerId","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","_a","onSendMessage","onFileUpload","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","prettyDate","date","formatDistanceToNowStrict","addSuffix","getOthersLastSeenAt","getReadStatus","lastSeenList","values","lastSeenAt","last_seen_at","getChannelTitle","LabelStringSet","name","NO_TITLE","NO_MEMBERS","AutoRefresh","repeatFunc","setLabel","interval","setInterval","clearInterval","ChatHeader","currentUser","subTitle","isActive","isMuted","onActionClick","theme","H_2","MUTE","INFO","PRIMARY","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","useReducer","messagesReducer","messagesInitialState","messagesStore","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","useGetChannel","subScriber","onSendFileMessage","PlaceHolderTypes","WRONG","NO_CHANNELS","LOADING","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}