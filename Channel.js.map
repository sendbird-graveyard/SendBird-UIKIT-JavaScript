{"version":3,"file":"Channel.js","sources":["../src/smart-components/Conversation/dux/actionTypes.js","../src/smart-components/Conversation/types.js","../src/smart-components/Conversation/utils.js","../src/smart-components/Conversation/dux/initialState.js","../src/smart-components/Conversation/dux/reducers.js","../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../src/smart-components/Conversation/hooks/useGetChannel.js","../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../src/smart-components/Conversation/hooks/useHandleReconnect.js","../src/smart-components/Conversation/hooks/useScrollCallback.js","../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../src/smart-components/Conversation/hooks/useSetReadStatus.js","../src/ui/ReactionButton/index.jsx","../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../src/ui/MessageStatus/index.jsx","../src/ui/ReactionBadge/index.jsx","../src/ui/Tooltip/index.jsx","../src/ui/TooltipWrapper/index.jsx","../src/ui/EmojiReactions/index.jsx","../src/ui/Message/memoizedMessageText.jsx","../src/hooks/onMouseHover.jsx","../src/ui/Message/index.jsx","../src/ui/AdminMessage/index.jsx","../src/ui/ThumbnailMessage/util.js","../src/ui/ThumbnailMessage/index.jsx","../src/ui/FileMessage/index.jsx","../src/smart-components/Conversation/components/RemoveMessage.jsx","../src/ui/UnknownMessage/utils.js","../src/ui/UnknownMessage/index.jsx","../src/ui/OGMessage/const.js","../src/ui/OGMessage/utils.js","../src/ui/OGMessage/memoizedMessageText.jsx","../src/ui/OGMessage/index.jsx","../src/smart-components/Conversation/components/MessageHOC.jsx","../src/smart-components/Conversation/components/ConversationScroll.jsx","../src/smart-components/Conversation/components/Notification.jsx","../src/smart-components/Conversation/components/FrozenNotification.tsx","../src/smart-components/Conversation/components/TypingIndicator.jsx","../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../src/ui/ConnectionStatus/index.jsx","../src/ui/ChatHeader/utils.js","../src/ui/AutoRefresh/index.jsx","../src/ui/ChatHeader/index.jsx","../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nexport const SET_READ_STATUS = 'SET_READ_STATUS';\n","import { isImage, isVideo } from '../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message) => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if ((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return '';\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../../ui/MessageStatus/type';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport { SendingMessageStatus } from './types';\n\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = SendingMessageStatus;\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  readStatus: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { SendingMessageStatus } from '../types';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = SendingMessageStatus;\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...filteredAllMessages,\n          ...receivedMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (!(state.allMessages.map((msg) => msg.messageId).indexOf(message.messageId) < 0)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.SET_READ_STATUS: {\n      return {\n        ...state,\n        readStatus: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, currentGroupChannel.url) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                currentGroupChannel.markAsRead();\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, currentGroupChannel.url) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByMessageId) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n      }\n\n      currentGroupChannel.getMessagesByTimestamp(\n        intialTimeStamp || new Date().getTime(),\n        messageListParams,\n      )\n        .then((messages) => {\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimeStamp = hasMore\n            ? messages[0].createdAt\n            : null;\n\n          const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages,\n              hasMore,\n              lastMessageTimeStamp,\n              currentGroupChannel,\n              latestFetchedMessageTimeStamp,\n              hasMoreToBottom: false,\n              // for handling message navigation\n              ...(intialTimeStamp && {\n                hasMoreToBottom: true,\n              }),\n            },\n          });\n        })\n        .catch((error) => {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel,\n            },\n          });\n        })\n        .finally(() => {\n          if (!intialTimeStamp) {\n            setTimeout(() => utils.scrollIntoLast());\n          }\n          currentGroupChannel.markAsRead();\n        });\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', message);\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!');\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', message);\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\n\nexport default function useSetReadStatus({ allMessages, currentGroupChannel }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (!sdk.ChannelHandler || !currentGroupChannel.url) {\n      return () => {};\n    }\n    // todo: move to reducer?\n    const setReadStatus = () => {\n      const allReadStatus = allMessages.reduce((accumulator, msg) => {\n        if (msg.messageId !== 0) {\n          return {\n            ...accumulator,\n            [msg.messageId]: utils.getParsedStatus(msg, currentGroupChannel),\n          };\n        }\n        return accumulator;\n      }, {});\n      messagesDispatcher({\n        type: messageActionTypes.SET_READ_STATUS,\n        payload: allReadStatus,\n      });\n    };\n    if (allMessages.length > 0) {\n      setReadStatus();\n    }\n\n    const channelUrl = currentGroupChannel.url;\n    const handler = new sdk.ChannelHandler();\n    const handleMessageStatus = (c) => {\n      if (channelUrl === c.url) {\n        setReadStatus();\n      }\n    };\n    handler.onDeliveryReceiptUpdated = handleMessageStatus;\n    handler.onReadReceiptUpdated = handleMessageStatus;\n    // Add this channel event handler to the SendBird object.\n    const handlerId = uuidv4();\n    logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n    sdk.addChannelHandler(handlerId, handler);\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n        sdk.removeChannelHandler(handlerId);\n      }\n    };\n  }, [allMessages, currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    children,\n    width,\n    height,\n    onClick,\n    selected,\n    className,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={ref}\n      className={`sendbird-reaction-button${selected ? '--selected' : ''} ${injectingClassName.join(' ')}`}\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      role=\"button\"\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nReactionButton.defaultProps = {\n  selected: false,\n  width: '36px',\n  height: '36px',\n  onClick: () => { },\n  className: '',\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\nimport MessageStatusType from './type';\n\nimport { getMessageCreatedAt } from '../../utils/utils';\n\nconst MessageStatusTypes = MessageStatusType;\nexport { MessageStatusTypes };\nexport default function MessageStatus({\n  message,\n  status,\n  className,\n}) {\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  const label = () => {\n    switch (status) {\n      case MessageStatusType.FAILED:\n      case MessageStatusType.PENDING: {\n        return null;\n      }\n      case MessageStatusType.SENT:\n      case MessageStatusType.DELIVERED:\n      case MessageStatusType.READ: {\n        return (\n          <Label\n            className=\"sendbird-message-status__text\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getMessageCreatedAt(message)}\n          </Label>\n        );\n      }\n      default: return null;\n    }\n  };\n\n  const icon = {\n    PENDING: (\n      <Loader className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\">\n        <Icon type={IconTypes.SPINNER} width=\"16px\" height=\"16px\" />\n      </Loader>\n    ),\n    SENT: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE} fillColor={IconColors.SENT} />,\n    DELIVERED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE_ALL} fillColor={IconColors.SENT} />,\n    READ: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE_ALL} fillColor={IconColors.READ} />,\n    FAILED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.ERROR} />,\n  };\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message-status'].join(' ')}>\n      {icon[status]}\n      <br />\n      {label(status)}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nMessageStatus.defaultProps = {\n  message: null,\n  status: '',\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  if (selected && !isAdd) {\n    injectingClassName.unshift('sendbird-reaction-badge--selected');\n  } else if (isAdd) {\n    injectingClassName.push('sendbird-reaction-badge--is-add');\n  } else {\n    injectingClassName.unshift('sendbird-reaction-badge');\n  }\n\n  return (\n    <div\n      ref={ref}\n      tabIndex={0}\n      role=\"button\"\n      className={injectingClassName.join(' ')}\n      onClick={onClick}\n      onKeyDown={onClick}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label className={children && count ? 'sendbird-reaction-badge__inner__count' : ''} type={LabelTypography.CAPTION_3} color={LabelColors.ONBACKGROUND_1}>\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label from '../Label';\n\nconst CLASS_NAME = 'sendbird-tooltip';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <Label\n        className={`${CLASS_NAME}__text`}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst CLASS_NAME = 'sendbird-tooltip-wrapper';\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const injectingClassName = Array.isArray(className)\n    ? [CLASS_NAME, ...className]\n    : [CLASS_NAME, className];\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className={`${CLASS_NAME}__children`}\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className={`${CLASS_NAME}__hover-tooltip`}\n            style={{\n              bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)`,\n            }}\n          >\n            <div\n              className={`${CLASS_NAME}__hover-tooltip__inner`}\n            >\n              <div\n                className={`${CLASS_NAME}__hover-tooltip__inner__tooltip-container`}\n                style={{\n                  left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)`,\n                }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React, { useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ReactionBadge from '../ReactionBadge';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu from '../ContextMenu';\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function EmojiReactions({\n  className,\n  userId,\n  message,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift('sendbird-emoji-reactions');\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const imageWidth = '20px';\n  const imageHeight = '20px';\n  const emojiReactionAddRef = useRef(null);\n  const { reactions = [] } = message;\n  const messageReactions = reactions;\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-emoji-reactions--inner\">\n        {\n          messageReactions && (\n            messageReactions.map((reaction) => {\n              const { userIds = [] } = reaction;\n              const emojiUrl = emojiAllMap.get(reaction.key) || '';\n              const reactedUserCount = userIds.length;\n              const reactedByMe = !(userIds.indexOf(userId) < 0);\n              const nicknames = userIds\n                .filter((currentUserId) => currentUserId !== userId)\n                .map((currentUserId) => (\n                  membersMap.get(currentUserId) || stringSet.TOOLTIP__UNKOWN_USER\n                ));\n              const stringSetForMe = (nicknames.length > 0)\n                ? stringSet.TOOLTIP__AND_YOU : stringSet.TOOLTIP__YOU;\n              return (\n                <TooltipWrapper\n                  className=\"sendbird-emoji-reactions__emoji-reaction\"\n                  key={reaction.key}\n                  hoverTooltip={\n                    userIds.length > 0 && (\n                      <Tooltip>\n                        <>\n                          {\n                            `${(\n                              nicknames.join(', ')\n                            )}${(\n                              reactedByMe\n                                ? stringSetForMe\n                                : ''\n                            )}`\n                          }\n                        </>\n                      </Tooltip>\n                    )\n                  }\n                >\n                  <ReactionBadge\n                    count={reactedUserCount}\n                    selected={reactedByMe}\n                    onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n                  >\n                    <ImageRenderer\n                      circle\n                      url={emojiUrl}\n                      width={imageWidth}\n                      height={imageHeight}\n                      defaultComponent={(\n                        <Icon\n                          width={imageWidth}\n                          height={imageHeight}\n                          type={IconTypes.QUESTION}\n                        />\n                      )}\n                    />\n                  </ReactionBadge>\n                </TooltipWrapper>\n              );\n            })\n          )\n        }\n        {\n          (messageReactions.length < emojiAllMap.size)\n          && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <ReactionBadge\n                  isAdd\n                  onClick={toggleDropdown}\n                  className=\"sendbird-emoji-reactions__emoji-reaction-add\"\n                  ref={emojiReactionAddRef}\n                >\n                  <Icon\n                    width={imageWidth}\n                    height={imageHeight}\n                    fillColor={IconColors.ON_BACKGROUND_3}\n                    type={IconTypes.EMOJI_MORE}\n                  />\n                </ReactionBadge>\n              )}\n              menuItems={(closeDropdown) => (\n                <MemoizedEmojiListItems\n                  message={message}\n                  parentRef={emojiReactionAddRef}\n                  parentContainRef={emojiReactionAddRef}\n                  closeDropdown={closeDropdown}\n                  spaceFromTrigger={{ y: 4 }}\n                />\n              )}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nEmojiReactions.propTypes = {\n  userId: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    reactions: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\nEmojiReactions.defaultProps = {\n  className: '',\n  membersMap: new Map(),\n  userId: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport uuidv4 from '../../utils/uuid';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(/\\r/);\n    const matchedMessage = splitMessage\n      .map((word) => (word !== '' ? word : <br />));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import { useEffect } from 'react';\n\nconst MOUSE_ENTER = 'mouseenter';\nconst MOUSE_LEAVE = 'mouseleave';\n\nconst useMouseHover = ({\n  ref,\n  setHover,\n}) => {\n  const handleMouseOver = () => {\n    if (ref.current) {\n      setHover(true);\n    }\n  };\n  const handleMouseOut = () => {\n    if (ref.current) {\n      setHover(false);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = ref;\n    current.addEventListener(MOUSE_ENTER, handleMouseOver);\n    current.addEventListener(MOUSE_LEAVE, handleMouseOut);\n    return () => {\n      current.removeEventListener(MOUSE_ENTER, handleMouseOver);\n      current.removeEventListener(MOUSE_LEAVE, handleMouseOut);\n    };\n  });\n};\n\nexport default useMouseHover;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport UserProfile from '../UserProfile';\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport MessageStatus from '../MessageStatus';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  copyToClipboard,\n  getMessageCreatedAt,\n  getSenderName,\n  getSenderProfileUrl,\n  getIsSentFromStatus,\n} from './utils';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst noop = () => { };\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function Message(props) {\n  const {\n    isByMe,\n    userId,\n    message,\n    className,\n    resendMessage,\n    disabled,\n    showEdit,\n    showRemove,\n    status,\n    useReaction,\n    emojiAllMap,\n    membersMap,\n    toggleReaction,\n    memoizedEmojiListItems,\n    chainTop,\n    chainBottom,\n  } = props;\n\n  if (!message) return null;\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  injectingClassName.push(`sendbird-message${isByMe ? '--outgoing' : '--incoming'}`);\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-user-message-word',\n  });\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message'].join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUserMessage\n              userId={userId}\n              message={message}\n              resendMessage={resendMessage}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUserMessage\n              userId={userId}\n              message={message}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])).isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showEdit: PropTypes.func,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  userId: '',\n  resendMessage: noop,\n  className: '',\n  showEdit: noop,\n  showRemove: noop,\n  status: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUserMessage({\n  userId,\n  message,\n  showEdit,\n  disabled,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  // TODO: when message.requestState is succeeded, consider if it's SENT or DELIVERED\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-user-message--outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div\n          className=\"sendbird-user-message__left-padding\"\n        >\n          <div className=\"sendbird-user-message__more\" ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className=\"sendbird-user-message__more__menu\"\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          className=\"sendbird-user-message--copy\"\n                          onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                        >\n                          Copy\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          onClick={() => {\n                            if (disabled) { return; }\n                            showEdit(true);\n                            closeDropdown();\n                          }}\n                        >\n                          Edit\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem\n                      onClick={() => {\n                        if (disabled) { return; }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__add-reaction\"\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-user-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-user-message__text-balloon\">\n          <div className=\"sendbird-user-message__text-balloon__inner\">\n            <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n              <Label\n                className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                <MemoizedMessageText />\n              </Label>\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUserMessage({\n  userId,\n  message,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className=\"sendbird-user-message--incoming\"\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div className=\"sendbird-user-message--body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-user-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-user-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-user-message__text-balloon\">\n            <div className=\"sendbird-user-message__text-balloon__inner\">\n              <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n                <Label\n                  className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  <MemoizedMessageText />\n                </Label>\n              </div>\n              {\n                showEmojiReactions && (\n                  <EmojiReactions\n                    className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                    userId={userId}\n                    message={message}\n                    emojiAllMap={emojiAllMap}\n                    membersMap={membersMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"sendbird-user-message__right-padding\">\n          <div\n            className=\"sendbird-user-message__more\"\n            ref={parentContainRef}\n            style={{ top: chainTop ? '6px' : '22px' }}\n          >\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        message={message}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                  >\n                    <MenuItem\n                      className=\"sendbird-user-message--copy\"\n                      onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                    >\n                      Copy\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-user-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nIncomingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingUserMessage.defaultProps = {\n  message: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nOutgoingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  disabled: PropTypes.bool,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUserMessage.defaultProps = {\n  message: {},\n  resendMessage: noop,\n  showEdit: noop,\n  showRemove: noop,\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!message.messageType || message.messageType !== 'admin') { // change to use message.isAdminMessage()\n    return null;\n  }\n\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  return (\n    <div className={[...injectingClassName, 'sendbird-admin-message'].join(' ')}>\n      <Label className=\"sendbird-admin-message__text\" type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport default {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n};\n","import React, { useContext, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n} from './util';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  isImage,\n  isVideo,\n  unSupported,\n} from '../FileViewer/types';\nimport {\n  getSenderName,\n  getSenderProfileUrl,\n} from '../../utils/utils';\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst noop = () => { };\n\nconst OUTGOING_THUMBNAIL_MESSAGE = 'sendbird-outgoing-thumbnail-message';\nconst INCOMING_THUMBNAIL_MESSAGE = 'sendbird-incoming-thumbnail-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function ThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  isByMe,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  return (\n    isByMe\n      ? (\n        <OutgoingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          disabled={disabled}\n          chainTop={chainTop}\n          showRemove={showRemove}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          resendMessage={resendMessage}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n      : (\n        <IncomingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          chainTop={chainTop}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n  );\n}\n\nexport function OutgoingThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={OUTGOING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__left-padding`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    color={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              isMessageSent && showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <MessageStatus\n                message={message}\n                status={status}\n                className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__status`}\n              />\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__body`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap`}\n          >\n            <div\n              className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n              tabIndex={0}\n              role=\"button\"\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                            url={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                            defaultComponent={(\n                              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                                <Icon\n                                  type={IconTypes.PLAY}\n                                  fillColor={IconColors.ON_BACKGROUND_2}\n                                  width=\"56px\"\n                                  height=\"56px\"\n                                />\n                              </div>\n                            )}\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                          >\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                    defaultComponent={(\n                      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                        <Icon\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingThumbnailMessage({\n  message = {},\n  userId,\n  onClick,\n  status,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const avatarRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={INCOMING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      {\n        !chainTop && (\n          <Label\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__sender-name`}\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message) || ''}\n          </Label>\n        )\n      }\n      <div className={`${INCOMING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__body`}>\n          <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap`}>\n            {\n              !chainBottom && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <Avatar\n                      ref={avatarRef}\n                      onClick={() => {\n                        if (!disableUserProfile) {\n                          toggleDropdown();\n                        }\n                      }}\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__avatar`}\n                      src={getSenderProfileUrl(message)}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      /**\n                       * parentRef: For catching location(x, y) of MenuItems\n                       * parentContainRef: For toggling more options(menus & reactions)\n                       */\n                      parentRef={avatarRef}\n                      parentContainRef={avatarRef}\n                      closeDropdown={closeDropdown}\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                    >\n                      {\n                        renderUserProfile\n                          ? renderUserProfile({\n                            user: message.sender,\n                            close: closeDropdown,\n                          })\n                          : (\n                            <UserProfile\n                              user={message.sender}\n                              onSuccess={closeDropdown}\n                            />\n                          )\n                      }\n                    </MenuItems>\n                  )}\n                />\n              )\n            }\n            <div\n              className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              role=\"button\"\n              tabIndex={0}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}\n                            url={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                            defaultComponent={(\n                              <div className={`${INCOMING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                                <Icon\n                                  type={IconTypes.PLAY}\n                                  fillColor={IconColors.ON_BACKGROUND_2}\n                                  width=\"56px\"\n                                  height=\"56px\"\n                                />\n                              </div>\n                            )}\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}>\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__video-icon`}\n                      width=\"56px\"\n                      height=\"56px\"\n                      type={IconTypes.PLAY}\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${INCOMING_THUMBNAIL_MESSAGE}__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                    defaultComponent={(\n                      <div className={`${INCOMING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--image`}>\n                        <Icon\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${INCOMING_THUMBNAIL_MESSAGE}__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap-overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${INCOMING_THUMBNAIL_MESSAGE}__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className={`${INCOMING_THUMBNAIL_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__more`}\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        color={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  showRemove: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\nThumbnailMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  resendMessage: noop,\n  onClick: noop,\n  showRemove: noop,\n  status: '',\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nOutgoingThumbnailMessage.defaultProps = {\n  status: '',\n};\n\nIncomingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nIncomingThumbnailMessage.defaultProps = {\n  status: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport Avatar from '../Avatar/index';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\n\nimport { getSenderProfileUrl, getSenderName, getMessageCreatedAt } from '../../utils/utils';\nimport {\n  truncate,\n  getIsSentFromStatus,\n} from './utils';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst MAX_TRUNCATE_LENGTH = 40;\nconst GROUPAING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\nconst noop = () => { };\n\nfunction checkFileType(fileUrl) {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport function OutgoingFileMessage({\n  message,\n  userId,\n  status,\n  showRemove,\n  disabled,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    url,\n  } = message;\n  const openFileUrl = () => { window.open(url); };\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n  const showEmojiReactions = isMessageSent && useReaction && message.reactions\n    && (message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__left-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon width=\"24px\" height=\"24px\" type={IconTypes.MORE} />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-file-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-file-message__tooltip\">\n          <div className=\"sendbird-file-message__tooltip__inner\">\n            {\n              checkFileType(url)\n                ? (\n                  <Icon\n                    className=\"sendbird-file-message__tooltip__icon\"\n                    width=\"28px\"\n                    height=\"28px\"\n                    type={checkFileType(url)}\n                  />\n                )\n                : null\n            }\n            <TextButton\n              className=\"sendbird-file-message__tooltip__text\"\n              onClick={openFileUrl}\n            >\n              <Label\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n              </Label>\n            </TextButton>\n          </div>\n          {\n            showEmojiReactions && (\n              <EmojiReactions\n                className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                userId={userId}\n                message={message}\n                emojiAllMap={emojiAllMap}\n                membersMap={membersMap}\n                toggleReaction={toggleReaction}\n                memoizedEmojiListItems={memoizedEmojiListItems}\n              />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingFileMessage({\n  message,\n  userId,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const openFileUrl = () => { window.open(message.url); };\n  const messageRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__incoming\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-file-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-file-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-file-message__tooltip\">\n            <div className=\"sendbird-file-message__tooltip__inner\">\n              {\n                checkFileType(message.url)\n                  ? (\n                    <Icon\n                      className=\"sendbird-file-message__tooltip__icon\"\n                      width=\"28px\"\n                      height=\"28px\"\n                      type={checkFileType(message.url)}\n                    />\n                  )\n                  : null\n              }\n              <TextButton\n                className=\"sendbird-file-message__tooltip__text\"\n                onClick={openFileUrl}\n              >\n                <Label\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {truncate(message.url, MAX_TRUNCATE_LENGTH)}\n                </Label>\n              </TextButton>\n            </div>\n            {\n              (useReaction && message.reactions && (message.reactions.length > 0)) && (\n                <EmojiReactions\n                  className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className=\"sendbird-file-message__right-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-file-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingFileMessage.defaultProps = {\n  status: '',\n  showRemove: noop,\n  resendMessage: noop,\n  message: {},\n  userId: '',\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nIncomingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingFileMessage.defaultProps = {\n  message: {},\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nconst MessageSwitch = ({\n  message,\n  userId,\n  disabled,\n  isByMe,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) => (\n  <div className={`sendbird-file-message${isByMe ? '--outgoing' : '--incoming'}`}>\n    {\n      isByMe\n        ? (\n          <OutgoingFileMessage\n            message={message}\n            userId={userId}\n            disabled={disabled}\n            showRemove={showRemove}\n            status={status}\n            resendMessage={resendMessage}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n        : (\n          <IncomingFileMessage\n            userId={userId}\n            message={message}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n    }\n  </div>\n);\n\n\nMessageSwitch.propTypes = {\n  message: PropTypes.shape({}),\n  userId: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessageSwitch.defaultProps = {\n  message: {},\n  isByMe: false,\n  disabled: false,\n  showRemove: noop,\n  resendMessage: noop,\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nexport default MessageSwitch;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import format from 'date-fns/format';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport default {\n  getMessageCreatedAt,\n};\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst CLASS_NAME = 'sendbird-unknown-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function UnknownMessage({\n  message,\n  isByMe,\n  status,\n  className,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n  injectingClassName.push(`${CLASS_NAME}${isByMe ? '--outgoing' : '--incoming'}`);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUnknownMessage\n              status={status}\n              message={message}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUnknownMessage\n              message={message}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  isByMe: PropTypes.bool,\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nUnknownMessage.defaultProps = {\n  isByMe: false,\n  status: '',\n  className: '',\n  showRemove: () => { },\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUnknownMessage({\n  message,\n  status,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-outgoing-unknown-message';\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}--left-padding`}>\n          <div\n            className={`${className}__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${className}__more__menu`}\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    <MenuItem\n                      onClick={() => { showRemove(true); closeDropdown(); }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className={`${className}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUnknownMessage({\n  message,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-incoming-unknown-message';\n  const { sender } = message;\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  return (\n    <div\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}__left`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${className}__left__sender-profile-image`}\n                    src={sender.profileUrl}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          {\n            !chainTop && (\n              <Label\n                className={`${className}__body__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {sender.nickname || stringSet.NO_NAME}\n              </Label>\n            )\n          }\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n        <div className={`${className}--right-padding`}>\n          {\n            !chainBottom && (\n              <Label\n                className={`${className}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {utils.getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  status: PropTypes.string.isRequired,\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUnknownMessage.defaultProps = {\n  showRemove: () => { },\n};\n\nIncomingUnknownMessage.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      nickname: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n  }).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","export const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const OG_MESSAGE = 'sendbird-og-message';\nexport const OUTGOING_OG_MESSAGE = 'sendbird-outgoing-og-message';\nexport const INCOMING_OG_MESSAGE = 'sendbird-incoming-og-message';\nexport const generateMockMessage = (process) => {\n  const message = {\n    message: 'go to this link sendbird.com it will be usefull to you!!',\n    ogMetaData: {\n      title: 'This is the TITLE',\n      description: 'I\\'m description I\\'m description I\\'m description I\\'m description ',\n      url: 'https://sendbird.com/',\n      defaultImage: {\n        url: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n        alt: 'test',\n      },\n    },\n    sender: {\n      profileUrl: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n      nickname: 'Hoonying',\n    },\n    createdAt: 2000000,\n  };\n  if (process && typeof process === 'function') {\n    return process(message);\n  }\n  return message;\n};\n\nexport default {\n  URL_REG,\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n  generateMockMessage,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const createUrlTester = (regexp) => (text) => regexp.test(text);\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport const copyToClipboard = (text) => {\n  try {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path\n      // to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData('Text', text);\n    }\n    if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n      const textarea = document.createElement('textarea');\n      textarea.textContent = text;\n      textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n    return false;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const checkOGIsEnalbed = (message) => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n\nexport default {\n  getSenderName,\n  createUrlTester,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { createUrlTester } from './utils';\nimport { URL_REG } from './const';\n\nconst WORD_TYPOGRAPHY = LabelTypography.BODY_1;\nconst WORD_COLOR = LabelColors.ONBACKGROUND_1;\nconst EDITED_COLOR = LabelColors.ONBACKGROUND_2;\nconst isUrl = createUrlTester(URL_REG);\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return useMemo(() => () => {\n    const splitMessage = message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={className}\n              src={word}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={className}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </Label>\n          )\n      ));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n} from './const';\nimport {\n  getSenderName,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n} from './utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport './index.scss';\n\nimport UserProfile from '../UserProfile';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport Avatar from '../Avatar/index';\n\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst GROUPING_PADDING = '1px';\nconst NORAML_PADDING = '8px';\n\nconst OGMessageSwitch = ({\n  isByMe,\n  userId,\n  status,\n  message,\n  disabled,\n  showEdit,\n  chainTop,\n  className,\n  membersMap,\n  showRemove,\n  useReaction,\n  emojiAllMap,\n  chainBottom,\n  resendMessage,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) => {\n  const { ogMetaData } = message;\n  const injectingClassName = Array.isArray(className) ? className : [className];\n\n  const memoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-og-message-word',\n  });\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  return (\n    <div className={`${OG_MESSAGE} ${OG_MESSAGE}${isByMe ? '--outgoing' : '--incoming'} ${injectingClassName.join(' ')}`}>\n      {\n        isByMe\n          ? (\n            <OutgoingOGMessage\n              status={status}\n              userId={userId}\n              message={message}\n              disabled={disabled}\n              openLink={openLink}\n              showEdit={showEdit}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n          : (\n            <IncomingOGMessage\n              userId={userId}\n              message={message}\n              openLink={openLink}\n              chainTop={chainTop}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={memoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nfunction OutgoingOGMessage(props) {\n  const {\n    status,\n    userId,\n    message,\n    disabled,\n    openLink,\n    showEdit,\n    chainTop,\n    showRemove,\n    membersMap,\n    chainBottom,\n    emojiAllMap,\n    useReaction,\n    resendMessage,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={OUTGOING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_OG_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_OG_MESSAGE}--left-padding`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${OUTGOING_OG_MESSAGE}__more__menu`}\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        className={`${OUTGOING_OG_MESSAGE}__more__menu__copy`}\n                        onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className={`${OUTGOING_OG_MESSAGE}__more__add-reaction`}\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className={`${OUTGOING_OG_MESSAGE}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_OG_MESSAGE}--body`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt}\n                  className={`${OUTGOING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${OUTGOING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.THUMBNAIL_NONE}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__title`}>\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <Label\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_2}\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__url`}\n                >\n                  {ogMetaData.url}\n                </Label>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingOGMessage(props) {\n  const {\n    userId,\n    message,\n    openLink,\n    chainTop,\n    membersMap,\n    chainBottom,\n    useReaction,\n    emojiAllMap,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={INCOMING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${INCOMING_OG_MESSAGE}--inner`}>\n        <div className={`${INCOMING_OG_MESSAGE}--body`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${INCOMING_OG_MESSAGE}__avatar`}\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt || ''}\n                  className={`${INCOMING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${INCOMING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.THUMBNAIL_NONE}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__title`}>\n\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__url`}>\n                  <Label\n                    type={LabelTypography.CAPTION_3}\n                    color={LabelColors.ONBACKGROUND_2}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__url__label`}\n                  >\n                    {ogMetaData.url}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_OG_MESSAGE}--right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      message={message}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                >\n                  <MenuItem\n                    className={`${INCOMING_OG_MESSAGE}__more__menu__copy`}\n                    onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OGMessageSwitch;\n\nconst noop = () => { };\n\nOGMessageSwitch.propTypes = {\n  isByMe: PropTypes.bool.isRequired,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  status: PropTypes.string,\n  disabled: PropTypes.bool,\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  toggleReaction: PropTypes.func,\n  membersMap: PropTypes.instanceOf(Map),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nOGMessageSwitch.defaultProps = {\n  className: '',\n  status: '',\n  disabled: false,\n  showEdit: noop,\n  showRemove: noop,\n  resendMessage: noop,\n  toggleReaction: noop,\n  membersMap: new Map(),\n  emojiAllMap: new Map(),\n  memoizedEmojiListItems: noop,\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingOGMessage.propTypes = {\n  status: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n    isResendable: PropTypes.func,\n    errorCode: PropTypes.number,\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  openLink: PropTypes.func.isRequired,\n  showEdit: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingOGMessage.defaultProps = {\n  status: '',\n};\n\nIncomingOGMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  openLink: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Message from '../../../ui/Message';\nimport AdminMessage from '../../../ui/AdminMessage';\nimport ThumbnailMessage from '../../../ui/ThumbnailMessage';\nimport FileMessage from '../../../ui/FileMessage';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport UnknownMessage from '../../../ui/UnknownMessage';\nimport OGMessage from '../../../ui/OGMessage';\n\nimport { MessageTypes, getMessageType } from '../types';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  deleteMessage,\n  updateMessage,\n  status,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  emojiAllMap,\n  membersMap,\n  highLightedMessageId,\n  toggleReaction,\n  memoizedEmojiListItems,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        setTimeout(() => {\n          useMessageScrollRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n          });\n          setIsAnimated(true);\n        });\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // Let's change this to object type on next major version up\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={`\n          sendbird-msg-hoc sendbird-msg--scroll-ref\n          ${isAnimated ? 'sendbird-msg-hoc__highlighted' : ''}\n        `}\n      >\n        {/* date-seperator */}\n        {\n          hasSeperator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy')}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={`\n        sendbird-msg-hoc sendbird-msg--scroll-ref\n        ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n      `}\n    >\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: <AdminMessage message={message} />,\n          [MessageTypes.FILE]: (\n            <FileMessage\n              message={message}\n              userId={userId}\n              disabled={disabled}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.OG]: (\n            <OGMessage\n              message={message}\n              status={status}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              disabled={disabled}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.THUMBNAIL]: (\n            <ThumbnailMessage\n              disabled={disabled}\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              onClick={setShowFileViewer}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.USER]: (\n            <Message\n              message={message}\n              disabled={disabled}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateSeperator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeperator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeperator: false,\n  disabled: false,\n  highLightedMessageId: null,\n  status: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport {\n  getParsedStatus,\n  compareMessagesForGrouping,\n} from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      readStatus,\n      membersMap,\n      allMessages,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeperator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      status={readStatus[m.messageId] || getParsedStatus(m, currentGroupChannel)}\n                      // show status for pending/failed messages\n                      message={m}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      editDisabled={editDisabled}\n                      hasSeperator={hasSeperator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  emojiContainer: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(renderProps: RenderGroupChannelMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n  isOnline,\n  initialized,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={(utils.isDisabledBecauseFrozen(channel)\n        && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n        || (utils.isDisabledBecauseMuted(channel)\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED\n        )\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className=\"sendbird-conversation__connection-status\"\n    >\n      <Label type={LabelTypography.BODY_2} color={LabelColors.ONBACKGROUND_2}>\n        { stringSet.TRYING_TO_CONNECT }\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        height=\"14px\"\n        width=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getOthersLastSeenAt = (channel) => {\n  if (!channel || !channel.getReadStatus || !channel.members || channel.members.length !== 2) {\n    return '';\n  }\n  const lastSeenList = [...Object.values(channel.getReadStatus())];\n  const lastSeenAt = lastSeenList.length > 0\n    ? lastSeenList[0].last_seen_at\n    : 0;\n  if (lastSeenAt === 0) {\n    return '';\n  }\n  return prettyDate(lastSeenAt);\n};\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AutoRefresh({\n  repeatFunc,\n}) {\n  const [label, setLabel] = useState(repeatFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (label !== repeatFunc()) {\n        setLabel(repeatFunc());\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (<div className=\"sendbird-repeat-text\">{label}</div>);\n}\n\nAutoRefresh.propTypes = {\n  repeatFunc: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport AutoRefresh from '../AutoRefresh';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => {};\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isActive,\n    isMuted,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n    theme,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        {\n          (typeof isActive === 'string' && isActive === 'true') || (typeof isActive === 'boolean' && isActive)\n            ? <div className=\"sendbird-chat-header__active\" />\n            : null\n        }\n        <Label\n          className=\"sendbird-chat-header__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {\n            subTitle\n            || <AutoRefresh repeatFunc={() => utils.getOthersLastSeenAt(currentGroupChannel)} />\n          }\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          (typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted)\n            ? <Icon className=\"sendbird-chat-header__mute\" type={IconTypes.NOTIFICATIONS_OFF_FILLED} width=\"24px\" height=\"24px\" />\n            : null\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon type={IconTypes.SEARCH} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon type={IconTypes.INFO} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  theme: PropTypes.string,\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  onSearchClick: PropTypes.func,\n  showSearchIcon: PropTypes.bool,\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isActive: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  title: '',\n  theme: 'light',\n  subTitle: '',\n  isActive: false,\n  onSearchClick: noop,\n  showSearchIcon: false,\n  isMuted: false,\n  currentUser: {},\n  onActionClick: () => { },\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useSetReadStatus from './hooks/useSetReadStatus';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const highLightedMessageId = highlightedMessage;\n  const userFilledMessageListQuery = queries.messageListParams;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n    },\n  );\n\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // to create initial read status\n  useSetReadStatus(\n    { allMessages, currentGroupChannel },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isActive={false}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  currentGroupChannel.markAsRead();\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              allMessages={allMessages}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","SET_READ_STATUS","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","message","isUserMessage","messageType","ogMetaData","isAdminMessage","isFileMessage","isImage","type","isVideo","UNDEFINED","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","url","channelActions","payload","fromSelector","messageId","getParsedStatus","currentGroupChannel","requestState","MessageStatusType","SENT","unreadCount","getReadReceipt","READ","isDelivered","getDeliveryReceipt","DELIVERED","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","readStatus","unreadSince","isInvalid","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","indexOf","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByMessageId","messageListParams","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","nextResultSize","getMessagesByTimestamp","getTime","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","useSetReadStatus","setReadStatus","allReadStatus","reduce","accumulator","handler","handleMessageStatus","c","onDeliveryReceiptUpdated","onReadReceiptUpdated","handlerId","ReactionButton","React","forwardRef","props","ref","children","onClick","selected","className","injectingClassName","Array","isArray","join","slice","propTypes","PropTypes","element","isRequired","func","bool","oneOfType","number","string","arrayOf","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","emoji","reactedReaction","reactions","reaction","isReacted","userIds","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","MessageStatus","status","label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","icon","SPINNER","DONE","IconColors","DONE_ALL","ERROR","objectOf","array","object","ReactionBadge","count","isAdd","unshift","ONBACKGROUND_1","CLASS_NAME","Tooltip","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","EmojiReactions","emojiAllMap","membersMap","memoizedEmojiListItems","MemoizedEmojiListItems","imageWidth","emojiReactionAddRef","messageReactions","useContext","LocalizationContext","stringSet","emojiUrl","get","reactedUserCount","reactedByMe","nicknames","currentUserId","TOOLTIP__UNKOWN_USER","stringSetForMe","TOOLTIP__AND_YOU","TOOLTIP__YOU","size","toggleDropdown","ON_BACKGROUND_3","EMOJI_MORE","y","shape","instanceOf","WORD_TYPOGRAPHY","BODY_1","EDITED_COLOR","useMemoizedMessageText","updatedAt","splitMessage","split","matchedMessage","word","MESSAGE_EDITED","MOUSE_ENTER","MOUSE_LEAVE","useMouseHover","setHover","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","noop","GROUPING_PADDING","NORMAL_PADDING","Message","isByMe","resendMessage","disabled","showEdit","showRemove","chainTop","chainBottom","memoizedMessageText","OutgoingUserMessage","MemoizedMessageText","messageRef","parentRefReactions","parentRefMenus","isMessageSent","getIsSentFromStatus","mousehover","setMousehover","moreActive","setMoreActive","menuDisplaying","setMenuDisplaying","handleMoreIconClick","handleMoreIconBlur","paddingTop","paddingBottom","MORE","CONTENT_INVERSE","close","copyToClipboard","IncomingUserMessage","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","showReactionAddButton","showEmojiReactions","getSenderProfileUrl","user","CAPTION_2","getSenderName","top","AdminMessage","OUTGOING_THUMBNAIL_MESSAGE","INCOMING_THUMBNAIL_MESSAGE","ThumbnailMessage","OutgoingThumbnailMessage","thumbnails","thumbnailUrl","menuRef","reactionAddRef","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","PLAY","ON_BACKGROUND_2","PHOTO","unSupported","UNKNOWN__UNKNOWN_MESSAGE_TYPE","IncomingThumbnailMessage","MAX_TRUNCATE_LENGTH","GROUPAING_PADDING","checkFileType","fileUrl","result","imageFile","audioFile","test","FILE_DOCUMENT","FILE_AUDIO","OutgoingFileMessage","openFileUrl","window","open","reactionAddButtonRef","truncate","IncomingFileMessage","MessageSwitch","RemoveMessage","onCloseModal","onDeleteMessage","MODAL__DELETE_MESSAGE__TITLE","UnknownMessage","OutgoingUnknownMessage","UNKNOWN__CANNOT_READ_MESSAGE","IncomingUnknownMessage","profileUrl","NO_NAME","URL_REG","OG_MESSAGE","OUTGOING_OG_MESSAGE","INCOMING_OG_MESSAGE","createUrlTester","regexp","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","friendName","checkOGIsEnalbed","WORD_COLOR","isUrl","NORAML_PADDING","OGMessageSwitch","openLink","OutgoingOGMessage","defaultImage","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","alt","THUMBNAIL_NONE","title","SUBTITLE_2","description","BODY_2","event","stopPropagation","IncomingOGMessage","errorCode","MessageHoc","editDisabled","hasSeperator","updateMessage","highLightedMessageId","renderCustomMessage","setShowEdit","setShowRemove","showFileViewer","setShowFileViewer","isAnimated","setIsAnimated","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","behavior","block","RenderedMessage","FileMessage","OGMessage","RemoveMessageModal","isDateSeperator","ConversationScroll","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","renderChatItem","useMessageGrouping","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","MessageHOC","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","ONCONTENT_1","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CHEVRON_DOWN","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","setHandlerId","typingMembers","setTypingMembers","newHandlerId","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","_a","onSendMessage","onFileUpload","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","prettyDate","date","formatDistanceToNowStrict","addSuffix","getOthersLastSeenAt","getReadStatus","lastSeenList","values","lastSeenAt","last_seen_at","getChannelTitle","LabelStringSet","NO_TITLE","NO_MEMBERS","AutoRefresh","repeatFunc","setLabel","interval","setInterval","clearInterval","ChatHeader","currentUser","subTitle","isActive","isMuted","showSearchIcon","onSearchClick","onActionClick","theme","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","PRIMARY","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setIntialTimeStamp","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","LOADING","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}