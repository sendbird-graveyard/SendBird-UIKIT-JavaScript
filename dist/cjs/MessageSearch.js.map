{"version":3,"file":"MessageSearch.js","sources":["../../../src/smart-components/MessageSearch/dux/actionTypes.ts","../../../src/smart-components/MessageSearch/dux/reducers.ts","../../../src/smart-components/MessageSearch/dux/initialState.ts","../../../src/smart-components/MessageSearch/hooks/useSetChannel.ts","../../../src/smart-components/MessageSearch/hooks/useGetSearchedMessages.ts","../../../src/smart-components/MessageSearch/hooks/useScrollCallback.ts","../../../src/ui/MessageSearchItem/getCreatedAt.ts","../../../src/ui/MessageSearchItem/index.tsx","../../../src/ui/MessageSearchFileItem/utils.ts","../../../src/ui/MessageSearchFileItem/index.tsx","../../../src/smart-components/MessageSearch/index.tsx"],"sourcesContent":["export const GET_SEARCHED_MESSAGES = 'GET_SEARCHED_MESSAGES';\nexport const GET_NEXT_SEARCHED_MESSAGES = 'GET_NEXT_SEARCHED_MESSAGES';\nexport const START_MESSAGE_SEARCH = 'START_MESSAGE_SEARCH';\nexport const START_GETTING_SEARCHED_MESSAGES = 'START_GETTING_SEARCHED_MESSAGES';\nexport const SET_QUERY_INVALID = 'SET_QUERY_INVALID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const CHANNEL_INVALID = 'CHANNEL_INVALID';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\ninterface ActionInterface {\n  type: string;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const currentChannel = action.payload;\n      return {\n        ...state,\n        currentChannel,\n        initialized: true,\n      };\n    }\n    case actionTypes.CHANNEL_INVALID: {\n      return {\n        ...state,\n        currentChannel: null,\n        initialized: false,\n      };\n    }\n    case actionTypes.GET_SEARCHED_MESSAGES: {\n      const { messages, createdQuery } = action.payload;\n      if (\n        createdQuery\n        && createdQuery.channelUrl === state.currentMessageSearchQuery.channelUrl\n        && createdQuery.key === state.currentMessageSearchQuery.key\n      ) {\n        return {\n          ...state,\n          loading: false,\n          isInvalid: false,\n          allMessages: [...messages],\n          hasMoreResult: state.currentMessageSearchQuery.hasNext,\n        };\n      }\n      return { ...state };\n    }\n    case actionTypes.SET_QUERY_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      }\n    }\n    case actionTypes.START_MESSAGE_SEARCH: {\n      return {\n        ...state,\n        isInvalid: false,\n        loading: false,\n      }\n    }\n    case actionTypes.START_GETTING_SEARCHED_MESSAGES: {\n      const currentMessageSearchQuery = action.payload;\n      return {\n        ...state,\n        loading: true,\n        currentMessageSearchQuery,\n      };\n    }\n    case actionTypes.GET_NEXT_SEARCHED_MESSAGES: {\n      const messages = action.payload;\n      return {\n        ...state,\n        allMessages: [...state.allMessages, ...messages],\n        hasMoreResult: state.currentMessageSearchQuery.hasNext,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import SendbirdUIKit from '../../../index';\nexport interface State {\n  allMessages: Array<SendbirdUIKit.ClientFileMessage | SendbirdUIKit.ClientUserMessage>;\n  loading: boolean;\n  isInvalid: boolean;\n  initialized: boolean;\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  currentMessageSearchQuery: SendbirdUIKit.ClientMessageSearchQuery;\n  hasMoreResult: boolean;\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  isInvalid: false,\n  initialized: false,\n  currentChannel: null,\n  currentMessageSearchQuery: null,\n  hasMoreResult: false,\n};\n\nexport default initialState;\n","import { useEffect, useState } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  channelUrl: string;\n  sdkInit: boolean;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useSetChannel(\n  { channelUrl, sdkInit }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  const [groupInvalid, setGroupInvalid] = useState(null);\n  const [openInvalid, setOpenInvalid] = useState(null);\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && (sdk.OpenChannel || sdk.GroupChannel)) {\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useSetChannel group channel', groupChannel);\n          messageSearchDispathcer({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        } else {\n          setGroupInvalid(true);\n        }\n      });\n      sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useSetChannel open channel', openChannel);\n          messageSearchDispathcer({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: openChannel,\n          });\n          openChannel.enter((_, error) => {\n            logger.warning('MessageSearch | useSetChannel failed enter open channel', error);\n            messageSearchDispathcer({\n              type: messageActionTypes.CHANNEL_INVALID,\n              payload: null,\n            });\n          });\n        } else {\n          setOpenInvalid(true);\n        }\n      });\n    }\n  }, [channelUrl, sdkInit]);\n\n  useEffect(() => {\n    if (groupInvalid && openInvalid) {\n      console.log('sheet')\n      logger.info('MessageSearch | useSetChannel failed get channel', {\n        errorGroupChannel: groupInvalid,\n        errorOpenChannel: openInvalid,\n      });\n      messageSearchDispathcer({\n        type: messageActionTypes.CHANNEL_INVALID,\n        payload: null,\n      });\n    }\n  }, [groupInvalid, openInvalid]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\nimport SendBird from 'sendbird';\n\ninterface MainProps {\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  channelUrl: string;\n  searchString?: string;\n  messageSearchQuery?: SendbirdUIKit.MessageSearchQueryType;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n  retryCount: number;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useGetSearchedMessages(\n  { currentChannel, channelUrl, searchString, messageSearchQuery, onResultLoaded, retryCount }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  useEffect(() => {\n    messageSearchDispathcer({\n      type: messageActionTypes.START_MESSAGE_SEARCH,\n      payload: null,\n    });\n    if (sdk && channelUrl && sdk.createMessageSearchQuery) {\n      if (searchString) {\n        const inputSearchMessageQueryObject = {\n          ...messageSearchQuery,\n          channelUrl,\n          messageTimestampFrom: currentChannel.invitedAt,\n        };\n        const createdQuery = sdk.createMessageSearchQuery(searchString, inputSearchMessageQueryObject);\n        createdQuery.next((messages, error) => {\n          if (!error) {\n            logger.info('MessageSearch | useGetSearchedMessages: succeeded getting messages', messages);\n            messageSearchDispathcer({\n              type: messageActionTypes.GET_SEARCHED_MESSAGES,\n              payload: {\n                messages,\n                createdQuery,\n              },\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(messages, null);\n            }\n          } else {\n            logger.warning('MessageSearch | useGetSearchedMessages: getting failed', error);\n            messageSearchDispathcer({\n              type: messageActionTypes.SET_QUERY_INVALID,\n              payload: null,\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(null, error);\n            }\n          }\n        });\n        messageSearchDispathcer({\n          type: messageActionTypes.START_GETTING_SEARCHED_MESSAGES,\n          payload: createdQuery,\n        });\n      } else {\n        logger.info('MessageSearch | useGetSeasrchedMessages: search string is empty');\n      }\n    }\n  }, [channelUrl, messageSearchQuery, searchString, currentChannel, retryCount]);\n}\n\nexport default useGetSearchedMessages;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\n\ninterface MainProps {\n  currentMessageSearchQuery: SendBird.MessageSearchQuery;\n  hasMoreResult: boolean;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\ntype CallbackReturn = (\n  callback: (\n    messages: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    error: any,\n  ) => void\n) => void;\n\nfunction useScrollCallback(\n  { currentMessageSearchQuery, hasMoreResult, onResultLoaded }: MainProps,\n  { logger, messageSearchDispathcer }: ToolProps,\n): CallbackReturn {\n  return useCallback((cb) => {\n    if (!hasMoreResult) {\n      logger.warning('MessageSearch | useScrollCallback: no more searched results', hasMoreResult);\n    }\n    if (currentMessageSearchQuery && currentMessageSearchQuery.hasNext) {\n      currentMessageSearchQuery.next((messages, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useScrollCallback: succeeded getting searched messages', messages);\n          messageSearchDispathcer({\n            type: messageActionTypes.GET_NEXT_SEARCHED_MESSAGES,\n            payload: messages,\n          });\n          cb(messages, null);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(messages, null);\n          }\n        } else {\n          logger.warning('MessageSearch | useScrollCallback: failed getting searched messages', error);\n          cb(null, error);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(null, error);\n          }\n        }\n      });\n    } else {\n      logger.warning('MessageSearch | useScrollCallback: no currentMessageSearchQuery');\n    }\n  }, [currentMessageSearchQuery, hasMoreResult]);\n}\n\nexport default useScrollCallback;\n","import format from 'date-fns/format';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\n\n// getCreatedAt\nexport default (createdAt: number): string => {\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p');\n  }\n  if (isYesterday(createdAt)) {\n    return 'Yesterday';\n  }\n  return format(createdAt, 'MMM dd');\n};\n","import React, { useContext } from 'react';\nimport './index.scss';\nimport getCreatedAt from './getCreatedAt';\n\nimport Avatar from '../Avatar';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientUserMessage;\n  onClick?: (message: SendbirdUIKit.ClientMessage) => void;\n  selected?: boolean;\n}\n\nexport default function MessageSearchItem({\n  className,\n  message,\n  onClick,\n  selected,\n}: Props): JSX.Element {\n  const { createdAt } = message;\n  const messageText = message.message;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  injectingClassNames.push('sendbird-message-search-item');\n  if (selected) {\n    injectingClassNames.push('sendbird-message-search-item--selected');\n  }\n\n  return (\n    <div\n      className={injectingClassNames.join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-item__right\">\n        <Label\n          className=\"sendbird-message-search-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-text\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {messageText}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-created-at\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {getCreatedAt(createdAt)}\n        </Label>\n      </div>\n      <div className=\"sendbird-message-search-item__right-footer\" />\n    </div>\n  );\n}\n","import format from 'date-fns/format';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\nimport { IconTypes } from '../Icon';\n\nexport function getCreatedAt(createdAt: number): string {\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p');\n  }\n  if (isYesterday(createdAt)) {\n    return 'Yesterday';\n  }\n  return format(createdAt, 'MMM dd');\n}\n\nexport function getIconOfFileType(message: SendbirdUIKit.ClientFileMessage): string {\n  const { plainUrl, url } = message;\n  const fileMessageUrl = plainUrl || url;\n  const fileExtension = (fileMessageUrl.match(/\\.([^.]*?)(?=\\?|#|$)/))[1];\n\n  if (/(jpg|jpeg|png)$/i.test(fileExtension)) {\n    return IconTypes.PHOTO;\n  } else if (/mp4$/i.test(fileExtension)) {\n    return IconTypes.PLAY;\n  } else if (/mp3/i.test(fileExtension)) {\n    return IconTypes.FILE_AUDIO;\n  } else if (/gif/i.test(fileExtension)) {\n    return IconTypes.GIF;\n  } else {\n    return IconTypes.FILE_DOCUMENT;\n  }\n}\n\nexport function truncate(fullText: string, textLimit: number): string {\n  if (fullText.length <= textLimit) return fullText;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = textLimit - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullText.substr(0, frontChars) + separator + fullText.substr(fullText.length - backChars);\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { getCreatedAt, getIconOfFileType, truncate } from './utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientFileMessage;\n  onClick?: (message: SendbirdUIKit.ClientFileMessage) => void;\n  selected?: boolean;\n}\n\nexport default function MessageSearchFileItem(props: Props): ReactElement {\n  const {\n    className,\n    message,\n    onClick,\n    selected,\n  } = props;\n  const { createdAt, plainUrl, url, name } = message;\n  const fileMessageUrl = plainUrl || url;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  injectingClassNames.push('sendbird-message-search-file-item');\n  if (selected) {\n    injectingClassNames.push('sendbird-message-search-file-item--selected');\n  }\n\n  return (\n    <div\n      className={injectingClassNames.join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-file-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-file-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-file-item__right\">\n        <Label\n          className=\"sendbird-message-search-file-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <div className=\"sendbird-message-search-file-item__right__content\">\n          <div className=\"sendbird-message-search-file-item__right__content__type-icon\">\n            <Icon\n              type={getIconOfFileType(message)}\n              fillColor={IconColors.PRIMARY}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </div>\n          <Label\n            className=\"sendbird-message-search-file-item__right__content__url\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {truncate(name || fileMessageUrl, 28)}\n          </Label>\n        </div>\n      </div>\n      <Label\n        className=\"sendbird-message-search-file-item__message-created-at\"\n        type={LabelTypography.CAPTION_3}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {getCreatedAt(createdAt)}\n      </Label>\n      <div className=\"sendbird-message-search-file-item__right-footer\" />\n    </div>\n  );\n}\n","import React, { useReducer, useRef, useContext, useState } from 'react';\nimport './index.scss';\n\nimport widthSendbirdContext from '../../lib/SendbirdSdkContext';\nimport messageSearchReducer from './dux/reducers';\nimport messageSearchInitialState from './dux/initialState';\n\nimport useSetChannel from './hooks/useSetChannel';\nimport useGetSearchMessages from './hooks/useGetSearchedMessages';\nimport useScrollCallback from './hooks/useScrollCallback';\n\nimport MessageSearchItem from '../../ui/MessageSearchItem';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport MessageSearchFileItem from '../../ui/MessageSearchFileItem';\n\nimport SendbirdUIKit from '../../index';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search';\n\ninterface Props extends SendbirdUIKit.MessageSearchProps {\n  // sendbird internal props\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: SendbirdUIKit.UserStore,\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    pubSub: any,\n    disableUserProfile?: boolean,\n    renderUserProfile?(): JSX.Element,\n    imageCompression?: {\n      compressionRate?: number,\n      resizingWidth?: number | string,\n      resizingHeight?: number | string,\n    },\n  };\n}\n\nfunction MessageSearch(props: Props): JSX.Element {\n  const {\n    // sendbird internal props\n    stores,\n    config,\n    // message search props\n    channelUrl,\n    searchString,\n    messageSearchQuery,\n    renderSearchItem,\n    onResultLoaded,\n    onResultClick,\n  } = props;\n\n  // hook variables\n  const { stringSet } = useContext(LocalizationContext);\n  const [retryCount, setRetryCount] = useState(0); // this is a trigger flag for activating useGetSearchMessages\n  const [selectedMessageId, setSelectedMessageId] = useState(0);\n  const [messageSearchStore, messageSearchDispathcer] = useReducer(messageSearchReducer, messageSearchInitialState);\n  const {\n    allMessages,\n    loading,\n    isInvalid,\n    currentChannel,\n    currentMessageSearchQuery,\n    hasMoreResult,\n  } = messageSearchStore;\n\n  const getChannelName = () => {\n    if (currentChannel && currentChannel.name && currentChannel.name !== 'Group Channel') {\n      return currentChannel.name;\n    }\n    if (currentChannel && (currentChannel.name === 'Group Channel' || !currentChannel.name)) {\n      return currentChannel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  // const\n  const {\n    sdkStore,\n  } = stores;\n  const {\n    logger,\n  } = config;\n  const { sdk } = sdkStore;\n  const sdkInit = sdkStore.initialized;\n  const scrollRef = useRef(null);\n  const handleOnScroll = (e) => {\n    const scrollElement = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = scrollElement;\n\n    if (!hasMoreResult) {\n      return;\n    }\n    if (scrollTop + clientHeight >= scrollHeight) {\n      onScroll(() => {\n        // after load more searched messages\n      });\n    }\n  };\n\n  useSetChannel(\n    { channelUrl, sdkInit },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  useGetSearchMessages(\n    { currentChannel, channelUrl, searchString, messageSearchQuery, onResultLoaded, retryCount },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  const onScroll = useScrollCallback(\n    { currentMessageSearchQuery, hasMoreResult, onResultLoaded },\n    { logger, messageSearchDispathcer },\n  );\n\n  const handleRetryToConnect = () => {\n    setRetryCount(retryCount + 1);\n  };\n\n  if (isInvalid && searchString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={handleRetryToConnect}\n        />\n      </div>\n    );\n  }\n\n  if (loading && searchString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder type={PlaceHolderTypes.SEARCHING} />\n      </div>\n    );\n  }\n\n  if (!searchString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.SEARCH_IN}\n          searchInString={getChannelName()}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={COMPONENT_CLASS_NAME}\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      {\n        (allMessages.length > 0)\n          ? (\n            allMessages.map((message) => {\n              if (renderSearchItem) {\n                return renderSearchItem({ message, onResultClick });\n              }\n              if (message.messageType === 'file') {\n                return (\n                  <MessageSearchFileItem\n                    className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                    message={message}\n                    key={message.messageId}\n                    selected={(selectedMessageId === message.messageId)}\n                    onClick={() => {\n                      onResultClick(message);\n                      setSelectedMessageId(message.messageId);\n                    }}\n                  />\n                );\n              }\n              return (\n                <MessageSearchItem\n                  className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                  message={message}\n                  key={message.messageId}\n                  selected={(selectedMessageId === message.messageId)}\n                  onClick={() => {\n                    onResultClick(message);\n                    setSelectedMessageId(message.messageId);\n                  }}\n                />\n              );\n            })\n          )\n          : (\n            <PlaceHolder type={PlaceHolderTypes.NO_RESULTS} />\n          )\n      }\n    </div>\n  );\n}\n\nexport default widthSendbirdContext(MessageSearch);\n"],"names":["GET_SEARCHED_MESSAGES","GET_NEXT_SEARCHED_MESSAGES","START_MESSAGE_SEARCH","START_GETTING_SEARCHED_MESSAGES","SET_QUERY_INVALID","SET_CURRENT_CHANNEL","CHANNEL_INVALID","reducer","state","action","type","actionTypes","currentChannel","payload","initialized","_a","messages","createdQuery","channelUrl","currentMessageSearchQuery","key","loading","isInvalid","allMessages","hasMoreResult","hasNext","initialState","useSetChannel","_b","sdkInit","sdk","logger","messageSearchDispathcer","_c","useState","groupInvalid","setGroupInvalid","_d","openInvalid","setOpenInvalid","useEffect","OpenChannel","GroupChannel","getChannel","groupChannel","error","info","messageActionTypes","openChannel","enter","_","warning","console","log","errorGroupChannel","errorOpenChannel","useGetSearchedMessages","searchString","messageSearchQuery","onResultLoaded","retryCount","createMessageSearchQuery","inputSearchMessageQueryObject","messageTimestampFrom","invitedAt","createdQuery_1","next","useScrollCallback","useCallback","cb","createdAt","isToday","format","isYesterday","MessageSearchItem","className","message","onClick","selected","messageText","sender","_sender","profileUrl","nickname","stringSet","useContext","LocalizationContext","injectingClassNames","Array","isArray","push","React","join","e","stopPropagation","Avatar","Label","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","NO_NAME","BODY_2","ONBACKGROUND_3","CAPTION_3","ONBACKGROUND_2","getCreatedAt","getIconOfFileType","plainUrl","url","fileMessageUrl","fileExtension","match","test","IconTypes","PHOTO","PLAY","FILE_AUDIO","GIF","FILE_DOCUMENT","truncate","fullText","textLimit","length","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","MessageSearchFileItem","props","name","Icon","IconColors","PRIMARY","COMPONENT_CLASS_NAME","MessageSearch","stores","config","renderSearchItem","onResultClick","setRetryCount","selectedMessageId","setSelectedMessageId","useReducer","messageSearchReducer","messageSearchInitialState","messageSearchStore","getChannelName","members","map","member","NO_TITLE","sdkStore","scrollRef","useRef","handleOnScroll","scrollElement","target","scrollTop","scrollHeight","clientHeight","onScroll","useGetSearchMessages","handleRetryToConnect","PlaceHolder","PlaceHolderTypes","WRONG","SEARCHING","SEARCH_IN","messageType","messageId","NO_RESULTS","widthSendbirdContext"],"mappings":";;;;;;;;;;;;;AAAO,IAAMA,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,0BAA0B,GAAG,4BAAnC;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;AACA,IAAMC,+BAA+B,GAAG,iCAAxC;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,eAAe,GAAG,iBAAxB;;SCEiBC,QACtBC,OACAC;AAEA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,mBAAL;AAAsC;AACpC,YAAMC,cAAc,GAAGH,MAAM,CAACI,OAA9B;AACA,6EACKL;AACHI,UAAAA,cAAc;AACdE,UAAAA,WAAW,EAAE;UAHf;AAKD;;AACD,SAAKH,eAAL;AAAkC;AAChC,6EACKH;AACHI,UAAAA,cAAc,EAAE;AAChBE,UAAAA,WAAW,EAAE;UAHf;AAKD;;AACD,SAAKH,qBAAL;AAAwC;AAChC,YAAAI,KAA6BN,MAAM,CAACI,OAApC;AAAA,YAAEG,QAAQ,cAAV;AAAA,YAAYC,YAAY,kBAAxB;;AACN,YACEA,YAAY,IACTA,YAAY,CAACC,UAAb,KAA4BV,KAAK,CAACW,yBAAN,CAAgCD,UAD/D,IAEGD,YAAY,CAACG,GAAb,KAAqBZ,KAAK,CAACW,yBAAN,CAAgCC,GAH1D,EAIE;AACA,+EACKZ;AACHa,YAAAA,OAAO,EAAE;AACTC,YAAAA,SAAS,EAAE;AACXC,YAAAA,WAAW,qCAAMP;AACjBQ,YAAAA,aAAa,EAAEhB,KAAK,CAACW,yBAAN,CAAgCM;YALjD;AAOD;;AACD,gDAAYjB,MAAZ;AACD;;AACD,SAAKG,iBAAL;AAAoC;AAClC,6EACKH;AACHc,UAAAA,SAAS,EAAE;UAFb;AAID;;AACD,SAAKX,oBAAL;AAAuC;AACrC,6EACKH;AACHc,UAAAA,SAAS,EAAE;AACXD,UAAAA,OAAO,EAAE;UAHX;AAKD;;AACD,SAAKV,+BAAL;AAAkD;AAChD,YAAMQ,yBAAyB,GAAGV,MAAM,CAACI,OAAzC;AACA,6EACKL;AACHa,UAAAA,OAAO,EAAE;AACTF,UAAAA,yBAAyB;UAH3B;AAKD;;AACD,SAAKR,0BAAL;AAA6C;AAC3C,YAAMK,QAAQ,GAAGP,MAAM,CAACI,OAAxB;AACA,6EACKL;AACHe,UAAAA,WAAW,qCAAMf,KAAK,CAACe,aAAgBP;AACvCQ,UAAAA,aAAa,EAAEhB,KAAK,CAACW,yBAAN,CAAgCM;UAHjD;AAKD;;AACD;AAAS;AACP,eAAOjB,KAAP;AACD;AAhEH;AAkED;;ACpED,IAAMkB,YAAY,GAAU;AAC1BH,EAAAA,WAAW,EAAE,EADa;AAE1BF,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,SAAS,EAAE,KAHe;AAI1BR,EAAAA,WAAW,EAAE,KAJa;AAK1BF,EAAAA,cAAc,EAAE,IALU;AAM1BO,EAAAA,yBAAyB,EAAE,IAND;AAO1BK,EAAAA,aAAa,EAAE;AAPW,CAA5B;;ACEA,SAASG,aAAT,CACEZ,EADF,EAEEa,EAFF;MACIV,UAAU;MAAEW,OAAO;MACnBC,GAAG;MAAEC,MAAM;MAAEC,uBAAuB;;AAEhC,MAAAC,KAAkCC,cAAQ,CAAC,IAAD,CAA1C;AAAA,MAACC,YAAY,QAAb;AAAA,MAAeC,eAAe,QAA9B;;AACA,MAAAC,KAAgCH,cAAQ,CAAC,IAAD,CAAxC;AAAA,MAACI,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AACNC,EAAAA,eAAS,CAAC;AACR,QAAItB,UAAU,IAAIW,OAAd,IAAyBC,GAAzB,KAAiCA,GAAG,CAACW,WAAJ,IAAmBX,GAAG,CAACY,YAAxD,CAAJ,EAA2E;AACzEZ,MAAAA,GAAG,CAACY,YAAJ,CAAiBC,UAAjB,CAA4BzB,UAA5B,EAAwC,UAAC0B,YAAD,EAAeC,KAAf;AACtC,YAAI,CAACA,KAAL,EAAY;AACVd,UAAAA,MAAM,CAACe,IAAP,CAAY,6CAAZ,EAA2DF,YAA3D;AACAZ,UAAAA,uBAAuB,CAAC;AACtBtB,YAAAA,IAAI,EAAEqC,mBADgB;AAEtBlC,YAAAA,OAAO,EAAE+B;AAFa,WAAD,CAAvB;AAID,SAND,MAMO;AACLR,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,OAVD;AAWAN,MAAAA,GAAG,CAACW,WAAJ,CAAgBE,UAAhB,CAA2BzB,UAA3B,EAAuC,UAAC8B,WAAD,EAAcH,KAAd;AACrC,YAAI,CAACA,KAAL,EAAY;AACVd,UAAAA,MAAM,CAACe,IAAP,CAAY,4CAAZ,EAA0DE,WAA1D;AACAhB,UAAAA,uBAAuB,CAAC;AACtBtB,YAAAA,IAAI,EAAEqC,mBADgB;AAEtBlC,YAAAA,OAAO,EAAEmC;AAFa,WAAD,CAAvB;AAIAA,UAAAA,WAAW,CAACC,KAAZ,CAAkB,UAACC,CAAD,EAAIL,KAAJ;AAChBd,YAAAA,MAAM,CAACoB,OAAP,CAAe,yDAAf,EAA0EN,KAA1E;AACAb,YAAAA,uBAAuB,CAAC;AACtBtB,cAAAA,IAAI,EAAEqC,eADgB;AAEtBlC,cAAAA,OAAO,EAAE;AAFa,aAAD,CAAvB;AAID,WAND;AAOD,SAbD,MAaO;AACL0B,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,OAjBD;AAkBD;AACF,GAhCQ,EAgCN,CAACrB,UAAD,EAAaW,OAAb,CAhCM,CAAT;AAkCAW,EAAAA,eAAS,CAAC;AACR,QAAIL,YAAY,IAAIG,WAApB,EAAiC;AAC/Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAtB,MAAAA,MAAM,CAACe,IAAP,CAAY,kDAAZ,EAAgE;AAC9DQ,QAAAA,iBAAiB,EAAEnB,YAD2C;AAE9DoB,QAAAA,gBAAgB,EAAEjB;AAF4C,OAAhE;AAIAN,MAAAA,uBAAuB,CAAC;AACtBtB,QAAAA,IAAI,EAAEqC,eADgB;AAEtBlC,QAAAA,OAAO,EAAE;AAFa,OAAD,CAAvB;AAID;AACF,GAZQ,EAYN,CAACsB,YAAD,EAAeG,WAAf,CAZM,CAAT;AAaD;;AC5CD,SAASkB,sBAAT,CACEzC,EADF,EAEEa,EAFF;MACIhB,cAAc;MAAEM,UAAU;MAAEuC,YAAY;MAAEC,kBAAkB;MAAEC,cAAc;MAAEC,UAAU;MACxF9B,GAAG;MAAEC,MAAM;MAAEC,uBAAuB;AAEtCQ,EAAAA,eAAS,CAAC;AACRR,IAAAA,uBAAuB,CAAC;AACtBtB,MAAAA,IAAI,EAAEqC,oBADgB;AAEtBlC,MAAAA,OAAO,EAAE;AAFa,KAAD,CAAvB;;AAIA,QAAIiB,GAAG,IAAIZ,UAAP,IAAqBY,GAAG,CAAC+B,wBAA7B,EAAuD;AACrD,UAAIJ,YAAJ,EAAkB;AAChB,YAAMK,6BAA6B,iEAC9BJ;AACHxC,UAAAA,UAAU;AACV6C,UAAAA,oBAAoB,EAAEnD,cAAc,CAACoD;UAHvC;;AAKA,YAAMC,cAAY,GAAGnC,GAAG,CAAC+B,wBAAJ,CAA6BJ,YAA7B,EAA2CK,6BAA3C,CAArB;AACAG,QAAAA,cAAY,CAACC,IAAb,CAAkB,UAAClD,QAAD,EAAW6B,KAAX;AAChB,cAAI,CAACA,KAAL,EAAY;AACVd,YAAAA,MAAM,CAACe,IAAP,CAAY,oEAAZ,EAAkF9B,QAAlF;AACAgB,YAAAA,uBAAuB,CAAC;AACtBtB,cAAAA,IAAI,EAAEqC,qBADgB;AAEtBlC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,QAAQ,UADD;AAEPC,gBAAAA,YAAY;AAFL;AAFa,aAAD,CAAvB;;AAOA,gBAAI0C,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;AAC1DA,cAAAA,cAAc,CAAC3C,QAAD,EAAW,IAAX,CAAd;AACD;AACF,WAZD,MAYO;AACLe,YAAAA,MAAM,CAACoB,OAAP,CAAe,wDAAf,EAAyEN,KAAzE;AACAb,YAAAA,uBAAuB,CAAC;AACtBtB,cAAAA,IAAI,EAAEqC,iBADgB;AAEtBlC,cAAAA,OAAO,EAAE;AAFa,aAAD,CAAvB;;AAIA,gBAAI8C,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;AAC1DA,cAAAA,cAAc,CAAC,IAAD,EAAOd,KAAP,CAAd;AACD;AACF;AACF,SAvBD;AAwBAb,QAAAA,uBAAuB,CAAC;AACtBtB,UAAAA,IAAI,EAAEqC,+BADgB;AAEtBlC,UAAAA,OAAO,EAAEoD;AAFa,SAAD,CAAvB;AAID,OAnCD,MAmCO;AACLlC,QAAAA,MAAM,CAACe,IAAP,CAAY,iEAAZ;AACD;AACF;AACF,GA7CQ,EA6CN,CAAC5B,UAAD,EAAawC,kBAAb,EAAiCD,YAAjC,EAA+C7C,cAA/C,EAA+DgD,UAA/D,CA7CM,CAAT;AA8CD;;AChDD,SAASO,iBAAT,CACEpD,EADF,EAEEa,EAFF;MACIT,yBAAyB;MAAEK,aAAa;MAAEmC,cAAc;MACxD5B,MAAM;MAAEC,uBAAuB;AAEjC,SAAOoC,iBAAW,CAAC,UAACC,EAAD;AACjB,QAAI,CAAC7C,aAAL,EAAoB;AAClBO,MAAAA,MAAM,CAACoB,OAAP,CAAe,6DAAf,EAA8E3B,aAA9E;AACD;;AACD,QAAIL,yBAAyB,IAAIA,yBAAyB,CAACM,OAA3D,EAAoE;AAClEN,MAAAA,yBAAyB,CAAC+C,IAA1B,CAA+B,UAAClD,QAAD,EAAW6B,KAAX;AAC7B,YAAI,CAACA,KAAL,EAAY;AACVd,UAAAA,MAAM,CAACe,IAAP,CAAY,wEAAZ,EAAsF9B,QAAtF;AACAgB,UAAAA,uBAAuB,CAAC;AACtBtB,YAAAA,IAAI,EAAEqC,0BADgB;AAEtBlC,YAAAA,OAAO,EAAEG;AAFa,WAAD,CAAvB;AAIAqD,UAAAA,EAAE,CAACrD,QAAD,EAAW,IAAX,CAAF;;AACA,cAAI2C,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;AAC1DA,YAAAA,cAAc,CAAC3C,QAAD,EAAW,IAAX,CAAd;AACD;AACF,SAVD,MAUO;AACLe,UAAAA,MAAM,CAACoB,OAAP,CAAe,qEAAf,EAAsFN,KAAtF;AACAwB,UAAAA,EAAE,CAAC,IAAD,EAAOxB,KAAP,CAAF;;AACA,cAAIc,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;AAC1DA,YAAAA,cAAc,CAAC,IAAD,EAAOd,KAAP,CAAd;AACD;AACF;AACF,OAlBD;AAmBD,KApBD,MAoBO;AACLd,MAAAA,MAAM,CAACoB,OAAP,CAAe,iEAAf;AACD;AACF,GA3BiB,EA2Bf,CAAChC,yBAAD,EAA4BK,aAA5B,CA3Be,CAAlB;AA4BD;;ACnDD,oBAAe,UAAC8C,SAAD;AACb,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,EAAP;AACD;;AACD,MAAIC,OAAO,CAACD,SAAD,CAAX,EAAwB;AACtB,WAAOE,MAAM,CAACF,SAAD,EAAY,GAAZ,CAAb;AACD;;AACD,MAAIG,WAAW,CAACH,SAAD,CAAf,EAA4B;AAC1B,WAAO,WAAP;AACD;;AACD,SAAOE,MAAM,CAACF,SAAD,EAAY,QAAZ,CAAb;AACD,CAXD;;SCawBI,kBAAkB3D;MACxC4D,SAAS;MACTC,OAAO;MACPC,QAAO;MACPC,QAAQ;AAEA,MAAAR,SAAS,GAAKM,OAAO,UAArB;AACR,MAAMG,WAAW,GAAGH,OAAO,CAACA,OAA5B;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAACI,MAAR,IAAkBJ,OAAO,CAACK,OAAzC;AACQ,MAAAC,UAAU,GAAeF,MAAM,WAA/B;AAAA,MAAYG,QAAQ,GAAKH,MAAM,SAA/B;AAEA,MAAAI,SAAS,GAAKC,gBAAU,CAACC,uCAAD,CAAV,UAAd;AACR,MAAMC,mBAAmB,GAAGC,KAAK,CAACC,OAAN,CAAcd,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAnE;AACAY,EAAAA,mBAAmB,CAACG,IAApB,CAAyB,8BAAzB;;AACA,MAAIZ,QAAJ,EAAc;AACZS,IAAAA,mBAAmB,CAACG,IAApB,CAAyB,wCAAzB;AACD;;AAED,SACEC;AACE,IAAA,SAAS,EAAEJ,mBAAmB,CAACK,IAApB,CAAyB,GAAzB,CADb;AAEE,IAAA,OAAO,EAAE,iBAACC,CAAD;AACPA,MAAAA,CAAC,CAACC,eAAF;;AACAjB,MAAAA,QAAO,CAACD,OAAD,CAAP;AACD;AALH,KAOEe;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACI,cAAD;AACE,IAAA,SAAS,EAAC,mDADZ;AAEE,IAAA,GAAG,EAAEb,UAFP;AAGE,IAAA,GAAG,EAAC,eAHN;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,IADF,CAPF,EAgBES;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,kDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACC,UAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGjB,QAAQ,IAAIC,SAAS,CAACiB,OALzB,CADF,EAQEV,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,mDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACK,MAFxB;AAGE,IAAA,KAAK,EAAEH,mBAAW,CAACI;AAHrB,KAKGxB,WALH,CARF,EAeEY,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,yDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACO,SAFxB;AAGE,IAAA,KAAK,EAAEL,mBAAW,CAACM;AAHrB,KAKGC,YAAY,CAACpC,SAAD,CALf,CAfF,CAhBF,EAuCEqB;AAAK,IAAA,SAAS,EAAC;AAAf,IAvCF,CADF;AA2CD;;SC1Eee,eAAapC;AAC3B,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,EAAP;AACD;;AACD,MAAIC,OAAO,CAACD,SAAD,CAAX,EAAwB;AACtB,WAAOE,MAAM,CAACF,SAAD,EAAY,GAAZ,CAAb;AACD;;AACD,MAAIG,WAAW,CAACH,SAAD,CAAf,EAA4B;AAC1B,WAAO,WAAP;AACD;;AACD,SAAOE,MAAM,CAACF,SAAD,EAAY,QAAZ,CAAb;AACD;AAED,SAAgBqC,kBAAkB/B;AACxB,MAAAgC,QAAQ,GAAUhC,OAAO,SAAzB;AAAA,MAAUiC,GAAG,GAAKjC,OAAO,IAAzB;AACR,MAAMkC,cAAc,GAAGF,QAAQ,IAAIC,GAAnC;AACA,MAAME,aAAa,GAAID,cAAc,CAACE,KAAf,CAAqB,sBAArB,CAAD,CAA+C,CAA/C,CAAtB;;AAEA,MAAI,mBAAmBC,IAAnB,CAAwBF,aAAxB,CAAJ,EAA4C;AAC1C,WAAOG,iBAAS,CAACC,KAAjB;AACD,GAFD,MAEO,IAAI,QAAQF,IAAR,CAAaF,aAAb,CAAJ,EAAiC;AACtC,WAAOG,iBAAS,CAACE,IAAjB;AACD,GAFM,MAEA,IAAI,OAAOH,IAAP,CAAYF,aAAZ,CAAJ,EAAgC;AACrC,WAAOG,iBAAS,CAACG,UAAjB;AACD,GAFM,MAEA,IAAI,OAAOJ,IAAP,CAAYF,aAAZ,CAAJ,EAAgC;AACrC,WAAOG,iBAAS,CAACI,GAAjB;AACD,GAFM,MAEA;AACL,WAAOJ,iBAAS,CAACK,aAAjB;AACD;AACF;AAED,SAAgBC,SAASC,UAAkBC;AACzC,MAAID,QAAQ,CAACE,MAAT,IAAmBD,SAAvB,EAAkC,OAAOD,QAAP;AAClC,MAAMG,SAAS,GAAG,KAAlB;AACA,MAAMC,MAAM,GAAGD,SAAS,CAACD,MAAzB;AACA,MAAMG,WAAW,GAAGJ,SAAS,GAAGG,MAAhC;AACA,MAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,GAAG,CAAxB,CAAnB;AACA,MAAMI,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWL,WAAW,GAAG,CAAzB,CAAlB;AACA,SAAOL,QAAQ,CAACW,MAAT,CAAgB,CAAhB,EAAmBL,UAAnB,IAAiCH,SAAjC,GAA6CH,QAAQ,CAACW,MAAT,CAAgBX,QAAQ,CAACE,MAAT,GAAkBO,SAAlC,CAApD;AACD;;SC5BuBG,sBAAsBC;AAE1C,MAAA3D,SAAS,GAIP2D,KAAK,UAJP;AAAA,MACA1D,OAAO,GAGL0D,KAAK,QAJP;AAAA,MAEAzD,QAAO,GAELyD,KAAK,QAJP;AAAA,MAGAxD,QAAQ,GACNwD,KAAK,SAJP;AAKM,MAAAhE,SAAS,GAA0BM,OAAO,UAA1C;AAAA,MAAWgC,QAAQ,GAAgBhC,OAAO,SAA1C;AAAA,MAAqBiC,GAAG,GAAWjC,OAAO,IAA1C;AAAA,MAA0B2D,IAAI,GAAK3D,OAAO,KAA1C;AACR,MAAMkC,cAAc,GAAGF,QAAQ,IAAIC,GAAnC;AACA,MAAM7B,MAAM,GAAGJ,OAAO,CAACI,MAAR,IAAkBJ,OAAO,CAACK,OAAzC;AACQ,MAAAC,UAAU,GAAeF,MAAM,WAA/B;AAAA,MAAYG,QAAQ,GAAKH,MAAM,SAA/B;AAEA,MAAAI,SAAS,GAAKC,gBAAU,CAACC,uCAAD,CAAV,UAAd;AACR,MAAMC,mBAAmB,GAAGC,KAAK,CAACC,OAAN,CAAcd,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAnE;AACAY,EAAAA,mBAAmB,CAACG,IAApB,CAAyB,mCAAzB;;AACA,MAAIZ,QAAJ,EAAc;AACZS,IAAAA,mBAAmB,CAACG,IAApB,CAAyB,6CAAzB;AACD;;AAED,SACEC;AACE,IAAA,SAAS,EAAEJ,mBAAmB,CAACK,IAApB,CAAyB,GAAzB,CADb;AAEE,IAAA,OAAO,EAAE,iBAACC,CAAD;AACPA,MAAAA,CAAC,CAACC,eAAF;;AACAjB,MAAAA,QAAO,CAACD,OAAD,CAAP;AACD;AALH,KAOEe;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACI,cAAD;AACE,IAAA,SAAS,EAAC,wDADZ;AAEE,IAAA,GAAG,EAAEb,UAFP;AAGE,IAAA,GAAG,EAAC,eAHN;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,IADF,CAPF,EAgBES;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,uDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACC,UAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGjB,QAAQ,IAAIC,SAAS,CAACiB,OALzB,CADF,EAQEV;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC6C,YAAD;AACE,IAAA,IAAI,EAAE7B,iBAAiB,CAAC/B,OAAD,CADzB;AAEE,IAAA,SAAS,EAAE6D,kBAAU,CAACC,OAFxB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IADF,CADF,EASE/C,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,wDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACK,MAFxB;AAGE,IAAA,KAAK,EAAEH,mBAAW,CAACC;AAHrB,KAKGoB,QAAQ,CAACe,IAAI,IAAIzB,cAAT,EAAyB,EAAzB,CALX,CATF,CARF,CAhBF,EA0CEnB,6BAACK,aAAD;AACE,IAAA,SAAS,EAAC,uDADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACO,SAFxB;AAGE,IAAA,KAAK,EAAEL,mBAAW,CAACM;AAHrB,KAKGC,cAAY,CAACpC,SAAD,CALf,CA1CF,EAiDEqB;AAAK,IAAA,SAAS,EAAC;AAAf,IAjDF,CADF;AAqDD;;ACtED,IAAMgD,oBAAoB,GAAG,yBAA7B;;AAyBA,SAASC,aAAT,CAAuBN,KAAvB;AAGI;AAAAO,EAAAA,MAAM,GASJP,KAAK,OATP;AAAA,MACAQ,MAAM,GAQJR,KAAK,OATP;AAAA;AAGApH,EAAAA,UAAU,GAMRoH,KAAK,WATP;AAAA,MAIA7E,YAAY,GAKV6E,KAAK,aATP;AAAA,MAKA5E,kBAAkB,GAIhB4E,KAAK,mBATP;AAAA,MAMAS,gBAAgB,GAGdT,KAAK,iBATP;AAAA,MAOA3E,cAAc,GAEZ2E,KAAK,eATP;AAAA,MAQAU,aAAa,GACXV,KAAK,cATP;;AAYM,MAAAlD,SAAS,GAAKC,gBAAU,CAACC,uCAAD,CAAV,UAAd;;AACF,MAAAvE,KAA8BmB,cAAQ,CAAC,CAAD,CAAtC;AAAA,MAAC0B,UAAU,QAAX;AAAA,MAAaqF,aAAa,QAA1B;;;AACA,MAAArH,KAA4CM,cAAQ,CAAC,CAAD,CAApD;AAAA,MAACgH,iBAAiB,QAAlB;AAAA,MAAoBC,oBAAoB,QAAxC;;AACA,MAAAlH,KAAgDmH,gBAAU,CAACC,OAAD,EAAuBC,YAAvB,CAA1D;AAAA,MAACC,kBAAkB,QAAnB;AAAA,MAAqBvH,uBAAuB,QAA5C;;AAEJ,MAAAT,WAAW,GAMTgI,kBAAkB,YANpB;AAAA,MACAlI,OAAO,GAKLkI,kBAAkB,QANpB;AAAA,MAEAjI,SAAS,GAIPiI,kBAAkB,UANpB;AAAA,MAGA3I,cAAc,GAGZ2I,kBAAkB,eANpB;AAAA,MAIApI,yBAAyB,GAEvBoI,kBAAkB,0BANpB;AAAA,MAKA/H,aAAa,GACX+H,kBAAkB,cANpB;;AAQF,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AACrB,QAAI5I,cAAc,IAAIA,cAAc,CAAC2H,IAAjC,IAAyC3H,cAAc,CAAC2H,IAAf,KAAwB,eAArE,EAAsF;AACpF,aAAO3H,cAAc,CAAC2H,IAAtB;AACD;;AACD,QAAI3H,cAAc,KAAKA,cAAc,CAAC2H,IAAf,KAAwB,eAAxB,IAA2C,CAAC3H,cAAc,CAAC2H,IAAhE,CAAlB,EAAyF;AACvF,aAAO3H,cAAc,CAAC6I,OAAf,CAAuBC,GAAvB,CAA2B,UAACC,MAAD;AAAY,eAAAA,MAAM,CAACxE,QAAP,IAAmBC,SAAS,CAACiB,OAA7B;AAAoC,OAA3E,EAA6ET,IAA7E,CAAkF,IAAlF,CAAP;AACD;;AACD,WAAOR,SAAS,CAACwE,QAAjB;AACD,GARD;;;AAYE,MAAAC,QAAQ,GACNhB,MAAM,SADR;AAGA,MAAA9G,MAAM,GACJ+G,MAAM,OADR;AAEM,MAAAhH,GAAG,GAAK+H,QAAQ,IAAhB;AACR,MAAMhI,OAAO,GAAGgI,QAAQ,CAAC/I,WAAzB;AACA,MAAMgJ,SAAS,GAAGC,YAAM,CAAC,IAAD,CAAxB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACnE,CAAD;AACrB,QAAMoE,aAAa,GAAGpE,CAAC,CAACqE,MAAxB;AAEE,QAAAC,SAAS,GAGPF,aAAa,UAHf;AAAA,QACAG,YAAY,GAEVH,aAAa,aAHf;AAAA,QAEAI,YAAY,GACVJ,aAAa,aAHf;;AAKF,QAAI,CAACzI,aAAL,EAAoB;AAClB;AACD;;AACD,QAAI2I,SAAS,GAAGE,YAAZ,IAA4BD,YAAhC,EAA8C;AAC5CE,MAAAA,QAAQ,CAAC;AAER,OAFO,CAAR;AAGD;AACF,GAhBD;;AAkBA3I,EAAAA,aAAa,CACX;AAAET,IAAAA,UAAU,YAAZ;AAAcW,IAAAA,OAAO;AAArB,GADW,EAEX;AAAEC,IAAAA,GAAG,KAAL;AAAOC,IAAAA,MAAM,QAAb;AAAeC,IAAAA,uBAAuB;AAAtC,GAFW,CAAb;AAKAuI,EAAAA,sBAAoB,CAClB;AAAE3J,IAAAA,cAAc,gBAAhB;AAAkBM,IAAAA,UAAU,YAA5B;AAA8BuC,IAAAA,YAAY,cAA1C;AAA4CC,IAAAA,kBAAkB,oBAA9D;AAAgEC,IAAAA,cAAc,gBAA9E;AAAgFC,IAAAA,UAAU;AAA1F,GADkB,EAElB;AAAE9B,IAAAA,GAAG,KAAL;AAAOC,IAAAA,MAAM,QAAb;AAAeC,IAAAA,uBAAuB;AAAtC,GAFkB,CAApB;AAKA,MAAMsI,QAAQ,GAAGnG,iBAAiB,CAChC;AAAEhD,IAAAA,yBAAyB,2BAA3B;AAA6BK,IAAAA,aAAa,eAA1C;AAA4CmC,IAAAA,cAAc;AAA1D,GADgC,EAEhC;AAAE5B,IAAAA,MAAM,QAAR;AAAUC,IAAAA,uBAAuB;AAAjC,GAFgC,CAAlC;;AAKA,MAAMwI,oBAAoB,GAAG,SAAvBA,oBAAuB;AAC3BvB,IAAAA,aAAa,CAACrF,UAAU,GAAG,CAAd,CAAb;AACD,GAFD;;AAIA,MAAItC,SAAS,IAAImC,YAAjB,EAA+B;AAC7B,WACEkC;AAAK,MAAA,SAAS,EAAEgD;AAAhB,OACEhD,6BAAC8E,mBAAD;AACE,MAAA,IAAI,EAAEC,0BAAgB,CAACC,KADzB;AAEE,MAAA,cAAc,EAAEH;AAFlB,MADF,CADF;AAQD;;AAED,MAAInJ,OAAO,IAAIoC,YAAf,EAA6B;AAC3B,WACEkC;AAAK,MAAA,SAAS,EAAEgD;AAAhB,OACEhD,6BAAC8E,mBAAD;AAAa,MAAA,IAAI,EAAEC,0BAAgB,CAACE;AAApC,MADF,CADF;AAKD;;AAED,MAAI,CAACnH,YAAL,EAAmB;AACjB,WACEkC;AAAK,MAAA,SAAS,EAAEgD;AAAhB,OACEhD,6BAAC8E,mBAAD;AACE,MAAA,IAAI,EAAEC,0BAAgB,CAACG,SADzB;AAEE,MAAA,cAAc,EAAErB,cAAc;AAFhC,MADF,CADF;AAQD;;AAED,SACE7D;AACE,IAAA,SAAS,EAAEgD,oBADb;AAEE,IAAA,QAAQ,EAAEqB,cAFZ;AAGE,IAAA,GAAG,EAAEF;AAHP,KAMKvI,WAAW,CAACoG,MAAZ,GAAqB,CAAtB,GAEIpG,WAAW,CAACmI,GAAZ,CAAgB,UAAC9E,OAAD;AACd,QAAImE,gBAAJ,EAAsB;AACpB,aAAOA,gBAAgB,CAAC;AAAEnE,QAAAA,OAAO,SAAT;AAAWoE,QAAAA,aAAa;AAAxB,OAAD,CAAvB;AACD;;AACD,QAAIpE,OAAO,CAACkG,WAAR,KAAwB,MAA5B,EAAoC;AAClC,aACEnF,6BAAC,qBAAD;AACE,QAAA,SAAS,EAAKgD,oBAAoB,0BADpC;AAEE,QAAA,OAAO,EAAE/D,OAFX;AAGE,QAAA,GAAG,EAAEA,OAAO,CAACmG,SAHf;AAIE,QAAA,QAAQ,EAAG7B,iBAAiB,KAAKtE,OAAO,CAACmG,SAJ3C;AAKE,QAAA,OAAO,EAAE;AACP/B,UAAAA,aAAa,CAACpE,OAAD,CAAb;AACAuE,UAAAA,oBAAoB,CAACvE,OAAO,CAACmG,SAAT,CAApB;AACD;AARH,QADF;AAYD;;AACD,WACEpF,6BAAC,iBAAD;AACE,MAAA,SAAS,EAAKgD,oBAAoB,0BADpC;AAEE,MAAA,OAAO,EAAE/D,OAFX;AAGE,MAAA,GAAG,EAAEA,OAAO,CAACmG,SAHf;AAIE,MAAA,QAAQ,EAAG7B,iBAAiB,KAAKtE,OAAO,CAACmG,SAJ3C;AAKE,MAAA,OAAO,EAAE;AACP/B,QAAAA,aAAa,CAACpE,OAAD,CAAb;AACAuE,QAAAA,oBAAoB,CAACvE,OAAO,CAACmG,SAAT,CAApB;AACD;AARH,MADF;AAYD,GA9BD,CAFJ,GAmCIpF,6BAAC8E,mBAAD;AAAa,IAAA,IAAI,EAAEC,0BAAgB,CAACM;AAApC,IAzCR,CADF;AA+CD;;AAED,sBAAeC,uCAAoB,CAACrC,aAAD,CAAnC;;;;"}