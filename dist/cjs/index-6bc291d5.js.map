{"version":3,"file":"index-9dc7a088.js","sources":["../../../src/ui/ChannelAvatar/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.GroupChannel;\n  userId: string;\n  theme: string;\n  height?: number,\n  width?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  height = 56,\n  width = 56,\n}: Props): JSX.Element{\n  const { isBroadcast } = channel;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.useDefaultAvatar(channel)\n          ? (\n            theme === 'dark'\n              ? (\n                <Icon\n                  type={IconTypes.BROADCAST_LARGE_DARK}\n                  width={width}\n                  height={height}\n                  className=\"sendbird-chat-header__default--broadcast-channel-dark\"\n                />\n                )\n              : (\n                <Icon\n                  type={IconTypes.BROADCAST_LARGE_LIGHT}\n                  width={width}\n                  height={height}\n                  className=\"sendbird-chat-header__default--broadcast-channel-light\"\n                />\n              )\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header__avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header__avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel.name}\n        />\n      )\n  ),[channel.members, channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"],"names":["ChannelAvatar","_a","channel","userId","theme","_b","height","_c","width","isBroadcast","memoizedAvatar","useMemo","utils","React","Icon","IconTypes","BROADCAST_LARGE_DARK","BROADCAST_LARGE_LIGHT","Avatar","name","members","coverUrl"],"mappings":";;;;;;;;;AAeA,SAASA,aAAT,CAAuBC,EAAvB;MACEC,OAAO;MACPC,MAAM;MACNC,KAAK;MACLC;MAAAC,MAAM,mBAAG;MACTC;MAAAC,KAAK,mBAAG;AAEA,MAAAC,WAAW,GAAKP,OAAO,YAAvB;AACR,MAAMQ,cAAc,GAAGC,aAAO,CAAC;AAAM,WACnCF,WAAW,GAEPG,sBAAA,CAAuBV,OAAvB,IAEIE,KAAK,KAAK,MAAV,GAEIS,6BAACC,UAAD;AACE,MAAA,IAAI,EAAEC,eAAS,CAACC,oBADlB;AAEE,MAAA,KAAK,EAAER,KAFT;AAGE,MAAA,MAAM,EAAEF,MAHV;AAIE,MAAA,SAAS,EAAC;AAJZ,MAFJ,GAUIO,6BAACC,UAAD;AACE,MAAA,IAAI,EAAEC,eAAS,CAACE,qBADlB;AAEE,MAAA,KAAK,EAAET,KAFT;AAGE,MAAA,MAAM,EAAEF,MAHV;AAIE,MAAA,SAAS,EAAC;AAJZ,MAZR,GAqBIO,6BAACK,YAAD;AACE,MAAA,SAAS,EAAC,iDADZ;AAEE,MAAA,GAAG,EAAEN,4BAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAEK,KAHT;AAIE,MAAA,MAAM,EAAEF,MAJV;AAKE,MAAA,GAAG,EAAEJ,OAAO,CAACiB;AALf,MAvBG,GAiCPN,6BAACK,YAAD;AACE,MAAA,SAAS,EAAC,6CADZ;AAEE,MAAA,GAAG,EAAEN,4BAAA,CAA6BV,OAA7B,EAAsCC,MAAtC,CAFP;AAGE,MAAA,KAAK,EAAKK,KAAK,OAHjB;AAIE,MAAA,MAAM,EAAKF,MAAM,OAJnB;AAKE,MAAA,GAAG,EAAEJ,OAAO,CAACiB;AALf,MAlC+B;AA0CpC,GA1C6B,EA0C5B,CAACjB,OAAO,CAACkB,OAAT,EAAkBlB,OAAO,CAACmB,QAA1B,EAAoCjB,KAApC,CA1C4B,CAA9B;AA2CA,SACES,4DAAIH,cAAJ,CADF;AAGD;;;;"}