{"version":3,"file":"LeaveChannel-42e6a67d.js","sources":["../../../src/ui/Badge/index.jsx","../../../src/smart-components/InviteMembers/index.jsx","../../../src/smart-components/ChannelList/components/utils.js","../../../src/smart-components/ChannelSettings/components/LeaveChannel.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function Badge({\n  count,\n  maxLevel,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const maximumNumber = parseInt('9'.repeat((maxLevel > 6) ? 6 : maxLevel), 10);\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  return (\n    <div className={[...injectingClassName, 'sendbird-badge'].join(' ')}>\n      <div className=\"sendbird-badge__text\">\n        <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONCONTENT_1}>\n          {\n            (count > maximumNumber)\n              ? `${maximumNumber}${stringSet.BADGE__OVER}`\n              : count\n          }\n        </Label>\n      </div>\n    </div>\n  );\n}\n\nBadge.propTypes = {\n  count: PropTypes.number.isRequired,\n  maxLevel: PropTypes.number,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nBadge.defaultProps = {\n  maxLevel: 2,\n  className: [],\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Modal from '../../ui/Modal';\nimport { Type as ButtonTypes } from '../../ui/Button/type';\nimport UserListItem from '../../ui/UserListItem';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst filterUser = (idsToFilter) => (currentId) => idsToFilter.includes(currentId);\n\nconst InviteMembers = (props) => {\n  const {\n    userQueryCreator,\n    closeModal,\n    onSubmit,\n    submitText,\n    titleText,\n    idsToFilter,\n    swapParams,\n  } = props;\n\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const { stringSet } = useContext(LocalizationContext);\n  const [usersDataSource, setUsersDataSource] = useState({});\n  const selectedCount = Object.keys(selectedUsers).length;\n\n  useEffect(() => {\n    const applicationUserListQuery = userQueryCreator();\n    setUsersDataSource(applicationUserListQuery);\n    applicationUserListQuery.next((res, err) => {\n      // eslint-disable-next-line no-underscore-dangle\n      let users_ = res;\n      let error = err;\n      if (swapParams) {\n        users_ = err;\n        error = users_;\n      }\n      if (error) {\n        return;\n      }\n      setUsers(users_);\n    });\n  }, []);\n\n  return (\n    <Modal\n      onCancel={closeModal}\n      onSubmit={() => {\n        const selectedUserList = Object.keys(selectedUsers);\n        if (selectedUserList.length > 0) {\n          onSubmit(selectedUserList);\n          closeModal();\n        }\n      }}\n      submitText={submitText}\n      titleText={titleText}\n      type={ButtonTypes.PRIMARY}\n    >\n      <div>\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-create-channel--scroll\"\n          onScroll={(e) => {\n            const { hasNext } = usersDataSource;\n            const fetchMore = (\n              e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              usersDataSource.next((usersBatch, error) => {\n                if (error) {\n                  return;\n                }\n                setUsers([\n                  ...users,\n                  ...usersBatch,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            users.map((user) => (!filterUser(idsToFilter)(user.userId)) && (\n              <UserListItem\n                key={user.userId}\n                user={user}\n                checkBox\n                checked={selectedUsers[user.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedUsers = {\n                      ...selectedUsers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedUsers[event.target.id];\n                    }\n                    setSelectedUsers(modifiedSelectedUsers);\n                  }\n                }\n              />\n            ))\n          }\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nInviteMembers.propTypes = {\n  idsToFilter: PropTypes.arrayOf(PropTypes.string),\n  swapParams: PropTypes.bool,\n  userQueryCreator: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  submitText: PropTypes.string,\n  titleText: PropTypes.string,\n};\nInviteMembers.defaultProps = {\n  swapParams: false,\n  submitText: 'create',\n  titleText: 'Create new channel',\n  idsToFilter: [],\n};\n\nexport default InviteMembers;\n","export const createDefaultUserListQuery = ({ sdk, userFilledApplicationUserListQuery = {} }) => {\n  const params = sdk.createApplicationUserListQuery();\n  if (userFilledApplicationUserListQuery) {\n    Object.keys(userFilledApplicationUserListQuery).forEach((key) => {\n      params[key] = userFilledApplicationUserListQuery[key];\n    });\n  }\n  return params;\n};\n\nconst getApplicationAttributes = (sdk = {}) => {\n  const { appInfo = {} } = sdk;\n  const { applicationAttributes = [] } = appInfo;\n  return applicationAttributes;\n};\n\nexport const isBroadcastChannelEnabled = (sdk = {}) => {\n  const ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n\n  return false;\n};\nexport const isSuperGroupChannelEnabled = (sdk = {}) => {\n  const ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n\n  return false;\n};\n\nexport const setChannelType = (params, type) => {\n  if (type === 'broadcast') {\n    // eslint-disable-next-line no-param-reassign\n    params.isBroadcast = true;\n  }\n  if (type === 'supergroup') {\n    // eslint-disable-next-line no-param-reassign\n    params.isSuper = true;\n  }\n  return params;\n};\n\nexport const createChannel = (\n  sdk,\n  selectedUsers,\n  onBeforeCreateChannel,\n  userId,\n  type = 'group',\n) => new Promise((resolve, reject) => {\n  // have custom params\n  if (onBeforeCreateChannel) {\n    const params = onBeforeCreateChannel(selectedUsers);\n    setChannelType(params, type);\n    sdk.GroupChannel.createChannel(params, (response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let groupChannel = response;\n      let err = error;\n      if (swapParams) {\n        groupChannel = error;\n        err = response;\n      }\n      if (err) {\n        reject(err);\n      }\n      resolve(groupChannel);\n    });\n    return;\n  }\n\n  const params = new sdk.GroupChannelParams();\n  params.addUserIds(selectedUsers);\n  params.isDistinct = false;\n\n  if (userId) {\n    params.operatorUserIds = [userId];\n  }\n  setChannelType(params, type);\n  // do not have custom params\n  sdk.GroupChannel.createChannel(\n    params,\n    (response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let groupChannel = response;\n      let err = error;\n      if (swapParams) {\n        groupChannel = error;\n        err = response;\n      }\n      if (err) {\n        reject(err);\n      }\n      resolve(groupChannel);\n    },\n  );\n});\n\nexport default createChannel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\n\nconst LeaveChannel = (props) => {\n  const {\n    onCloseModal,\n    onLeaveChannel,\n  } = props;\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onLeaveChannel}\n      submitText=\"Leave\"\n      titleText=\"Leave this channel?\"\n    />\n  );\n};\n\nLeaveChannel.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nexport default LeaveChannel;\n"],"names":["Badge","count","maxLevel","className","useContext","LocalizationContext","stringSet","maximumNumber","parseInt","repeat","injectingClassName","Array","isArray","React","join","Label","LabelTypography","CAPTION_2","LabelColors","ONCONTENT_1","BADGE__OVER","propTypes","PropTypes","number","isRequired","oneOfType","string","arrayOf","defaultProps","filterUser","idsToFilter","currentId","includes","InviteMembers","props","userQueryCreator","closeModal","onSubmit","submitText","titleText","swapParams","useState","users","setUsers","selectedUsers","setSelectedUsers","usersDataSource","setUsersDataSource","selectedCount","Object","keys","length","useEffect","applicationUserListQuery","next","res","err","users_","error","Modal","selectedUserList","ButtonTypes","PRIMARY","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","e","hasNext","fetchMore","target","clientHeight","scrollTop","scrollHeight","usersBatch","map","user","userId","UserListItem","event","modifiedSelectedUsers","id","checked","bool","func","createDefaultUserListQuery","sdk","userFilledApplicationUserListQuery","params","createApplicationUserListQuery","forEach","key","getApplicationAttributes","appInfo","applicationAttributes","isBroadcastChannelEnabled","ALLOW_BROADCAST_CHANNEL","isSuperGroupChannelEnabled","ALLOW_SUPER_GROUP_CHANNEL","setChannelType","type","isBroadcast","isSuper","createChannel","onBeforeCreateChannel","Promise","resolve","reject","GroupChannel","response","getErrorFirstCallback","groupChannel","GroupChannelParams","addUserIds","isDistinct","operatorUserIds","LeaveChannel","onCloseModal","onLeaveChannel"],"mappings":"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"}