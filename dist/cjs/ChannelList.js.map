{"version":3,"file":"ChannelList.js","sources":["../../../src/smart-components/ChannelList/dux/actionTypes.js","../../../src/smart-components/ChannelList/dux/initialState.js","../../../src/smart-components/ChannelList/dux/reducers.js","../../../src/ui/ChannelPreview/utils.js","../../../src/ui/ChannelPreview/index.jsx","../../../src/ui/ChannelHeader/index.jsx","../../../src/ui/EditUserProfile/index.tsx","../../../src/smart-components/ChannelList/components/AddChannel.jsx","../../../src/smart-components/ChannelList/components/ChannelPreviewAction.jsx","../../../src/smart-components/ChannelList/components/Placeholder.jsx","../../../src/smart-components/ChannelList/utils.js","../../../src/smart-components/ChannelList/index.jsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n};\n","import * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: action.payload,\n        currentChannel: (action.payload && action.payload.length && action.payload.length > 0)\n          ? action.payload[0].url\n          : null,\n      };\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter(\n            (channel) => channel.url !== action.payload.url,\n          )],\n        currentChannel: action.payload.url,\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED:\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      const leftCurrentChannel = (state.currentChannel === channelUrl);\n      const newAllChannels = state.allChannels.filter(({ url }) => url !== channelUrl);\n      const currentChannel = leftCurrentChannel\n        ? (() => (\n          (newAllChannels.length > 0)\n            ? newAllChannels[0].url\n            : ''\n        ))()\n        : state.currentChannel;\n\n      return {\n        ...state,\n        currentChannel,\n        allChannels: newAllChannels,\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      const { url } = channel;\n      if (isMe) {\n        const leftCurrentChannel = (url === state.currentChannel);\n        const newAllChannels = state.allChannels.filter((c) => (c.url !== url));\n        const currentChannel = leftCurrentChannel\n          ? (() => (\n            (newAllChannels.length > 0)\n              ? newAllChannels[0].url\n              : ''\n          ))()\n          : state.currentChannel;\n\n        return {\n          ...state,\n          currentChannel,\n          allChannels: newAllChannels,\n        };\n      }\n      // other user left\n      const newAllChannels = state.allChannels.map((c) => ((c.url === url) ? channel : c));\n      return {\n        ...state,\n        allChannels: newAllChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const { unreadMessageCount } = action.payload;\n      const channel = action.payload;\n      if (!channel.lastMessage) {\n        return state;\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel.url);\n        const currentUnReadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnReadCount === 0) {\n          return {\n            ...state,\n            allChannels: allChannels.map((c) => {\n              if (c.url === channel.url) {\n                return channel;\n              }\n              return c;\n            }),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            return action.payload;\n          }\n          return channel;\n        }),\n      };\n    case actions.ON_CHANNEL_FROZEN:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            // eslint-disable-next-line no-param-reassign\n            channel.isFrozen = true;\n            return channel;\n          }\n          return channel;\n        }),\n      };\n    case actions.ON_CHANNEL_UNFROZEN:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            // eslint-disable-next-line no-param-reassign\n            channel.isFrozen = false;\n            return channel;\n          }\n          return channel;\n        }),\n      };\n    case actions.CHANNEL_REPLACED_TO_TOP:\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel.url !== action.payload.url),\n        ],\n      };\n    default:\n      return state;\n  }\n}\n","import isToday from 'date-fns/isToday';\nimport format from 'date-fns/format';\nimport isYesterday from 'date-fns/isYesterday';\n\nimport { truncate } from '../FileMessage/utils';\nimport { LabelStringSet } from '../Label';\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n\nexport const getLastMessageCreatedAt = (channel) => {\n  if (!channel || !channel.lastMessage) {\n    return '';\n  }\n  const date = channel.lastMessage.createdAt;\n  if (isToday(date)) {\n    return format(date, 'p');\n  }\n\n  if (isYesterday(date)) {\n    return 'Yesterday';\n  }\n\n  return format(date, 'MMM dd');\n};\n\nexport const getTotalMembers = (channel) => (\n  channel && channel.memberCount\n    ? channel.memberCount\n    : 0\n);\n\nconst getPrettyLastMessage = (message = {}) => {\n  const MAXLEN = 30;\n  const { messageType, name } = message;\n  if (messageType === 'file') {\n    return truncate(name, MAXLEN);\n  }\n  return message.message;\n};\n\nexport const getLastMessage = (channel) => (\n  channel && channel.lastMessage\n    ? getPrettyLastMessage(channel.lastMessage)\n    : ''\n);\n\nexport const getChannelUnreadMessageCount = (channel) => (\n  (channel && channel.unreadMessageCount)\n    ? channel.unreadMessageCount\n    : 0\n);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ChannelAvatar from '../ChannelAvatar/index';\nimport Badge from '../Badge';\nimport Icon, { IconTypes } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport * as utils from './utils';\n\nexport default function ChannelPreview({\n  channel,\n  isActive,\n  ChannelAction,\n  theme,\n  onClick,\n  tabIndex,\n  currentUser,\n}) {\n  const {\n    userId,\n  } = currentUser;\n  const { isBroadcast, isFrozen } = channel;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      role=\"link\"\n      tabIndex={tabIndex}\n      onClick={onClick}\n      onKeyPress={onClick}\n      className={`\n        sendbird-channel-preview\n        ${isActive ? 'sendbird-channel-preview--active' : null}\n      `}\n    >\n      <div\n        className=\"sendbird-channel-preview__avatar\"\n      >\n        <ChannelAvatar\n          channel={channel}\n          userId={userId}\n          theme={theme}\n        />\n      </div>\n      <div\n        className=\"sendbird-channel-preview__content\"\n      >\n        <div className=\"sendbird-channel-preview__content__upper\">\n          <div className=\"sendbird-channel-preview__content__upper__header\">\n            {\n              isBroadcast\n                && (\n                  <div className=\"sendbird-channel-preview__broadcast-icon\">\n                    <Icon\n                      type={\n                        theme === 'dark'\n                          ? IconTypes.BROADCAST_DARK\n                          : IconTypes.BROADCAST_LIGHT\n                      }\n                      height={12}\n                      width={12}\n                    />\n                  </div>\n                )\n            }\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__channel-name\"\n              type={LabelTypography.SUBTITLE_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {utils.getChannelTitle(channel, userId, stringSet)}\n            </Label>\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__total-members\"\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {utils.getTotalMembers(channel)}\n            </Label>\n            {\n              isFrozen\n                && (\n                  <div title=\"Frozen\" className=\"sendbird-channel-preview__frozen-icon\">\n                    <Icon\n                      type={\n                        theme === 'dark'\n                          ? IconTypes.FROZEN_DARK\n                          : IconTypes.FROZEN_LIGHT\n                      }\n                      height={12}\n                      width={12}\n                    />\n                  </div>\n                )\n            }\n          </div>\n          <Label\n            className=\"sendbird-channel-preview__content__upper__last-message-at\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {utils.getLastMessageCreatedAt(channel)}\n          </Label>\n        </div>\n\n        <div className=\"sendbird-channel-preview__content__lower\">\n          <Label\n            className=\"sendbird-channel-preview__content__lower__last-message\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {utils.getLastMessage(channel)}\n          </Label>\n          <div className=\"sendbird-channel-preview__content__lower__unread-message-count\">\n            {\n              utils.getChannelUnreadMessageCount(channel)\n                ? <Badge count={utils.getChannelUnreadMessageCount(channel)} />\n                : null\n            }\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"sendbird-channel-preview__action\"\n      >\n        {ChannelAction}\n      </div>\n    </div>\n  );\n}\n\nChannelPreview.propTypes = {\n  isActive: PropTypes.bool,\n  theme: PropTypes.string,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n    isBroadcast: PropTypes.bool,\n    isFrozen: PropTypes.bool,\n  }),\n  ChannelAction: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n};\n\nChannelPreview.defaultProps = {\n  channel: {},\n  isActive: false,\n  theme: 'light',\n  onClick: () => { },\n  tabIndex: 0,\n  currentUser: {},\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport IconButton from '../IconButton';\n\nimport './index.scss';\nimport Avatar from '../Avatar/index';\n\nexport default function ChannelHeader({\n  user,\n  iconButton,\n  onEdit,\n  renderHeader,\n  allowProfileEdit,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={`\n        ${allowProfileEdit && 'sendbird-channel-header--allow-edit'}\n        sendbird-channel-header\n      `}\n    >\n      {\n        renderHeader\n          ? renderHeader()\n          : (\n            <div\n              className=\"sendbird-channel-header__title\"\n              role=\"button\"\n              onKeyDown={onEdit}\n              onClick={onEdit}\n              tabIndex=\"0\"\n            >\n              <div className=\"sendbird-channel-header__title--left\">\n                <Avatar\n                  height=\"32px\"\n                  width=\"32px\"\n                  src={user.profileUrl}\n                  alt={user.nickname}\n                />\n              </div>\n              <div className=\"sendbird-channel-header__title--right\">\n                <Label\n                  className=\"sendbird-channel-header__title--name\"\n                  type={LabelTypography.SUBTITLE_2}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {user.nickname || stringSet.NO_NAME}\n                </Label>\n                <Label\n                  className=\"sendbird-channel-header__title--user-id\"\n                  type={LabelTypography.BODY_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {user.userId}\n                </Label>\n              </div>\n            </div>\n          )\n      }\n      <div className=\"sendbird-channel-header__right-icon\">\n        {iconButton}\n      </div>\n    </div>\n  );\n}\n\nChannelHeader.propTypes = {\n  user: PropTypes.shape({\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n    userId: PropTypes.string,\n  }),\n  renderHeader: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  onEdit: PropTypes.func.isRequired,\n  iconButton: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.instanceOf(IconButton),\n  ]),\n};\n\nChannelHeader.defaultProps = {\n  user: {},\n  renderHeader: null,\n  allowProfileEdit: false,\n  iconButton: null,\n};\n","import React, {\n  ReactElement,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport './index.scss';\n\nimport Modal from '../Modal';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Input, { InputLabel } from '../Input';\nimport Avatar from '../Avatar';\nimport Icon, { IconTypes } from '../Icon';\nimport { Type as ButtonType } from '../Button/type';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport TextButton from '../TextButton';\nimport { SendbirdTypes } from '../../types';\nimport { noop } from '../../utils/utils';\n\ninterface Props {\n  user: SendbirdTypes['User'];\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  onThemeChange?(theme: string): void;\n  theme?: string;\n  changeTheme?(theme: string): void;\n}\n\nexport function EditUserProfile({\n  user,\n  onCancel,\n  onSubmit,\n  onThemeChange = null,\n  theme = 'light',\n  changeTheme = noop,\n}: Props): ReactElement {\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n\n  return (\n    <Modal\n      titleText={stringSet.EDIT_PROFILE__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (user.nickname !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(inputRef.current.value, newFile);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"sendbird__edit-user-profile\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <section className=\"sendbird__edit-user-profile__img\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__IMAGE_LABEL}\n          </InputLabel>\n          <div className=\"sendbird__edit-user__avatar\">\n            <Avatar\n              height=\"80px\"\n              width=\"80px\"\n              src={currentImg || user.profileUrl}\n            />\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"sendbird__edit-user__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.EDIT_PROFILE__IMAGE_UPLOAD}\n            </Label>\n          </TextButton>\n        </section>\n        <section className=\"sendbird__edit-user__name\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__NICKNAME_LABEL}\n          </InputLabel>\n          <Input\n            required={user.nickname !== ''}\n            name=\"sendbird__edit-user__name\"\n            ref={inputRef}\n            value={user.nickname}\n            placeHolder={stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER}\n          />\n        </section>\n        <section className=\"sendbird__edit-user__userid\">\n          <InputLabel>\n            {/*  userID */}\n            {stringSet.EDIT_PROFILE__USERID_LABEL}\n          </InputLabel>\n          <Input\n            disabled\n            name=\"sendbird__edit-user__userid\"\n            value={user.userId}\n          />\n        </section>\n        <section className=\"sendbird__edit-user__theme\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__THEME_LABEL}\n          </InputLabel>\n          <div className=\"sendbird__edit-user__theme-icon\">\n            {\n              theme === 'dark'\n                ? (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('light');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('light');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_ON}\n                    width={44}\n                    height={24}\n                  />\n                )\n                : (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('dark');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('dark');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_OFF}\n                    width={44}\n                    height={24}\n                  />\n                )\n            }\n          </div>\n        </section>\n      </form>\n    </Modal>\n  );\n}\n\nconst mapStoreToProps = (store) => {\n  return {\n    theme: store.config.theme,\n    changeTheme: store.config.setCurrenttheme,\n  };\n};\n\ninterface ConnectedEditUserProfileProps {\n  user: SendbirdTypes['User'];\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nconst ConnectedEditUserProfile: (\n  props: ConnectedEditUserProfileProps\n) => React.Component = withSendbirdContext(EditUserProfile, mapStoreToProps);\n\nexport default ConnectedEditUserProfile;\n","import './add-channel.scss';\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport IconButton from '../../../ui/IconButton';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport InviteMembers from '../../InviteMembers';\n\nimport {\n  createChannel,\n  createDefaultUserListQuery,\n  isBroadcastChannelEnabled,\n  isSuperGroupChannelEnabled,\n} from './utils';\nimport { CREATE_CHANNEL } from '../dux/actionTypes';\nimport Modal from '../../../ui/Modal';\n\nexport default function AddChannel({\n  sdk,\n  disabled,\n  channelListDispatcher,\n  onBeforeCreateChannel,\n  userId,\n  userFilledApplicationUserListQuery,\n  userListQuery,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState('group');\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (!sdk || !sdk.createApplicationUserListQuery) {\n    return null;\n  }\n\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n\n  return (\n    <>\n      <IconButton\n        height=\"32px\"\n        width=\"32px\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n        disabled={disabled}\n      >\n        <Icon\n          type={IconTypes.CREATE}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </IconButton>\n      {\n        showModal && step === 0 && (\n          <Modal\n            titleText=\"New channel\"\n            hideFooter\n            onCancel={() => { setShowModal(false); }}\n            onSubmit={() => {}}\n          >\n            <div className=\"sendbird-add-channel__rectangle-wrap\">\n              <div\n                className=\"sendbird-add-channel__rectangle\"\n                onClick={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n              >\n                <Icon\n                  type={IconTypes.CHAT}\n                />\n                <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                  Group\n                </Label>\n              </div>\n              {\n                isSupergroupAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.SUPER_GROUP}\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      Super group\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                isBroadcastAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.BROADCAST}\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      Broadcast\n                    </Label>\n                  </div>\n                )\n              }\n            </div>\n          </Modal>\n        )\n      }\n      {\n        showModal && step === 1 && (\n          <InviteMembers\n            swapParams={\n              sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n            }\n            titleText={stringSet.MODAL__CREATE_CHANNEL__TITLE}\n            submitText={stringSet.BUTTON__CREATE}\n            closeModal={() => {\n              setStep(0);\n              setShowModal(false);\n            }}\n            idsToFilter={[userId]}\n            userQueryCreator={() => ((userListQuery && typeof userListQuery === 'function')\n              ? userListQuery()\n              : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n            )}\n            onSubmit={(selectedUsers) => createChannel(\n              sdk,\n              selectedUsers,\n              onBeforeCreateChannel,\n              userId,\n              type,\n            ).then((channel) => {\n              // maybe - do this in event listener\n              channelListDispatcher({\n                type: CREATE_CHANNEL,\n                payload: channel,\n              });\n            })}\n          />\n        )\n      }\n    </>\n  );\n}\n\nAddChannel.propTypes = {\n  sdk: PropTypes.shape({\n    getErrorFirstCallback: PropTypes.func,\n    createApplicationUserListQuery: PropTypes.func,\n  }).isRequired,\n  disabled: PropTypes.bool,\n  channelListDispatcher: PropTypes.func.isRequired,\n  userFilledApplicationUserListQuery: PropTypes.shape({}),\n  onBeforeCreateChannel: PropTypes.func,\n  userId: PropTypes.string.isRequired,\n  userListQuery: PropTypes.func,\n};\n\nAddChannel.defaultProps = {\n  disabled: false,\n  userFilledApplicationUserListQuery: {},\n  onBeforeCreateChannel: null,\n  userListQuery: null,\n};\n","import React, {\n  useState,\n  useRef,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../ui/ContextMenu';\nimport IconButton from '../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport LeaveChannelModal from '../../ChannelSettings/components/LeaveChannel';\n\nexport default function ChannelPreviewAction({ disabled, onLeaveChannel }) {\n  const parentRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div\n      role=\"button\"\n      style={{ display: 'inline-block' }}\n      onKeyDown={(e) => { e.stopPropagation(); }}\n      tabIndex={0}\n      onClick={(e) => { e.stopPropagation(); }}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <IconButton\n            ref={parentRef}\n            onClick={toggleDropdown}\n            height=\"32px\"\n            width=\"32px\"\n          >\n            <Icon\n              type={IconTypes.MORE}\n              fillColor={IconColors.PRIMARY}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            parentRef={parentRef}\n            parentContainRef={parentRef}\n            closeDropdown={closeDropdown}\n          >\n            <MenuItem\n              onClick={() => {\n                if (disabled) { return; }\n                setShowModal(true);\n                closeDropdown();\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n            </MenuItem>\n          </MenuItems>\n        )}\n      />\n      {\n        showModal && (\n          <LeaveChannelModal\n            onCloseModal={() => setShowModal(false)}\n            onLeaveChannel={onLeaveChannel}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nChannelPreviewAction.propTypes = {\n  disabled: PropTypes.bool,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nChannelPreviewAction.defaultProps = {\n  disabled: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Placeholder from '../../../ui/PlaceHolder';\n\nexport default function ChannelsPlaceholder({\n  type,\n}) {\n  return (\n    <div className=\"sendbird-channel-list\">\n      <Placeholder type={type} />\n    </div>\n  );\n}\n\nChannelsPlaceholder.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new sdk.ChannelHandler();\n\n  ChannelHandler.onChannelChanged = (channel) => {\n    logger.info('ChannelList: onChannelChanged', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_CHANGED,\n      payload: channel,\n    });\n  };\n  ChannelHandler.onChannelDeleted = (channelUrl) => {\n    logger.info('ChannelList: onChannelDeleted', channelUrl);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_DELETED,\n      payload: channelUrl,\n    });\n  };\n  ChannelHandler.onUserJoined = (channel) => {\n    logger.info('ChannelList: onUserJoined', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_JOINED,\n        payload: channel,\n      });\n    }\n  };\n  ChannelHandler.onUserBanned = (channel, user) => {\n    const { currentUser } = sdk;\n    logger.info('Channel | useHandleChannelEvents: onUserBanned', channel);\n    if (user.userId === currentUser.userId) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: true,\n        },\n      });\n    } else {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: false,\n        },\n      });\n    }\n  };\n  ChannelHandler.onUserLeft = (channel, leftUser) => {\n    const { currentUser } = sdk;\n    const isMe = (currentUser.userId === leftUser.userId);\n    logger.info('ChannelList: onUserLeft', channel);\n    channelListDispatcher({\n      type: channelActions.ON_USER_LEFT,\n      payload: {\n        channel,\n        isMe,\n      },\n    });\n  };\n\n  ChannelHandler.onReadStatus = (channel) => {\n    logger.info('ChannelList: onReadStatus', channel);\n    channelListDispatcher({\n      type: channelActions.ON_READ_RECEIPT_UPDATED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n    logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onMessageUpdated = (channel, message) => {\n    if (channel.lastMessage.isEqual(message)) {\n      logger.info('ChannelList: onMessageUpdated', channel);\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onChannelHidden = (channel) => {\n    logger.info('ChannelList: onChannelHidden', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_ARCHIVED,\n      payload: channel.url,\n    });\n  };\n\n  ChannelHandler.onChannelFrozen = (channel) => {\n    logger.info('ChannelList: onChannelFrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_FROZEN,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelUnfrozen = (channel) => {\n    logger.info('ChannelList: onChannelUnfrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_UNFROZEN,\n      payload: channel,\n    });\n  };\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.addChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createApplicationUserListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const channelListQuery = sdk.GroupChannel.createMyGroupChannelListQuery();\n  channelListQuery.includeEmpty = false;\n  channelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n  channelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      channelListQuery[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n}) {\n  createEventHandler({\n    sdk,\n    channelListDispatcher,\n    sdkChannelHandlerId,\n    logger,\n  });\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createApplicationUserListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next((response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let channelList = response;\n      let err = error;\n      if (swapParams) {\n        channelList = error;\n        err = response;\n      }\n      logger.info('ChannelList - fetched channels', channelList);\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n        return;\n      }\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sorted = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sorted = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sorted);\n      }\n      onChannelSelect(sorted[0]);\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: sorted,\n      });\n      if (channelList && typeof channelList.forEach === 'function') {\n        logger.info('ChannelList - mark all channels as delivered');\n        channelList.forEach((c) => c.markAsDelivered());\n      }\n    });\n  } else {\n    logger.warning('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subScriber = new Map();\n  if (!pubSub) return subScriber;\n  subScriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subScriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    updatedChannel.lastMessage = message;\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subScriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel.url,\n    });\n  }));\n\n  subScriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subScriber;\n};\n\nexport default setupChannelList;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as userActions from '../../lib/dux/user/actionTypes';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport * as channelListActions from './dux/actionTypes';\nimport channelListInitialState from './dux/initialState';\nimport channelListReducers from './dux/reducers';\n\nimport ChannelPreview from '../../ui/ChannelPreview';\nimport ChannelHeader from '../../ui/ChannelHeader';\nimport EditUserProfile from '../../ui/EditUserProfile';\nimport PlaceholderTypes from '../../ui/PlaceHolder/type';\n\nimport AddChannel from './components/AddChannel';\nimport ChannelPreviewAction from './components/ChannelPreviewAction';\nimport PlaceHolder from './components/Placeholder';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from './utils';\nimport { uuidv4 } from '../../utils/uuid';\n\nimport './index.scss';\n\nconst noop = () => { };\n\nfunction ChannelList(props) {\n  const {\n    stores: { sdkStore = {}, userStore = {} },\n    config: {\n      userId,\n      isOnline,\n      userListQuery,\n      logger,\n      pubSub,\n      theme,\n    },\n    dispatchers: {\n      userDispatcher,\n    },\n    queries = {},\n    renderChannelPreview,\n    renderHeader,\n    renderUserProfile,\n    disableUserProfile,\n    allowProfileEdit,\n    sortChannelList,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    onChannelSelect,\n  } = props;\n  const { config = {} } = props;\n  // enable if it is true atleast once(both are flase by default)\n  const enableEditProfile = allowProfileEdit || config.allowProfileEdit;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const { sdk = {} } = sdkStore;\n  const userFilledChannelListQuery = queries.channelListQuery;\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  const sdkError = sdkStore.error;\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    setUser(userStore.user);\n  }, [userStore.user]);\n\n\n  const sdkIntialized = sdkStore.initialized;\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  );\n  const [channelSource, setChannelSource] = useState({});\n  const [sdkChannelHandlerId, setSdkChannelHandlerId] = useState(null);\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n\n  const { loading, currentChannel } = channelListStore;\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    setSdkChannelHandlerId(uuidv4);\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource({});\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  useEffect(() => {\n    if (!sdk || !sdk.GroupChannel) { return; }\n    sdk.GroupChannel.getChannel(currentChannel, (groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel]);\n\n  return (\n    <UserProfileProvider\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n      className=\"sendbird-channel-list\"\n    >\n      <div className=\"sendbird-channel-list__header\">\n        <ChannelHeader\n          renderHeader={renderHeader}\n          user={user}\n          onEdit={() => {\n            if (enableEditProfile) {\n              setShowProfileEdit(true);\n            }\n          }}\n          allowProfileEdit={enableEditProfile}\n          iconButton={(\n            <AddChannel\n              disabled={!isOnline}\n              userListQuery={userListQuery}\n              sdk={sdk}\n              channelListDispatcher={channelListDispatcher}\n              userId={userId}\n              userFilledApplicationUserListQuery={userFilledApplicationUserListQuery}\n              onBeforeCreateChannel={onBeforeCreateChannel}\n            />\n          )}\n        />\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            user={user}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onSubmit={(newName, newFile) => {\n              sdk.updateCurrentUserInfoWithProfileImage(newName, newFile, (updatedUser) => {\n                userDispatcher({ type: userActions.UPDATE_USER_INFO, payload: updatedUser });\n                if (onProfileEditSuccess && typeof onProfileEditSuccess === 'function') {\n                  onProfileEditSuccess(updatedUser);\n                }\n              });\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const fetchMore = e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight;\n          if (fetchMore && channelSource.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n            });\n            channelSource.next((response, error) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let channelList = response;\n              let err = error;\n              if (swapParams) {\n                channelList = error;\n                err = response;\n              }\n              if (err) {\n                logger.info('ChannelList: Fetching channels failed', err);\n                channelListDispatcher({\n                  type: channelListActions.FETCH_CHANNELS_FAILURE,\n                  payload: channelList,\n                });\n                return;\n              }\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n              if (channelList && typeof channelList.forEach === 'function') {\n                logger.info('ChannelList: Marking all channels as read');\n                channelList.forEach((c) => c.markAsDelivered());\n              }\n            });\n          }\n        }}\n      >\n        {\n          (sdkError) && (\n            <PlaceHolder type={PlaceholderTypes.WRONG} />\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            sortedChannels && sortedChannels.map((channel, idx) => {\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel.url,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      currentUser={user}\n                      theme={theme}\n                      isActive={channel.url === currentChannel}\n                      // todo - potential performance hit refactor\n                      ChannelAction={(\n                        <ChannelPreviewAction\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel)}\n                        />\n                      )}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!sdkIntialized || loading) && (\n            <PlaceHolder type={PlaceholderTypes.LOADING} />\n          )\n        }\n        {\n          //  placeholder\n          (!allChannels || allChannels.length === 0) && (\n            <PlaceHolder type={PlaceholderTypes.NO_CHANNELS} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelList.propTypes = {\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    userDispatcher: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string.isRequired,\n    userListQuery: PropTypes.func,\n    theme: PropTypes.string,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    channelListQuery: PropTypes.shape({\n      channelNameContainsFilter: PropTypes.string,\n      channelUrlsFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypesFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypeStartsWithFilter: PropTypes.string,\n      hiddenChannelFilter: PropTypes.string,\n      includeEmpty: PropTypes.bool,\n      limit: PropTypes.number,\n      memberStateFilter: PropTypes.string,\n      metadataOrderKeyFilter: PropTypes.string,\n      nicknameContainsFilter: PropTypes.string,\n      order: PropTypes.string,\n      publicChannelFilter: PropTypes.string,\n      superChannelFilter: PropTypes.string,\n      unreadChannelFilter: PropTypes.string,\n      userIdsExactFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilterQueryType: PropTypes.string,\n    }),\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeCreateChannel: PropTypes.func,\n  renderChannelPreview: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  sortChannelList: PropTypes.func,\n  onThemeChange: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  renderHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChannelSelect: PropTypes.func,\n};\n\nChannelList.defaultProps = {\n  onBeforeCreateChannel: null,\n  renderChannelPreview: null,\n  renderHeader: null,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  allowProfileEdit: false,\n  onThemeChange: null,\n  sortChannelList: null,\n  onProfileEditSuccess: null,\n  queries: {},\n  onChannelSelect: noop,\n};\n\nexport default withSendbirdContext(ChannelList);\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","initialized","loading","allChannels","currentChannel","showSettings","reducer","state","action","type","actions","initialState","payload","length","url","currentChannels","map","c","filteredChannels","filter","find","channel","channelUrl","leftCurrentChannel","newAllChannels","isMe","unreadMessageCount","lastMessage","currentUnReadCount","isFrozen","getChannelTitle","currentUserId","stringSet","LabelStringSet","name","members","NO_TITLE","NO_MEMBERS","userId","nickname","NO_NAME","join","getLastMessageCreatedAt","date","createdAt","isToday","format","isYesterday","getTotalMembers","memberCount","getPrettyLastMessage","message","MAXLEN","messageType","truncate","getLastMessage","getChannelUnreadMessageCount","ChannelPreview","isActive","ChannelAction","theme","onClick","tabIndex","currentUser","isBroadcast","useContext","LocalizationContext","React","ChannelAvatar","Icon","IconTypes","BROADCAST_DARK","BROADCAST_LIGHT","Label","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","utils","CAPTION_2","ONBACKGROUND_2","FROZEN_DARK","FROZEN_LIGHT","CAPTION_3","BODY_2","ONBACKGROUND_3","Badge","propTypes","PropTypes","bool","string","shape","arrayOf","coverUrl","element","isRequired","func","number","defaultProps","ChannelHeader","user","iconButton","onEdit","renderHeader","allowProfileEdit","Avatar","profileUrl","oneOfType","instanceOf","IconButton","EditUserProfile","_a","onCancel","onSubmit","_b","onThemeChange","_c","_d","changeTheme","noop","hiddenInputRef","useRef","inputRef","formRef","_e","useState","currentImg","setCurrentImg","_f","newFile","setNewFile","Modal","EDIT_PROFILE__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","InputLabel","EDIT_PROFILE__IMAGE_LABEL","display","URL","createObjectURL","target","files","TextButton","click","BUTTON_1","EDIT_PROFILE__IMAGE_UPLOAD","EDIT_PROFILE__NICKNAME_LABEL","Input","EDIT_PROFILE__NICKNAME_PLACEHOLDER","EDIT_PROFILE__USERID_LABEL","EDIT_PROFILE__THEME_LABEL","TOGGLE_ON","TOGGLE_OFF","mapStoreToProps","store","config","setCurrenttheme","ConnectedEditUserProfile","withSendbirdContext","AddChannel","sdk","disabled","channelListDispatcher","onBeforeCreateChannel","userFilledApplicationUserListQuery","userListQuery","showModal","setShowModal","step","setStep","setType","createApplicationUserListQuery","isBroadcastAvailable","isBroadcastChannelEnabled","isSupergroupAvailable","isSuperGroupChannelEnabled","CREATE","IconColors","CHAT","SUBTITLE_1","SUPER_GROUP","BROADCAST","InviteMembers","getErrorFirstCallback","MODAL__CREATE_CHANNEL__TITLE","BUTTON__CREATE","createDefaultUserListQuery","selectedUsers","createChannel","then","ChannelPreviewAction","onLeaveChannel","parentRef","stopPropagation","ContextMenu","toggleDropdown","MORE","closeDropdown","MenuItems","MenuItem","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","ChannelsPlaceholder","Placeholder","createEventHandler","sdkChannelHandlerId","logger","ChannelHandler","onChannelChanged","info","channelActions","onChannelDeleted","onUserJoined","onUserBanned","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","addChannelHandler","userFilledChannelListQuery","channelListQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","order","limit","Object","keys","forEach","key","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","hasNext","next","response","error","swapParams","channelList","err","sorted","markAsDelivered","warning","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","subScriber","Map","set","topics","subscribe","msg","updatedChannel","ChannelList","props","stores","sdkStore","userStore","isOnline","userDispatcher","dispatchers","queries","renderChannelPreview","renderUserProfile","disableUserProfile","onProfileEditSuccess","enableEditProfile","userDefinedDisableUserProfile","userDefinedRenderProfile","applicationUserListQuery","sdkError","setUser","useEffect","sdkIntialized","useReducer","channelListReducers","channelListInitialState","channelListStore","channelSource","setSdkChannelHandlerId","showProfileEdit","setShowProfileEdit","uuidv4","removeChannelHandler","channelListActions","sortedChannels","console","warn","before","after","getChannel","groupChannel","UserProfileProvider","newName","updateCurrentUserInfoWithProfileImage","updatedUser","userActions","fetchMore","clientHeight","scrollTop","scrollHeight","PlaceHolder","PlaceholderTypes","WRONG","idx","cb","leave","res","catch","LOADING","NO_CHANNELS","publish","channelNameContainsFilter","channelUrlsFilter","customTypesFilter","customTypeStartsWithFilter","hiddenChannelFilter","memberStateFilter","metadataOrderKeyFilter","nicknameContainsFilter","publicChannelFilter","superChannelFilter","unreadChannelFilter","userIdsExactFilter","userIdsIncludeFilter","userIdsIncludeFilterQueryType","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter"],"mappings":"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"}