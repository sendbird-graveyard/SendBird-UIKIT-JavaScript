{"version":3,"file":"Channel.js","sources":["../../../src/smart-components/Conversation/dux/actionTypes.js","../../../src/smart-components/Conversation/types.js","../../../src/smart-components/Conversation/utils.js","../../../src/smart-components/Conversation/dux/initialState.js","../../../src/smart-components/Conversation/dux/reducers.js","../../../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../../src/smart-components/Conversation/hooks/useGetChannel.js","../../../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../../src/smart-components/Conversation/hooks/useHandleReconnect.js","../../../src/smart-components/Conversation/hooks/useScrollCallback.js","../../../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../../../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../../../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../../../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../../src/smart-components/Conversation/hooks/useSetReadStatus.js","../../../src/ui/ReactionButton/index.jsx","../../../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../../src/ui/MessageStatus/index.jsx","../../../src/ui/ReactionBadge/index.jsx","../../../src/ui/Tooltip/index.jsx","../../../src/ui/TooltipWrapper/index.jsx","../../../src/ui/EmojiReactions/index.jsx","../../../src/ui/Message/memoizedMessageText.jsx","../../../src/hooks/onMouseHover.jsx","../../../src/ui/Message/index.jsx","../../../src/ui/AdminMessage/index.jsx","../../../src/ui/ThumbnailMessage/util.js","../../../src/ui/ThumbnailMessage/index.jsx","../../../src/ui/FileMessage/index.jsx","../../../src/smart-components/Conversation/components/RemoveMessage.jsx","../../../src/ui/UnknownMessage/utils.js","../../../src/ui/UnknownMessage/index.jsx","../../../src/ui/OGMessage/const.js","../../../src/ui/OGMessage/utils.js","../../../src/ui/OGMessage/memoizedMessageText.jsx","../../../src/ui/OGMessage/index.jsx","../../../src/smart-components/Conversation/components/MessageHOC.jsx","../../../src/smart-components/Conversation/components/ConversationScroll.jsx","../../../src/smart-components/Conversation/components/Notification.jsx","../../../src/smart-components/Conversation/components/FrozenNotification.tsx","../../../src/smart-components/Conversation/components/TypingIndicator.jsx","../../../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../../../src/ui/ConnectionStatus/index.jsx","../../../src/ui/ChatHeader/utils.js","../../../src/ui/AutoRefresh/index.jsx","../../../src/ui/ChatHeader/index.jsx","../../../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nexport const SET_READ_STATUS = 'SET_READ_STATUS';\n","import { isImage, isVideo } from '../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message) => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if ((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return '';\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../../ui/MessageStatus/type';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport { SendingMessageStatus } from './types';\n\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = SendingMessageStatus;\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  readStatus: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { SendingMessageStatus } from '../types';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = SendingMessageStatus;\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...filteredAllMessages,\n          ...receivedMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (!(state.allMessages.map((msg) => msg.messageId).indexOf(message.messageId) < 0)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.SET_READ_STATUS: {\n      return {\n        ...state,\n        readStatus: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, currentGroupChannel.url) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                currentGroupChannel.markAsRead();\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, currentGroupChannel.url) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByMessageId) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', message);\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!');\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', message);\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\n\nexport default function useSetReadStatus({ allMessages, currentGroupChannel }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (!sdk.ChannelHandler || !currentGroupChannel.url) {\n      return () => {};\n    }\n    // todo: move to reducer?\n    const setReadStatus = () => {\n      const allReadStatus = allMessages.reduce((accumulator, msg) => {\n        if (msg.messageId !== 0) {\n          return {\n            ...accumulator,\n            [msg.messageId]: utils.getParsedStatus(msg, currentGroupChannel),\n          };\n        }\n        return accumulator;\n      }, {});\n      messagesDispatcher({\n        type: messageActionTypes.SET_READ_STATUS,\n        payload: allReadStatus,\n      });\n    };\n    if (allMessages.length > 0) {\n      setReadStatus();\n    }\n\n    const channelUrl = currentGroupChannel.url;\n    const handler = new sdk.ChannelHandler();\n    const handleMessageStatus = (c) => {\n      if (channelUrl === c.url) {\n        setReadStatus();\n      }\n    };\n    handler.onDeliveryReceiptUpdated = handleMessageStatus;\n    handler.onReadReceiptUpdated = handleMessageStatus;\n    // Add this channel event handler to the SendBird object.\n    const handlerId = uuidv4();\n    logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n    sdk.addChannelHandler(handlerId, handler);\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useSetReadStatus: Removing message reciver handler', handlerId);\n        sdk.removeChannelHandler(handlerId);\n      }\n    };\n  }, [allMessages, currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    children,\n    width,\n    height,\n    onClick,\n    selected,\n    className,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={ref}\n      className={`sendbird-reaction-button${selected ? '--selected' : ''} ${injectingClassName.join(' ')}`}\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      role=\"button\"\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nReactionButton.defaultProps = {\n  selected: false,\n  width: '36px',\n  height: '36px',\n  onClick: () => { },\n  className: '',\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\nimport MessageStatusType from './type';\n\nimport { getMessageCreatedAt } from '../../utils/utils';\n\nconst MessageStatusTypes = MessageStatusType;\nexport { MessageStatusTypes };\nexport default function MessageStatus({\n  message,\n  status,\n  className,\n}) {\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  const label = () => {\n    switch (status) {\n      case MessageStatusType.FAILED:\n      case MessageStatusType.PENDING: {\n        return null;\n      }\n      case MessageStatusType.SENT:\n      case MessageStatusType.DELIVERED:\n      case MessageStatusType.READ: {\n        return (\n          <Label\n            className=\"sendbird-message-status__text\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getMessageCreatedAt(message)}\n          </Label>\n        );\n      }\n      default: return null;\n    }\n  };\n\n  const icon = {\n    PENDING: (\n      <Loader className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\">\n        <Icon type={IconTypes.SPINNER} width=\"16px\" height=\"16px\" fillColor={IconColors.PRIMARY} />\n      </Loader>\n    ),\n    SENT: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE} fillColor={IconColors.SENT} />,\n    DELIVERED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE_ALL} fillColor={IconColors.SENT} />,\n    READ: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.DONE_ALL} fillColor={IconColors.READ} />,\n    FAILED: <Icon className=\"sendbird-message-status__icon\" width=\"16px\" height=\"16px\" type={IconTypes.ERROR} fillColor={IconColors.ERROR} />,\n  };\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message-status'].join(' ')}>\n      {icon[status]}\n      <br />\n      {label(status)}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nMessageStatus.defaultProps = {\n  message: null,\n  status: '',\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  if (selected && !isAdd) {\n    injectingClassName.unshift('sendbird-reaction-badge--selected');\n  } else if (isAdd) {\n    injectingClassName.push('sendbird-reaction-badge--is-add');\n  } else {\n    injectingClassName.unshift('sendbird-reaction-badge');\n  }\n\n  return (\n    <div\n      ref={ref}\n      tabIndex={0}\n      role=\"button\"\n      className={injectingClassName.join(' ')}\n      onClick={onClick}\n      onKeyDown={onClick}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label className={children && count ? 'sendbird-reaction-badge__inner__count' : ''} type={LabelTypography.CAPTION_3} color={LabelColors.ONBACKGROUND_1}>\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label from '../Label';\n\nconst CLASS_NAME = 'sendbird-tooltip';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <Label\n        className={`${CLASS_NAME}__text`}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst CLASS_NAME = 'sendbird-tooltip-wrapper';\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const injectingClassName = Array.isArray(className)\n    ? [CLASS_NAME, ...className]\n    : [CLASS_NAME, className];\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className={`${CLASS_NAME}__children`}\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className={`${CLASS_NAME}__hover-tooltip`}\n            style={{\n              bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)`,\n            }}\n          >\n            <div\n              className={`${CLASS_NAME}__hover-tooltip__inner`}\n            >\n              <div\n                className={`${CLASS_NAME}__hover-tooltip__inner__tooltip-container`}\n                style={{\n                  left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)`,\n                }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React, { useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ReactionBadge from '../ReactionBadge';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu from '../ContextMenu';\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function EmojiReactions({\n  className,\n  userId,\n  message,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift('sendbird-emoji-reactions');\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const imageWidth = '20px';\n  const imageHeight = '20px';\n  const emojiReactionAddRef = useRef(null);\n  const { reactions = [] } = message;\n  const messageReactions = reactions;\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-emoji-reactions--inner\">\n        {\n          messageReactions && (\n            messageReactions.map((reaction) => {\n              const { userIds = [] } = reaction;\n              const emojiUrl = emojiAllMap.get(reaction.key) || '';\n              const reactedUserCount = userIds.length;\n              const reactedByMe = !(userIds.indexOf(userId) < 0);\n              const nicknames = userIds\n                .filter((currentUserId) => currentUserId !== userId)\n                .map((currentUserId) => (\n                  membersMap.get(currentUserId) || stringSet.TOOLTIP__UNKOWN_USER\n                ));\n              const stringSetForMe = (nicknames.length > 0)\n                ? stringSet.TOOLTIP__AND_YOU : stringSet.TOOLTIP__YOU;\n              return (\n                <TooltipWrapper\n                  className=\"sendbird-emoji-reactions__emoji-reaction\"\n                  key={reaction.key}\n                  hoverTooltip={\n                    userIds.length > 0 && (\n                      <Tooltip>\n                        <>\n                          {\n                            `${(\n                              nicknames.join(', ')\n                            )}${(\n                              reactedByMe\n                                ? stringSetForMe\n                                : ''\n                            )}`\n                          }\n                        </>\n                      </Tooltip>\n                    )\n                  }\n                >\n                  <ReactionBadge\n                    count={reactedUserCount}\n                    selected={reactedByMe}\n                    onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n                  >\n                    <ImageRenderer\n                      circle\n                      url={emojiUrl}\n                      width={imageWidth}\n                      height={imageHeight}\n                      defaultComponent={(\n                        <Icon\n                          width={imageWidth}\n                          height={imageHeight}\n                          type={IconTypes.QUESTION}\n                        />\n                      )}\n                    />\n                  </ReactionBadge>\n                </TooltipWrapper>\n              );\n            })\n          )\n        }\n        {\n          (messageReactions.length < emojiAllMap.size)\n          && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <ReactionBadge\n                  isAdd\n                  onClick={toggleDropdown}\n                  className=\"sendbird-emoji-reactions__emoji-reaction-add\"\n                  ref={emojiReactionAddRef}\n                >\n                  <Icon\n                    width={imageWidth}\n                    height={imageHeight}\n                    fillColor={IconColors.ON_BACKGROUND_3}\n                    type={IconTypes.EMOJI_MORE}\n                  />\n                </ReactionBadge>\n              )}\n              menuItems={(closeDropdown) => (\n                <MemoizedEmojiListItems\n                  message={message}\n                  parentRef={emojiReactionAddRef}\n                  parentContainRef={emojiReactionAddRef}\n                  closeDropdown={closeDropdown}\n                  spaceFromTrigger={{ y: 4 }}\n                />\n              )}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nEmojiReactions.propTypes = {\n  userId: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    reactions: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\nEmojiReactions.defaultProps = {\n  className: '',\n  membersMap: new Map(),\n  userId: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport uuidv4 from '../../utils/uuid';\n\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n  incoming,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const WORD_TYPOGRAPHY = LabelTypography.BODY_1;\n  const EDITED_COLOR = incoming ? LabelColors.ONBACKGROUND_2 : LabelColors.ONCONTENT_2;\n  return useMemo(() => () => {\n    const splitMessage = message.split(/\\r/);\n    const matchedMessage = splitMessage\n      .map((word) => (word !== '' ? word : <br />));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import { useEffect } from 'react';\n\nconst MOUSE_ENTER = 'mouseenter';\nconst MOUSE_LEAVE = 'mouseleave';\n\nconst useMouseHover = ({\n  ref,\n  setHover,\n}) => {\n  const handleMouseOver = () => {\n    if (ref.current) {\n      setHover(true);\n    }\n  };\n  const handleMouseOut = () => {\n    if (ref.current) {\n      setHover(false);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = ref;\n    current.addEventListener(MOUSE_ENTER, handleMouseOver);\n    current.addEventListener(MOUSE_LEAVE, handleMouseOut);\n    return () => {\n      current.removeEventListener(MOUSE_ENTER, handleMouseOver);\n      current.removeEventListener(MOUSE_LEAVE, handleMouseOut);\n    };\n  });\n};\n\nexport default useMouseHover;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport UserProfile from '../UserProfile';\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport MessageStatus from '../MessageStatus';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  copyToClipboard,\n  getMessageCreatedAt,\n  getSenderName,\n  getSenderProfileUrl,\n  getIsSentFromStatus,\n} from './utils';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst noop = () => { };\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function Message(props) {\n  const {\n    isByMe,\n    userId,\n    message,\n    className,\n    resendMessage,\n    disabled,\n    showEdit,\n    showRemove,\n    status,\n    useReaction,\n    emojiAllMap,\n    membersMap,\n    toggleReaction,\n    memoizedEmojiListItems,\n    chainTop,\n    chainBottom,\n  } = props;\n\n  if (!message) return null;\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  injectingClassName.push(`sendbird-message${isByMe ? '--outgoing' : '--incoming'}`);\n  const outgoingMemoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-user-message-word',\n  });\n  const incomingMemoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-user-message-word',\n    incoming: true,\n  });\n\n  return (\n    <div className={[...injectingClassName, 'sendbird-message'].join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUserMessage\n              userId={userId}\n              message={message}\n              resendMessage={resendMessage}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={outgoingMemoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUserMessage\n              userId={userId}\n              message={message}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={incomingMemoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])).isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showEdit: PropTypes.func,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  userId: '',\n  resendMessage: noop,\n  className: '',\n  showEdit: noop,\n  showRemove: noop,\n  status: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUserMessage({\n  userId,\n  message,\n  showEdit,\n  disabled,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  // TODO: when message.requestState is succeeded, consider if it's SENT or DELIVERED\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-user-message--outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div\n          className=\"sendbird-user-message__left-padding\"\n        >\n          <div className=\"sendbird-user-message__more\" ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className=\"sendbird-user-message__more__menu\"\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          className=\"sendbird-user-message--copy\"\n                          onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                        >\n                          Copy\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      isMessageSent && (\n                        <MenuItem\n                          onClick={() => {\n                            if (disabled) { return; }\n                            showEdit(true);\n                            closeDropdown();\n                          }}\n                        >\n                          Edit\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem\n                      onClick={() => {\n                        if (disabled) { return; }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__add-reaction\"\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-user-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-user-message__text-balloon\">\n          <div className=\"sendbird-user-message__text-balloon__inner\">\n            <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n              <Label\n                className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONCONTENT_1}\n              >\n                <MemoizedMessageText />\n              </Label>\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUserMessage({\n  userId,\n  message,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedMessageText,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className=\"sendbird-user-message--incoming\"\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-user-message--inner\">\n        <div className=\"sendbird-user-message--body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-user-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-user-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-user-message__text-balloon\">\n            <div className=\"sendbird-user-message__text-balloon__inner\">\n              <div className=\"sendbird-user-message__text-balloon__inner__text-place\">\n                <Label\n                  className=\"sendbird-user-message__text-balloon__inner__text-place__text\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  <MemoizedMessageText />\n                </Label>\n              </div>\n              {\n                showEmojiReactions && (\n                  <EmojiReactions\n                    className=\"sendbird-user-message__text-balloon__inner__emoji-reactions\"\n                    userId={userId}\n                    message={message}\n                    emojiAllMap={emojiAllMap}\n                    membersMap={membersMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"sendbird-user-message__right-padding\">\n          <div\n            className=\"sendbird-user-message__more\"\n            ref={parentContainRef}\n            style={{ top: chainTop ? '6px' : '22px' }}\n          >\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        parentRef={parentRefReactions}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        message={message}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    parentRef={parentRefMenus}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                  >\n                    <MenuItem\n                      className=\"sendbird-user-message--copy\"\n                      onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                    >\n                      Copy\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-user-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nIncomingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingUserMessage.defaultProps = {\n  message: {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nOutgoingUserMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  disabled: PropTypes.bool,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUserMessage.defaultProps = {\n  message: {},\n  resendMessage: noop,\n  showEdit: noop,\n  showRemove: noop,\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!message.messageType || message.messageType !== 'admin') { // change to use message.isAdminMessage()\n    return null;\n  }\n\n  const injectingClassName = (Array.isArray(className)) ? className : [className];\n  return (\n    <div className={[...injectingClassName, 'sendbird-admin-message'].join(' ')}>\n      <Label className=\"sendbird-admin-message__text\" type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport default {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n};\n","import React, { useContext, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport {\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n} from './util';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport {\n  isImage,\n  isVideo,\n  unSupported,\n} from '../FileViewer/types';\nimport {\n  getSenderName,\n  getSenderProfileUrl,\n} from '../../utils/utils';\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst noop = () => { };\n\nconst OUTGOING_THUMBNAIL_MESSAGE = 'sendbird-outgoing-thumbnail-message';\nconst INCOMING_THUMBNAIL_MESSAGE = 'sendbird-incoming-thumbnail-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function ThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  isByMe,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  return (\n    isByMe\n      ? (\n        <OutgoingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          disabled={disabled}\n          chainTop={chainTop}\n          showRemove={showRemove}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          resendMessage={resendMessage}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n      : (\n        <IncomingThumbnailMessage\n          userId={userId}\n          status={status}\n          message={message}\n          onClick={onClick}\n          chainTop={chainTop}\n          membersMap={membersMap}\n          chainBottom={chainBottom}\n          useReaction={useReaction}\n          emojiAllMap={emojiAllMap}\n          toggleReaction={toggleReaction}\n          memoizedEmojiListItems={memoizedEmojiListItems}\n        />\n      )\n  );\n}\n\nexport function OutgoingThumbnailMessage({\n  message = {},\n  userId,\n  disabled,\n  onClick,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={OUTGOING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__left-padding`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              isMessageSent && showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <MessageStatus\n                message={message}\n                status={status}\n                className={`${OUTGOING_THUMBNAIL_MESSAGE}-left-padding__status`}\n              />\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__body`}>\n          <div\n            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap`}\n          >\n            <div\n              className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n              tabIndex={0}\n              role=\"button\"\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                            url={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                            defaultComponent={(\n                              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                                <Icon\n                                  type={IconTypes.PLAY}\n                                  fillColor={IconColors.ON_BACKGROUND_2}\n                                  width=\"56px\"\n                                  height=\"56px\"\n                                />\n                              </div>\n                            )}\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video\n                            className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video`}\n                          >\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__video-icon`}\n                      type={IconTypes.PLAY}\n                      width=\"56px\"\n                      height=\"56px\"\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                    defaultComponent={(\n                      <div className={`${OUTGOING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                        <Icon\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${OUTGOING_THUMBNAIL_MESSAGE}-body__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingThumbnailMessage({\n  message = {},\n  userId,\n  onClick,\n  status,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const {\n    type,\n    url,\n    localUrl,\n    thumbnails,\n  } = message;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const reactionAddRef = useRef(null);\n  const avatarRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n\n  const showReactionAddButton = (useReaction && emojiAllMap && emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className={INCOMING_THUMBNAIL_MESSAGE}\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      {\n        !chainTop && (\n          <Label\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__sender-name`}\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message) || ''}\n          </Label>\n        )\n      }\n      <div className={`${INCOMING_THUMBNAIL_MESSAGE}--inner`}>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__body`}>\n          <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap`}>\n            {\n              !chainBottom && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <Avatar\n                      ref={avatarRef}\n                      onClick={() => {\n                        if (!disableUserProfile) {\n                          toggleDropdown();\n                        }\n                      }}\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__avatar`}\n                      src={getSenderProfileUrl(message)}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      /**\n                       * parentRef: For catching location(x, y) of MenuItems\n                       * parentContainRef: For toggling more options(menus & reactions)\n                       */\n                      parentRef={avatarRef}\n                      parentContainRef={avatarRef}\n                      closeDropdown={closeDropdown}\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                    >\n                      {\n                        renderUserProfile\n                          ? renderUserProfile({\n                            user: message.sender,\n                            close: closeDropdown,\n                          })\n                          : (\n                            <UserProfile\n                              user={message.sender}\n                              onSuccess={closeDropdown}\n                            />\n                          )\n                      }\n                    </MenuItems>\n                  )}\n                />\n              )\n            }\n            <div\n              className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap--inner`}\n              role=\"button\"\n              tabIndex={0}\n              onClick={isMessageSent ? () => onClick(true) : () => { }}\n              onKeyDown={isMessageSent ? () => onClick(true) : () => { }}\n            >\n              {\n                isVideo(type) && (\n                  <>\n                    {\n                      (thumbnailUrl)\n                        ? (\n                          <ImageRenderer\n                            className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}\n                            url={thumbnailUrl}\n                            alt=\"video/thumbnail\"\n                            width=\"404px\"\n                            height=\"280px\"\n                            defaultComponent={(\n                              <div className={`${INCOMING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--video`}>\n                                <Icon\n                                  type={IconTypes.PLAY}\n                                  fillColor={IconColors.ON_BACKGROUND_2}\n                                  width=\"56px\"\n                                  height=\"56px\"\n                                />\n                              </div>\n                            )}\n                          />\n                        )\n                        : (\n                          /* eslint-disable-next-line jsx-a11y/media-has-caption */\n                          <video className={`${INCOMING_THUMBNAIL_MESSAGE}__video`}>\n                            <source src={url || localUrl} type={type} />\n                          </video>\n                        )\n                    }\n                    <Icon\n                      className={`${INCOMING_THUMBNAIL_MESSAGE}__video-icon`}\n                      type={IconTypes.PLAY}\n                      width=\"56px\"\n                      height=\"56px\"\n                    />\n                  </>\n                )\n              }\n              {\n                isImage(type) && (\n                  <ImageRenderer\n                    className={`${INCOMING_THUMBNAIL_MESSAGE}__img`}\n                    url={thumbnailUrl || url || localUrl}\n                    alt=\"image/thumbnail\"\n                    width=\"404px\"\n                    height=\"280px\"\n                    defaultComponent={(\n                      <div className={`${INCOMING_THUMBNAIL_MESSAGE}__thumbnail-placeholder--image`}>\n                        <Icon\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )}\n                  />\n                )\n              }\n              {\n                unSupported(type) && (\n                  <div className={`${INCOMING_THUMBNAIL_MESSAGE}__other`}>\n                    {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n                  </div>\n                )\n              }\n              <div className={`${INCOMING_THUMBNAIL_MESSAGE}-body__wrap-overlay`} />\n            </div>\n            {\n              (useReaction && message.reactions && message.reactions.length > 0)\n              && (\n                <EmojiReactions\n                  className={`${INCOMING_THUMBNAIL_MESSAGE}__wrap__emoji-reactions`}\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_THUMBNAIL_MESSAGE}__right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className={`${INCOMING_THUMBNAIL_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div\n            className={`${INCOMING_THUMBNAIL_MESSAGE}__more`}\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                        width=\"24px\"\n                        height=\"24px\"\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  showRemove: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\nThumbnailMessage.defaultProps = {\n  isByMe: false,\n  disabled: false,\n  resendMessage: noop,\n  onClick: noop,\n  showRemove: noop,\n  status: '',\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nOutgoingThumbnailMessage.defaultProps = {\n  status: '',\n};\n\nIncomingThumbnailMessage.propTypes = {\n  message: PropTypes.shape({\n    type: PropTypes.string,\n    url: PropTypes.string,\n    localUrl: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\nIncomingThumbnailMessage.defaultProps = {\n  status: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport './index.scss';\nimport Avatar from '../Avatar/index';\nimport IconButton from '../IconButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport EmojiReactions from '../EmojiReactions';\n\nimport { getSenderProfileUrl, getSenderName, getMessageCreatedAt } from '../../utils/utils';\nimport {\n  truncate,\n  getIsSentFromStatus,\n} from './utils';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst MAX_TRUNCATE_LENGTH = 40;\nconst GROUPAING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\nconst noop = () => { };\n\nfunction checkFileType(fileUrl) {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport function OutgoingFileMessage({\n  message,\n  userId,\n  status,\n  showRemove,\n  disabled,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const url = message.plainUrl || message.url;\n  const openFileUrl = () => { window.open(url); };\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const isMessageSent = getIsSentFromStatus(status);\n  const showEmojiReactions = isMessageSent && useReaction && message.reactions\n    && (message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__outgoing\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__left-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      (message && message.isResendable && message.isResendable()) && (\n                        <MenuItem\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                        >\n                          Resend\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className=\"sendbird-file-message__status\">\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"sendbird-file-message__tooltip\">\n          <div className=\"sendbird-file-message__tooltip__inner\">\n            {\n              checkFileType(url)\n                ? (\n                  <div className=\"sendbird-file-message__tooltip__icon-box\">\n                    <Icon\n                      className=\"sendbird-file-message__tooltip__icon-box__icon\"\n                      type={checkFileType(url)}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </div>\n                )\n                : null\n            }\n            <TextButton\n              className=\"sendbird-file-message__tooltip__text\"\n              onClick={openFileUrl}\n              color={LabelColors.ONCONTENT_1}\n            >\n              <Label\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONCONTENT_1}\n              >\n                {truncate(message.name || message.url, MAX_TRUNCATE_LENGTH)}\n              </Label>\n            </TextButton>\n          </div>\n          {\n            showEmojiReactions && (\n              <EmojiReactions\n                className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                userId={userId}\n                message={message}\n                emojiAllMap={emojiAllMap}\n                membersMap={membersMap}\n                toggleReaction={toggleReaction}\n                memoizedEmojiListItems={memoizedEmojiListItems}\n              />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function IncomingFileMessage({\n  message,\n  userId,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) {\n  const openFileUrl = () => { window.open(message.url); };\n  const messageRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  const parentContainRef = useRef(null);\n  const avatarRef = useRef(null);\n  const reactionAddButtonRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      className=\"sendbird-file-message__incoming\"\n      ref={messageRef}\n      style={{\n        paddingTop: chainTop ? GROUPAING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPAING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className=\"sendbird-file-message--inner\">\n        <div className=\"sendbird-file-message__body\">\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className=\"sendbird-file-message__avatar\"\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className=\"sendbird-file-message__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className=\"sendbird-file-message__tooltip\">\n            <div className=\"sendbird-file-message__tooltip__inner\">\n              {\n                checkFileType(message.url)\n                  ? (\n                    <div className=\"sendbird-file-message__tooltip__icon-box\">\n                      <Icon\n                        className=\"sendbird-file-message__tooltip__icon-box__icon\"\n                        type={checkFileType(message.url)}\n                        fillColor={IconColors.PRIMARY}\n                        width=\"24px\"\n                        height=\"24px\"\n                      />\n                    </div>\n                  )\n                  : null\n              }\n              <TextButton\n                className=\"sendbird-file-message__tooltip__text\"\n                onClick={openFileUrl}\n              >\n                <Label\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {truncate(message.name || message.url, MAX_TRUNCATE_LENGTH)}\n                </Label>\n              </TextButton>\n            </div>\n            {\n              (useReaction && message.reactions && (message.reactions.length > 0)) && (\n                <EmojiReactions\n                  className=\"sendbird-file-message__tooltip__emoji-reactions\"\n                  userId={userId}\n                  message={message}\n                  emojiAllMap={emojiAllMap}\n                  membersMap={membersMap}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              )\n            }\n          </div>\n        </div>\n        <div className=\"sendbird-file-message__right-padding\">\n          <div\n            className=\"sendbird-file-message__more\"\n            ref={parentContainRef}\n          >\n            {\n              showReactionAddButton && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={reactionAddButtonRef}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                        setMenuDisplaying(true);\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(close) => {\n                    const closeDropdown = () => {\n                      close();\n                      setMenuDisplaying(false);\n                    };\n                    return (\n                      <MemoizedEmojiListItems\n                        message={message}\n                        parentRef={reactionAddButtonRef}\n                        parentContainRef={parentContainRef}\n                        closeDropdown={closeDropdown}\n                        spaceFromTrigger={{ y: 2 }}\n                      />\n                    );\n                  }}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <Label\n                className=\"sendbird-file-message__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  status: PropTypes.string,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  useReaction: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingFileMessage.defaultProps = {\n  status: '',\n  showRemove: noop,\n  resendMessage: noop,\n  message: {},\n  userId: '',\n  disabled: false,\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nIncomingFileMessage.propTypes = {\n  message: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.array,\n    PropTypes.object,\n  ])),\n  userId: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nIncomingFileMessage.defaultProps = {\n  message: {},\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n};\n\nconst MessageSwitch = ({\n  message,\n  userId,\n  disabled,\n  isByMe,\n  showRemove,\n  status,\n  resendMessage,\n  useReaction,\n  emojiAllMap,\n  membersMap,\n  toggleReaction,\n  memoizedEmojiListItems,\n  chainTop,\n  chainBottom,\n}) => (\n  <div className={`sendbird-file-message${isByMe ? '--outgoing' : '--incoming'}`}>\n    {\n      isByMe\n        ? (\n          <OutgoingFileMessage\n            message={message}\n            userId={userId}\n            disabled={disabled}\n            showRemove={showRemove}\n            status={status}\n            resendMessage={resendMessage}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n        : (\n          <IncomingFileMessage\n            userId={userId}\n            message={message}\n            useReaction={useReaction}\n            emojiAllMap={emojiAllMap}\n            membersMap={membersMap}\n            toggleReaction={toggleReaction}\n            memoizedEmojiListItems={memoizedEmojiListItems}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n    }\n  </div>\n);\n\n\nMessageSwitch.propTypes = {\n  message: PropTypes.shape({}),\n  userId: PropTypes.string,\n  isByMe: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  status: PropTypes.string.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nMessageSwitch.defaultProps = {\n  message: {},\n  isByMe: false,\n  disabled: false,\n  showRemove: noop,\n  resendMessage: noop,\n  userId: '',\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  toggleReaction: noop,\n  memoizedEmojiListItems: () => '',\n  chainTop: false,\n  chainBottom: false,\n};\n\nexport default MessageSwitch;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import format from 'date-fns/format';\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport default {\n  getMessageCreatedAt,\n};\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport UserProfile from '../UserProfile';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport MessageStatus from '../MessageStatus';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport IconButton from '../IconButton';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMouseHover from '../../hooks/onMouseHover';\n\nconst CLASS_NAME = 'sendbird-unknown-message';\nconst GROUPING_PADDING = '1px';\nconst NORMAL_PADDING = '8px';\n\nexport default function UnknownMessage({\n  message,\n  isByMe,\n  status,\n  className,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.unshift(CLASS_NAME);\n  injectingClassName.push(`${CLASS_NAME}${isByMe ? '--outgoing' : '--incoming'}`);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      {\n        isByMe\n          ? (\n            <OutgoingUnknownMessage\n              status={status}\n              message={message}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              chainBottom={chainBottom}\n            />\n          )\n          : (\n            <IncomingUnknownMessage\n              message={message}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          )\n      }\n    </div>\n  );\n}\n\nUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  isByMe: PropTypes.bool,\n  status: PropTypes.string,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nUnknownMessage.defaultProps = {\n  isByMe: false,\n  status: '',\n  className: '',\n  showRemove: () => { },\n  chainTop: false,\n  chainBottom: false,\n};\n\nfunction OutgoingUnknownMessage({\n  message,\n  status,\n  showRemove,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-outgoing-unknown-message';\n  const messageRef = useRef(null);\n  const parentContainRef = useRef(null);\n  const menuRef = useRef(null);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n  const [menuDisplaying, setMenuDisplaying] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}--left-padding`}>\n          <div\n            className={`${className}__more`}\n            ref={parentContainRef}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${className}__more__menu`}\n                  ref={menuRef}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                    setMenuDisplaying(true);\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(close) => {\n                const closeDropdown = () => {\n                  close();\n                  setMenuDisplaying(false);\n                };\n                return (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={menuRef}\n                    parentContainRef={parentContainRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    <MenuItem\n                      onClick={() => { showRemove(true); closeDropdown(); }}\n                    >\n                      Delete\n                    </MenuItem>\n                  </MenuItems>\n                );\n              }}\n            />\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive || menuDisplaying) && (\n              <div className={`${className}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingUnknownMessage({\n  message,\n  chainTop,\n  chainBottom,\n}) {\n  const className = 'sendbird-incoming-unknown-message';\n  const { sender } = message;\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n  return (\n    <div\n      className={className}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORMAL_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORMAL_PADDING,\n      }}\n    >\n      <div className={`${className}--inner`}>\n        <div className={`${className}__left`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${className}__left__sender-profile-image`}\n                    src={sender.profileUrl}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    /**\n                     * parentRef: For catching location(x, y) of MenuItems\n                     * parentContainRef: For toggling more options(menus & reactions)\n                     */\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className={`${className}__body`}>\n          {\n            !chainTop && (\n              <Label\n                className={`${className}__body__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {sender.nickname || stringSet.NO_NAME}\n              </Label>\n            )\n          }\n          <div className={`${className}__body__text-balloon`}>\n            <Label\n              className={`${className}__body__text-balloon__header`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n            </Label>\n            <Label\n              className={`${className}__body__text-balloon__description`}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n            </Label>\n          </div>\n        </div>\n        <div className={`${className}--right-padding`}>\n          {\n            !chainBottom && (\n              <Label\n                className={`${className}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {utils.getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutgoingUnknownMessage.propTypes = {\n  message: PropTypes.shape({}).isRequired,\n  status: PropTypes.string.isRequired,\n  showRemove: PropTypes.func,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingUnknownMessage.defaultProps = {\n  showRemove: () => { },\n};\n\nIncomingUnknownMessage.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      nickname: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n  }).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","export const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const OG_MESSAGE = 'sendbird-og-message';\nexport const OUTGOING_OG_MESSAGE = 'sendbird-outgoing-og-message';\nexport const INCOMING_OG_MESSAGE = 'sendbird-incoming-og-message';\nexport const generateMockMessage = (process) => {\n  const message = {\n    message: 'go to this link sendbird.com it will be usefull to you!!',\n    ogMetaData: {\n      title: 'This is the TITLE',\n      description: 'I\\'m description I\\'m description I\\'m description I\\'m description ',\n      url: 'https://sendbird.com/',\n      defaultImage: {\n        url: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n        alt: 'test',\n      },\n    },\n    sender: {\n      profileUrl: 'https://static.sendbird.com/sample/profiles/profile_12_512px.png',\n      nickname: 'Hoonying',\n    },\n    createdAt: 2000000,\n  };\n  if (process && typeof process === 'function') {\n    return process(message);\n  }\n  return message;\n};\n\nexport default {\n  URL_REG,\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n  generateMockMessage,\n};\n","import format from 'date-fns/format';\nimport MessageStatusType from '../MessageStatus/type';\n\nexport const createUrlTester = (regexp) => (text) => regexp.test(text);\n\nexport const getIsSentFromStatus = (status) => (\n  status === MessageStatusType.SENT\n  || status === MessageStatusType.DELIVERED\n  || status === MessageStatusType.READ\n);\n\nexport const copyToClipboard = (text) => {\n  try {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path\n      // to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData('Text', text);\n    }\n    if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n      const textarea = document.createElement('textarea');\n      textarea.textContent = text;\n      textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n    return false;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const checkOGIsEnalbed = (message) => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n\nexport default {\n  getSenderName,\n  createUrlTester,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { createUrlTester } from './utils';\nimport { URL_REG } from './const';\n\nconst isUrl = createUrlTester(URL_REG);\n\nexport default function useMemoizedMessageText({\n  message,\n  updatedAt,\n  className,\n  incoming = false,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const WORD_TYPOGRAPHY = LabelTypography.BODY_1;\n  const WORD_COLOR = incoming ? LabelColors.ONBACKGROUND_1 : LabelColors.ONCONTENT_1;\n  const EDITED_COLOR = incoming ? LabelColors.ONBACKGROUND_2 : LabelColors.ONCONTENT_2;\n  return useMemo(() => () => {\n    const splitMessage = message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={className}\n              src={word}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={className}\n              type={WORD_TYPOGRAPHY}\n              color={WORD_COLOR}\n            >\n              {word}\n            </Label>\n          )\n      ));\n    if (updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={className}\n          type={WORD_TYPOGRAPHY}\n          color={EDITED_COLOR}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, updatedAt, className]);\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  OG_MESSAGE,\n  OUTGOING_OG_MESSAGE,\n  INCOMING_OG_MESSAGE,\n} from './const';\nimport {\n  getSenderName,\n  copyToClipboard,\n  checkOGIsEnalbed,\n  getMessageCreatedAt,\n  getIsSentFromStatus,\n  getSenderProfileUrl,\n} from './utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport useMemoizedMessageText from './memoizedMessageText';\nimport './index.scss';\n\nimport UserProfile from '../UserProfile';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport MessageStatus from '../MessageStatus';\nimport EmojiReactions from '../EmojiReactions';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ContextMenu, { MenuItem, MenuItems } from '../ContextMenu';\nimport Avatar from '../Avatar/index';\n\nimport useMouseHover from '../../hooks/onMouseHover';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst GROUPING_PADDING = '1px';\nconst NORAML_PADDING = '8px';\n\nconst OGMessageSwitch = ({\n  isByMe,\n  userId,\n  status,\n  message,\n  disabled,\n  showEdit,\n  chainTop,\n  className,\n  membersMap,\n  showRemove,\n  useReaction,\n  emojiAllMap,\n  chainBottom,\n  resendMessage,\n  toggleReaction,\n  memoizedEmojiListItems,\n}) => {\n  const { ogMetaData } = message;\n  const injectingClassName = Array.isArray(className) ? className : [className];\n\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  const outoingMemoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-og-message-word',\n  });\n  const incomingMemoizedMessageText = useMemoizedMessageText({\n    message: message.message,\n    updatedAt: message.updatedAt,\n    className: 'sendbird-og-message-word',\n    incoming: true,\n  });\n\n  return (\n    <div className={`${OG_MESSAGE} ${OG_MESSAGE}${isByMe ? '--outgoing' : '--incoming'} ${injectingClassName.join(' ')}`}>\n      {\n        isByMe\n          ? (\n            <OutgoingOGMessage\n              status={status}\n              userId={userId}\n              message={message}\n              disabled={disabled}\n              openLink={openLink}\n              showEdit={showEdit}\n              chainTop={chainTop}\n              showRemove={showRemove}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={outoingMemoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n          : (\n            <IncomingOGMessage\n              userId={userId}\n              message={message}\n              openLink={openLink}\n              chainTop={chainTop}\n              membersMap={membersMap}\n              chainBottom={chainBottom}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              toggleReaction={toggleReaction}\n              memoizedMessageText={incomingMemoizedMessageText}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nfunction OutgoingOGMessage(props) {\n  const {\n    status,\n    userId,\n    message,\n    disabled,\n    openLink,\n    showEdit,\n    chainTop,\n    showRemove,\n    membersMap,\n    chainBottom,\n    emojiAllMap,\n    useReaction,\n    resendMessage,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n  const messageRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const isMessageSent = getIsSentFromStatus(status);\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={OUTGOING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${OUTGOING_OG_MESSAGE}--inner`}>\n        <div className={`${OUTGOING_OG_MESSAGE}--left-padding`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  className={`${OUTGOING_OG_MESSAGE}__more__menu`}\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  // for catching location(x, y) of MenuItems\n                  parentContainRef={parentContainRef}\n                  // for toggling more options(menus & reactions)\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        className={`${OUTGOING_OG_MESSAGE}__more__menu__copy`}\n                        onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isMessageSent && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    (message && message.isResendable && message.isResendable()) && (\n                      <MenuItem\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) { return; }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n            {\n              (isMessageSent && useReaction && (emojiAllMap.size > 0))\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className={`${OUTGOING_OG_MESSAGE}__more__add-reaction`}\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      message={message}\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n          </div>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <div className={`${OUTGOING_OG_MESSAGE}__message-status`}>\n                <MessageStatus\n                  message={message}\n                  status={status}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className={`${OUTGOING_OG_MESSAGE}--body`}>\n          <div className={`${OUTGOING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt}\n                  className={`${OUTGOING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${OUTGOING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.THUMBNAIL_NONE}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${OUTGOING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${OUTGOING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__title`}>\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${OUTGOING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <Label\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_2}\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__url`}\n                >\n                  {ogMetaData.url}\n                </Label>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${OUTGOING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction IncomingOGMessage(props) {\n  const {\n    userId,\n    message,\n    openLink,\n    chainTop,\n    membersMap,\n    chainBottom,\n    useReaction,\n    emojiAllMap,\n    toggleReaction,\n    memoizedMessageText,\n    memoizedEmojiListItems,\n  } = props;\n  const {\n    ogMetaData,\n  } = message;\n  const {\n    defaultImage,\n  } = ogMetaData;\n  const { stringSet } = useContext(LocalizationContext);\n  const MemoizedMessageText = memoizedMessageText;\n  const MemoizedEmojiListItems = memoizedEmojiListItems;\n\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const parentRefReactions = useRef(null);\n  const parentRefMenus = useRef(null);\n  const parentContainRef = useRef(null);\n\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = React.useContext(UserProfileContext);\n\n  const [mousehover, setMousehover] = useState(false);\n  const [moreActive, setMoreActive] = useState(false);\n\n  const showEmojiReactions = (useReaction && message.reactions && message.reactions.length > 0);\n  const showReactionAddButton = useReaction && emojiAllMap && (emojiAllMap.size > 0);\n\n  const handleMoreIconClick = () => {\n    setMoreActive(true);\n  };\n  const handleMoreIconBlur = () => {\n    setMoreActive(false);\n  };\n\n  useMouseHover({\n    ref: messageRef,\n    setHover: setMousehover,\n  });\n\n  return (\n    <div\n      ref={messageRef}\n      className={INCOMING_OG_MESSAGE}\n      style={{\n        paddingTop: chainTop ? GROUPING_PADDING : NORAML_PADDING,\n        paddingBottom: chainBottom ? GROUPING_PADDING : NORAML_PADDING,\n      }}\n    >\n      <div className={`${INCOMING_OG_MESSAGE}--inner`}>\n        <div className={`${INCOMING_OG_MESSAGE}--body`}>\n          {\n            !chainBottom && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    ref={avatarRef}\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                    className={`${INCOMING_OG_MESSAGE}__avatar`}\n                    src={getSenderProfileUrl(message)}\n                    width=\"28px\"\n                    height=\"28px\"\n                    alt=\"sender-profile-image\"\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    // for catching location(x, y) of MenuItems\n                    parentContainRef={avatarRef}\n                    // for toggling more options(menus & reactions)\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? renderUserProfile({\n                          user: message.sender,\n                          close: closeDropdown,\n                        })\n                        : (\n                          <UserProfile\n                            user={message.sender}\n                            onSuccess={closeDropdown}\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n          {\n            !chainTop && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sender-name`}\n                type={LabelTypography.CAPTION_2}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getSenderName(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__text-balloon`}>\n            <MemoizedMessageText />\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__thumbnail ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__thumbnail--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              defaultImage && (\n                <ImageRenderer\n                  url={defaultImage.url || ''}\n                  alt={defaultImage.alt || ''}\n                  className={`${INCOMING_OG_MESSAGE}__thumbnail__image`}\n                  width=\"320px\"\n                  height=\"180px\"\n                  defaultComponent={(\n                    <div className={`${INCOMING_OG_MESSAGE}__thumbnail__image__placeholder`}>\n                      <Icon\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.THUMBNAIL_NONE}\n                      />\n                    </div>\n                  )}\n                />\n              )\n            }\n          </div>\n          <div\n            className={`${INCOMING_OG_MESSAGE}__og-tag ${checkOGIsEnalbed(message) ? '' : `${INCOMING_OG_MESSAGE}__og-tag--disabled`}`}\n            onClick={openLink}\n            onKeyDown={openLink}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {\n              ogMetaData.title && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__title`}>\n\n                  <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n                    {ogMetaData.title}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.description && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__description`}>\n                  <Label\n                    type={LabelTypography.BODY_2}\n                    color={LabelColors.ONBACKGROUND_1}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__description__label`}\n                  >\n                    {ogMetaData.description}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              ogMetaData.url && (\n                <div className={`${INCOMING_OG_MESSAGE}__og-tag__url`}>\n                  <Label\n                    type={LabelTypography.CAPTION_3}\n                    color={LabelColors.ONBACKGROUND_2}\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__url__label`}\n                  >\n                    {ogMetaData.url}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              showEmojiReactions\n              && (\n                <div\n                  className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions--wrapper`}\n                  onClick={(event) => event.stopPropagation()}\n                  onKeyDown={(event) => event.stopPropagation()}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <EmojiReactions\n                    className={`${INCOMING_OG_MESSAGE}__og-tag__emoji-reactions`}\n                    userId={userId}\n                    message={message}\n                    membersMap={membersMap}\n                    emojiAllMap={emojiAllMap}\n                    toggleReaction={toggleReaction}\n                    memoizedEmojiListItems={memoizedEmojiListItems}\n                  />\n                </div>\n              )\n            }\n          </div>\n        </div>\n        <div className={`${INCOMING_OG_MESSAGE}--right-padding`}>\n          {\n            !chainBottom && !(mousehover || moreActive) && (\n              <Label\n                className={`${INCOMING_OG_MESSAGE}__sent-at`}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )\n          }\n          <div className={`${INCOMING_OG_MESSAGE}__more`} ref={parentContainRef}>\n            {\n              showReactionAddButton\n              && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      ref={parentRefReactions}\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                        handleMoreIconClick();\n                      }}\n                      onBlur={() => {\n                        handleMoreIconBlur();\n                      }}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.EMOJI_MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MemoizedEmojiListItems\n                      parentRef={parentRefReactions}\n                      parentContainRef={parentContainRef}\n                      closeDropdown={closeDropdown}\n                      message={message}\n                      spaceFromTrigger={{ y: 2 }}\n                    />\n                  )}\n                />\n              )\n            }\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <IconButton\n                  ref={parentRefMenus}\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                    handleMoreIconClick();\n                  }}\n                  onBlur={() => {\n                    handleMoreIconBlur();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={parentRefMenus}\n                  parentContainRef={parentContainRef}\n                  closeDropdown={closeDropdown}\n                >\n                  <MenuItem\n                    className={`${INCOMING_OG_MESSAGE}__more__menu__copy`}\n                    onClick={() => { copyToClipboard(message.message); closeDropdown(); }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                  </MenuItem>\n                </MenuItems>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OGMessageSwitch;\n\nconst noop = () => { };\n\nOGMessageSwitch.propTypes = {\n  isByMe: PropTypes.bool.isRequired,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  status: PropTypes.string,\n  disabled: PropTypes.bool,\n  showEdit: PropTypes.func,\n  showRemove: PropTypes.func,\n  resendMessage: PropTypes.func,\n  toggleReaction: PropTypes.func,\n  membersMap: PropTypes.instanceOf(Map),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  memoizedEmojiListItems: PropTypes.func,\n  chainTop: PropTypes.bool,\n  chainBottom: PropTypes.bool,\n};\n\nOGMessageSwitch.defaultProps = {\n  className: '',\n  status: '',\n  disabled: false,\n  showEdit: noop,\n  showRemove: noop,\n  resendMessage: noop,\n  toggleReaction: noop,\n  membersMap: new Map(),\n  emojiAllMap: new Map(),\n  memoizedEmojiListItems: noop,\n  chainTop: false,\n  chainBottom: false,\n};\n\nOutgoingOGMessage.propTypes = {\n  status: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n    isResendable: PropTypes.func,\n    errorCode: PropTypes.number,\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  openLink: PropTypes.func.isRequired,\n  showEdit: PropTypes.func.isRequired,\n  showRemove: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n\nOutgoingOGMessage.defaultProps = {\n  status: '',\n};\n\nIncomingOGMessage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    sender: PropTypes.shape({}),\n    ogMetaData: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n      defaultImage: PropTypes.shape({\n        url: PropTypes.string,\n        alt: PropTypes.string,\n      }),\n    }),\n    reactions: PropTypes.array,\n    updatedAt: PropTypes.number,\n  }).isRequired,\n  openLink: PropTypes.func.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  toggleReaction: PropTypes.func.isRequired,\n  memoizedMessageText: PropTypes.func.isRequired,\n  memoizedEmojiListItems: PropTypes.func.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n};\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Message from '../../../ui/Message';\nimport AdminMessage from '../../../ui/AdminMessage';\nimport ThumbnailMessage from '../../../ui/ThumbnailMessage';\nimport FileMessage from '../../../ui/FileMessage';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport UnknownMessage from '../../../ui/UnknownMessage';\nimport OGMessage from '../../../ui/OGMessage';\n\nimport { MessageTypes, getMessageType } from '../types';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  deleteMessage,\n  updateMessage,\n  status,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  emojiAllMap,\n  membersMap,\n  highLightedMessageId,\n  toggleReaction,\n  memoizedEmojiListItems,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // Let's change this to object type on next major version up\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={`\n          sendbird-msg-hoc sendbird-msg--scroll-ref\n          ${isAnimated ? 'sendbird-msg-hoc__highlighted' : ''}\n        `}\n      >\n        {/* date-seperator */}\n        {\n          hasSeperator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy')}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={`\n        sendbird-msg-hoc sendbird-msg--scroll-ref\n        ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n      `}\n    >\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: <AdminMessage message={message} />,\n          [MessageTypes.FILE]: (\n            <FileMessage\n              message={message}\n              userId={userId}\n              disabled={disabled}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.OG]: (\n            <OGMessage\n              message={message}\n              status={status}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              disabled={disabled}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.THUMBNAIL]: (\n            <ThumbnailMessage\n              disabled={disabled}\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              onClick={setShowFileViewer}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n          [MessageTypes.USER]: (\n            <Message\n              message={message}\n              disabled={disabled}\n              isByMe={isByMe}\n              userId={userId}\n              showEdit={setShowEdit}\n              showRemove={setShowRemove}\n              resendMessage={resendMessage}\n              status={status}\n              useReaction={useReaction}\n              emojiAllMap={emojiAllMap}\n              membersMap={membersMap}\n              toggleReaction={toggleReaction}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n              chainTop={chainTop}\n              chainBottom={chainBottom}\n            />\n          ),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateSeperator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeperator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  emojiAllMap: PropTypes.instanceOf(Map).isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeperator: false,\n  disabled: false,\n  highLightedMessageId: null,\n  status: '',\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport {\n  getParsedStatus,\n  compareMessagesForGrouping,\n} from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      readStatus,\n      membersMap,\n      allMessages,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeperator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      status={readStatus[m.messageId] || getParsedStatus(m, currentGroupChannel)}\n                      // show status for pending/failed messages\n                      message={m}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      editDisabled={editDisabled}\n                      hasSeperator={hasSeperator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.CONTENT}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(renderProps: RenderGroupChannelMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n  isOnline,\n  initialized,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={(utils.isDisabledBecauseFrozen(channel)\n        && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n        || (utils.isDisabledBecauseMuted(channel)\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED\n        )\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className=\"sendbird-conversation__connection-status\"\n    >\n      <Label type={LabelTypography.BODY_2} color={LabelColors.ONBACKGROUND_2}>\n        { stringSet.TRYING_TO_CONNECT }\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        height=\"14px\"\n        width=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getOthersLastSeenAt = (channel) => {\n  if (!channel || !channel.getReadStatus || !channel.members || channel.members.length !== 2) {\n    return '';\n  }\n  const lastSeenList = [...Object.values(channel.getReadStatus())];\n  const lastSeenAt = lastSeenList.length > 0\n    ? lastSeenList[0].last_seen_at\n    : 0;\n  if (lastSeenAt === 0) {\n    return '';\n  }\n  return prettyDate(lastSeenAt);\n};\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AutoRefresh({\n  repeatFunc,\n}) {\n  const [label, setLabel] = useState(repeatFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (label !== repeatFunc()) {\n        setLabel(repeatFunc());\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (<div className=\"sendbird-repeat-text\">{label}</div>);\n}\n\nAutoRefresh.propTypes = {\n  repeatFunc: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport AutoRefresh from '../AutoRefresh';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => {};\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isActive,\n    isMuted,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n    theme,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        {\n          (typeof isActive === 'string' && isActive === 'true') || (typeof isActive === 'boolean' && isActive)\n            ? <div className=\"sendbird-chat-header__active\" />\n            : null\n        }\n        <Label\n          className=\"sendbird-chat-header__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {\n            subTitle\n            || <AutoRefresh repeatFunc={() => utils.getOthersLastSeenAt(currentGroupChannel)} />\n          }\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          (typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted)\n            ? <Icon className=\"sendbird-chat-header__mute\" type={IconTypes.NOTIFICATIONS_OFF_FILLED} width=\"24px\" height=\"24px\" />\n            : null\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon type={IconTypes.SEARCH} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon type={IconTypes.INFO} fillColor={IconColors.PRIMARY} width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  theme: PropTypes.string,\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  onSearchClick: PropTypes.func,\n  showSearchIcon: PropTypes.bool,\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isActive: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  title: '',\n  theme: 'light',\n  subTitle: '',\n  isActive: false,\n  onSearchClick: noop,\n  showSearchIcon: false,\n  isMuted: false,\n  currentUser: {},\n  onActionClick: () => { },\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useSetReadStatus from './hooks/useSetReadStatus';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n    },\n  );\n\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // to create initial read status\n  useSetReadStatus(\n    { allMessages, currentGroupChannel },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isActive={false}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  currentGroupChannel.markAsRead();\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              allMessages={allMessages}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","SET_READ_STATUS","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","message","isUserMessage","messageType","ogMetaData","isAdminMessage","isFileMessage","isImage","type","isVideo","UNDEFINED","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","url","channelActions","payload","fromSelector","messageId","getParsedStatus","currentGroupChannel","requestState","MessageStatusType","SENT","unreadCount","getReadReceipt","READ","isDelivered","getDeliveryReceipt","DELIVERED","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","readStatus","unreadSince","isInvalid","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","indexOf","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByMessageId","messageListParams","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","nextResultSize","getMessagesByTimestamp","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","useSetReadStatus","setReadStatus","allReadStatus","reduce","accumulator","handler","handleMessageStatus","c","onDeliveryReceiptUpdated","onReadReceiptUpdated","handlerId","ReactionButton","React","forwardRef","props","ref","children","onClick","selected","className","injectingClassName","Array","isArray","join","slice","propTypes","PropTypes","element","isRequired","func","bool","oneOfType","number","string","arrayOf","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","ImageRenderer","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","MessageStatus","status","label","Label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","icon","Loader","SPINNER","IconColors","PRIMARY","DONE","DONE_ALL","ERROR","objectOf","array","object","ReactionBadge","count","isAdd","unshift","ONBACKGROUND_1","CLASS_NAME","Tooltip","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","EmojiReactions","emojiAllMap","membersMap","memoizedEmojiListItems","MemoizedEmojiListItems","imageWidth","emojiReactionAddRef","messageReactions","useContext","LocalizationContext","stringSet","emojiUrl","get","reactedUserCount","reactedByMe","nicknames","currentUserId","TOOLTIP__UNKOWN_USER","stringSetForMe","TOOLTIP__AND_YOU","TOOLTIP__YOU","size","ContextMenu","toggleDropdown","ON_BACKGROUND_3","EMOJI_MORE","y","shape","instanceOf","useMemoizedMessageText","updatedAt","incoming","WORD_TYPOGRAPHY","BODY_1","EDITED_COLOR","ONCONTENT_2","splitMessage","split","matchedMessage","word","MESSAGE_EDITED","MOUSE_ENTER","MOUSE_LEAVE","useMouseHover","setHover","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","noop","GROUPING_PADDING","NORMAL_PADDING","Message","isByMe","resendMessage","disabled","showEdit","showRemove","chainTop","chainBottom","outgoingMemoizedMessageText","incomingMemoizedMessageText","OutgoingUserMessage","memoizedMessageText","MemoizedMessageText","messageRef","parentRefReactions","parentRefMenus","isMessageSent","getIsSentFromStatus","mousehover","setMousehover","moreActive","setMoreActive","menuDisplaying","setMenuDisplaying","handleMoreIconClick","handleMoreIconBlur","paddingTop","paddingBottom","IconButton","MORE","CONTENT_INVERSE","close","MenuItems","MenuItem","copyToClipboard","ONCONTENT_1","IncomingUserMessage","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","showReactionAddButton","showEmojiReactions","Avatar","getSenderProfileUrl","user","UserProfile","CAPTION_2","getSenderName","top","AdminMessage","OUTGOING_THUMBNAIL_MESSAGE","INCOMING_THUMBNAIL_MESSAGE","ThumbnailMessage","OutgoingThumbnailMessage","thumbnails","thumbnailUrl","menuRef","reactionAddRef","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","PLAY","ON_BACKGROUND_2","PHOTO","unSupported","UNKNOWN__UNKNOWN_MESSAGE_TYPE","IncomingThumbnailMessage","MAX_TRUNCATE_LENGTH","GROUPAING_PADDING","checkFileType","fileUrl","result","imageFile","audioFile","test","FILE_DOCUMENT","FILE_AUDIO","OutgoingFileMessage","plainUrl","openFileUrl","window","open","reactionAddButtonRef","TextButton","truncate","IncomingFileMessage","MessageSwitch","RemoveMessage","onCloseModal","onDeleteMessage","Modal","MODAL__DELETE_MESSAGE__TITLE","UnknownMessage","OutgoingUnknownMessage","UNKNOWN__CANNOT_READ_MESSAGE","IncomingUnknownMessage","profileUrl","NO_NAME","URL_REG","OG_MESSAGE","OUTGOING_OG_MESSAGE","INCOMING_OG_MESSAGE","createUrlTester","regexp","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","friendName","checkOGIsEnalbed","isUrl","WORD_COLOR","LinkLabel","NORAML_PADDING","OGMessageSwitch","openLink","outoingMemoizedMessageText","OutgoingOGMessage","defaultImage","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","alt","THUMBNAIL_NONE","title","SUBTITLE_2","description","BODY_2","event","stopPropagation","IncomingOGMessage","errorCode","MessageHoc","editDisabled","hasSeperator","updateMessage","highLightedMessageId","renderCustomMessage","setShowEdit","setShowRemove","showFileViewer","setShowFileViewer","isAnimated","setIsAnimated","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","DateSeparator","MessageInput","FileMessage","OGMessage","RemoveMessageModal","FileViewer","isDateSeperator","ConversationScroll","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","renderChatItem","useMessageGrouping","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","MessageHOC","CHEVRON_DOWN","CONTENT","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","setHandlerId","typingMembers","setTypingMembers","newHandlerId","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","_a","onSendMessage","onFileUpload","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","prettyDate","date","formatDistanceToNowStrict","addSuffix","getOthersLastSeenAt","getReadStatus","lastSeenList","values","lastSeenAt","last_seen_at","getChannelTitle","LabelStringSet","NO_TITLE","NO_MEMBERS","AutoRefresh","repeatFunc","setLabel","interval","setInterval","clearInterval","ChatHeader","currentUser","subTitle","isActive","isMuted","showSearchIcon","onSearchClick","onActionClick","theme","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setIntialTimeStamp","setHighLightedMessageId","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,cAAc,GAAG,gBAAvB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,wBAAwB,GAAG,0BAAjC;AAEA,IAAMC,wBAAwB,GAAG,0BAAjC;AACA,IAAMC,yBAAyB,GAAG,2BAAlC;AAEA,IAAMC,oBAAoB,GAAG,sBAA7B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,sBAAsB,GAAG,wBAA/B;AAEA,IAAMC,sBAAsB,GAAG,wBAA/B;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,YAAY,GAAG,cAArB;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,eAAe,GAAG,iBAAxB;;ACzBA,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,IAAI,EAAE,MAFoB;AAG1BC,EAAAA,IAAI,EAAE,MAHoB;AAI1BC,EAAAA,SAAS,EAAE,WAJe;AAK1BC,EAAAA,EAAE,EAAE;AALsB,CAArB;AAQP,AAAO,IAAMC,oBAAoB,GAAG;AAClCC,EAAAA,IAAI,EAAE,MAD4B;AAElCC,EAAAA,SAAS,EAAE,WAFuB;AAGlCC,EAAAA,MAAM,EAAE,QAH0B;AAIlCC,EAAAA,OAAO,EAAE;AAJyB,CAA7B;AAOP,AAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AACzC,MAAKA,OAAO,CAACC,aAAR,IAAyBD,OAAO,CAACC,aAAR,EAA1B,IAAsDD,OAAO,CAACE,WAAR,KAAwB,MAAlF,EAA0F;AACxF,WAAQF,OAAO,CAACG,UAAT,GACHf,YAAY,CAACK,EADV,GAEHL,YAAY,CAACE,IAFjB;AAGD;;AACD,MAAIU,OAAO,CAACI,cAAR,IAA0BJ,OAAO,CAACI,cAAR,EAA9B,EAAwD;AACtD,WAAOhB,YAAY,CAACC,KAApB;AACD;;AACD,MAAKW,OAAO,CAACK,aAAR,IAAyBL,OAAO,CAACK,aAAR,EAA1B,IAAsDL,OAAO,CAACE,WAAR,KAAwB,MAAlF,EAA0F;AACxF,WAAQI,eAAO,CAACN,OAAO,CAACO,IAAT,CAAP,IAAyBC,eAAO,CAACR,OAAO,CAACO,IAAT,CAAjC,GACHnB,YAAY,CAACI,SADV,GAEHJ,YAAY,CAACG,IAFjB;AAGD;;AACD,SAAO,EAAP;AACD,CAfM;;ACVP,IAAMkB,SAAS,GAAG,WAAlB;IACQb,YAA+BF,qBAA/BE;IAAWC,SAAoBH,qBAApBG;IAAQC,UAAYJ,qBAAZI;AAE3B,AAAO,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,GAAmB;AAAA,MAAlBC,SAAkB,uEAAN,CAAM;AAC/C,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAGF,SAAnB;;AACA,MAAIE,UAAU,GAAGD,SAAjB,EAA4B;AAC1B;AACD;;AACD,MAAI;AACF,QAAME,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,0CAAvB,CAAlB,CADE;;AAGFF,IAAAA,SAAS,CAACG,SAAV,GAAsBH,SAAS,CAACI,YAAhC;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,UAAU,CAAC,YAAM;AACfV,MAAAA,cAAc,CAACG,UAAU,GAAG,CAAd,CAAd;AACD,KAFS,EAEP,MAAMA,UAFC,CAAV;AAGD;AACF,CAfM;AAiBP,AAAO,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAgB;AACjDA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,CAAD,EAAO;AACxB,QAAI;AACFA,MAAAA,CAAC,CAACC,MAAF;AACD,KAFD,CAEE,gBAAM;AAEP;AACF,GAND;AAOD,CARM;AAUP,AAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaC,MAAb,EAAqBC,UAArB,EAAoC;AAC/D,MAAMP,UAAU,GAAG,IAAIQ,GAAJ,EAAnB;AACA,MAAI,CAACF,MAAD,IAAW,CAACA,MAAM,CAACG,SAAvB,EAAkC,OAAOT,UAAP;AAClCA,EAAAA,UAAU,CAACU,GAAX,CAAeC,uBAAf,EAAyCL,MAAM,CAACG,SAAP,CAAiBE,uBAAjB,EAA2C,UAACC,GAAD,EAAS;AAAA,QACnFC,OADmF,GAC9DD,GAD8D,CACnFC,OADmF;AAAA,QAC1EnC,OAD0E,GAC9DkC,GAD8D,CAC1ElC,OAD0E;AAE3FU,IAAAA,cAAc;;AACd,QAAIyB,OAAO,IAAKR,UAAU,KAAKQ,OAAO,CAACC,GAAvC,EAA6C;AAC3CP,MAAAA,UAAU,CAAC;AACTtB,QAAAA,IAAI,EAAE8B,qBADG;AAETC,QAAAA,OAAO,EAAEtC;AAFA,OAAD,CAAV;AAID;AACF,GATwC,CAAzC;AAUAsB,EAAAA,UAAU,CAACU,GAAX,CAAeC,wBAAf,EAA0CL,MAAM,CAACG,SAAP,CAAiBE,wBAAjB,EAA4C,UAACC,GAAD,EAAS;AAAA,QACrFC,OADqF,GAChED,GADgE,CACrFC,OADqF;AAAA,QAC5EnC,OAD4E,GAChEkC,GADgE,CAC5ElC,OAD4E;;AAE7F,QAAImC,OAAO,IAAKR,UAAU,KAAKQ,OAAO,CAACC,GAAvC,EAA6C;AAC3CP,MAAAA,UAAU,CAAC;AACTtB,QAAAA,IAAI,EAAE8B,oBADG;AAETC,QAAAA,OAAO,EAAEtC;AAFA,OAAD,CAAV;AAID;AACF,GARyC,CAA1C;AASAsB,EAAAA,UAAU,CAACU,GAAX,CAAeC,uBAAf,EAAyCL,MAAM,CAACG,SAAP,CAAiBE,uBAAjB,EAA2C,UAACC,GAAD,EAAS;AAAA,QACnFC,OADmF,GAC9DD,GAD8D,CACnFC,OADmF;AAAA,QAC1EnC,OAD0E,GAC9DkC,GAD8D,CAC1ElC,OAD0E;AAE3FU,IAAAA,cAAc;;AACd,QAAIyB,OAAO,IAAKR,UAAU,KAAKQ,OAAO,CAACC,GAAvC,EAA6C;AAC3CP,MAAAA,UAAU,CAAC;AACTtB,QAAAA,IAAI,EAAE8B,qBADG;AAETC,QAAAA,OAAO,EAAEtC;AAFA,OAAD,CAAV;AAID;AACF,GATwC,CAAzC;AAUAsB,EAAAA,UAAU,CAACU,GAAX,CAAeC,yBAAf,EAA2CL,MAAM,CAACG,SAAP,CAAiBE,yBAAjB,EAA6C,UAACC,GAAD,EAAS;AAAA,QACvFC,OADuF,GACpDD,GADoD,CACvFC,OADuF;AAAA,QAC9EnC,OAD8E,GACpDkC,GADoD,CAC9ElC,OAD8E;AAAA,QACrEuC,YADqE,GACpDL,GADoD,CACrEK,YADqE;;AAE/F,QAAIA,YAAY,IAAIJ,OAAhB,IAA4BR,UAAU,KAAKQ,OAAO,CAACC,GAAvD,EAA6D;AAC3DP,MAAAA,UAAU,CAAC;AACTtB,QAAAA,IAAI,EAAE8B,kBADG;AAETC,QAAAA,OAAO,EAAE;AAAEH,UAAAA,OAAO,EAAPA,OAAF;AAAWnC,UAAAA,OAAO,EAAPA;AAAX;AAFA,OAAD,CAAV;AAID;AACF,GAR0C,CAA3C;AASAsB,EAAAA,UAAU,CAACU,GAAX,CAAeC,oBAAf,EAAsCL,MAAM,CAACG,SAAP,CAAiBE,oBAAjB,EAAwC,UAACC,GAAD,EAAS;AAAA,QAC7EC,OAD6E,GACtDD,GADsD,CAC7EC,OAD6E;AAAA,QACpEK,SADoE,GACtDN,GADsD,CACpEM,SADoE;;AAErF,QAAIL,OAAO,IAAKR,UAAU,KAAKQ,OAAO,CAACC,GAAvC,EAA6C;AAC3CP,MAAAA,UAAU,CAAC;AACTtB,QAAAA,IAAI,EAAE8B,kBADG;AAETC,QAAAA,OAAO,EAAEE;AAFA,OAAD,CAAV;AAID;AACF,GARqC,CAAtC;AAUA,SAAOlB,UAAP;AACD,CApDM;AAsDP,AAAO,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACzC,OAAD,EAAU0C,mBAAV,EAAkC;AAC/D,MAAI1C,OAAO,CAAC2C,YAAR,KAAyB9C,MAA7B,EAAqC;AACnC,WAAO+C,sBAAiB,CAAC/C,MAAzB;AACD;;AAED,MAAIG,OAAO,CAAC2C,YAAR,KAAyB7C,OAA7B,EAAsC;AACpC,WAAO8C,sBAAiB,CAAC9C,OAAzB;AACD;;AAED,MAAIE,OAAO,CAAC2C,YAAR,KAAyB/C,SAA7B,EAAwC;AACtC,QAAI,CAAC8C,mBAAL,EAA0B;AACxB,aAAOE,sBAAiB,CAACC,IAAzB;AACD;;AAED,QAAMC,WAAW,GAAGJ,mBAAmB,CAACK,cAApB,CAAmC/C,OAAnC,CAApB;;AACA,QAAI8C,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAOF,sBAAiB,CAACI,IAAzB;AACD;;AAED,QAAMC,WAAW,GAAGP,mBAAmB,CAACQ,kBAApB,CAAuClD,OAAvC,MAAoD,CAAxE;;AACA,QAAIiD,WAAJ,EAAiB;AACf,aAAOL,sBAAiB,CAACO,SAAzB;AACD;;AAED,WAAOP,sBAAiB,CAACC,IAAzB;AACD;;AAED,SAAO,IAAP;AACD,CA5BM;AA8BP,AAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,GAAuB;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;AAAA,MACvCC,MADuC,GAC5BD,YAD4B,CACvCC,MADuC;AAE/C,SAAOA,MAAM,KAAK,UAAlB;AACD,CAHM;AAKP,AAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAuB;AAAA,MAAtBF,YAAsB,uEAAP,EAAO;AAAA,MACpDG,QADoD,GACvCH,YADuC,CACpDG,QADoD;AAE5D,SAAOA,QAAQ,IAAI,CAACJ,UAAU,CAACC,YAAD,CAA9B;AACD,CAHM;AAKP,AAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAuB;AAAA,MAAtBJ,YAAsB,uEAAP,EAAO;AAAA,MACnDK,YADmD,GAClCL,YADkC,CACnDK,YADmD;AAE3D,SAAOA,YAAY,KAAK,OAAxB;AACD,CAHM;AAKP,AAAO,IAAMC,oCAAoC,GAAG,SAAvCA,oCAAuC;AAAA,MAACC,cAAD,uEAAkB,EAAlB;AAAA,SAClDA,cAAc,CAACC,eAAf,GAAiCD,cAAc,CAACC,eAAhD,GAAkE,EADhB;AAAA,CAA7C;AAIP,AAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,GAAyB;AAAA,MAAxBF,cAAwB,uEAAP,EAAO;AAAA,8BACpCA,cADoC,CAC7DC,eAD6D;AAAA,MAC7DA,eAD6D,sCAC3C,EAD2C;AAErE,MAAME,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAGH,eAAe,CAACI,MAA5D,EAAoED,aAAa,IAAI,CAArF,EAAwF;AAAA,QAC9EE,MAD8E,GACnEL,eAAe,CAACG,aAAD,CADoD,CAC9EE,MAD8E;;AAEtF,SAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGD,MAAM,CAACD,MAA7C,EAAqDE,UAAU,IAAI,CAAnE,EAAsE;AACpEJ,MAAAA,SAAS,CAACK,IAAV,CAAeF,MAAM,CAACC,UAAD,CAArB;AACD;AACF;;AACD,SAAOJ,SAAP;AACD,CAXM;AAaP,AAAO,IAAMM,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,MAACT,cAAD,uEAAkB,EAAlB;AAAA,MAAsBU,eAAtB,uEAAwC,EAAxC;AAAA,SACzCV,cAAc,CAACC,eAAf,GACID,cAAc,CAACC,eAAf,CACCU,MADD,CACQ,UAACC,aAAD;AAAA,WAAmBA,aAAa,CAACC,EAAd,KAAqBH,eAAxC;AAAA,GADR,EACiE,CADjE,EACoEJ,MAFxE,GAGI,EAJqC;AAAA,CAApC;AAOP,AAAO,IAAMQ,iCAAiC,GAAG,SAApCA,iCAAoC,GAAyB;AAAA,MAAxBd,cAAwB,uEAAP,EAAO;AAAA,+BACvCA,cADuC,CAChEC,eADgE;AAAA,MAChEA,eADgE,uCAC9C,EAD8C;AAExE,MAAMc,YAAY,GAAG,IAAI7C,GAAJ,EAArB;;AAEA,OAAK,IAAIkC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAGH,eAAe,CAACI,MAA5D,EAAoED,aAAa,IAAI,CAArF,EAAwF;AAAA,QAC9EE,MAD8E,GACnEL,eAAe,CAACG,aAAD,CADoD,CAC9EE,MAD8E;;AAEtF,SAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGD,MAAM,CAACD,MAA7C,EAAqDE,UAAU,IAAI,CAAnE,EAAsE;AAAA,+BAC/CD,MAAM,CAACC,UAAD,CADyC;AAAA,UAC5DS,GAD4D,sBAC5DA,GAD4D;AAAA,UACvDxC,GADuD,sBACvDA,GADuD;AAEpEuC,MAAAA,YAAY,CAAC3C,GAAb,CAAiB4C,GAAjB,EAAsBxC,GAAtB;AACD;AACF;;AACD,SAAOuC,YAAP;AACD,CAZM;AAcP,AAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAC1D,MAAMC,YAAY,GAAG,IAAIjD,GAAJ,EAArB;;AACA,OAAK,IAAIkD,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGF,OAAO,CAACb,MAAhD,EAAwDe,WAAW,IAAI,CAAvE,EAA0E;AAAA,+BAC3CF,OAAO,CAACE,WAAD,CADoC;AAAA,QAChEC,MADgE,wBAChEA,MADgE;AAAA,QACxDC,QADwD,wBACxDA,QADwD;AAExEH,IAAAA,YAAY,CAAC/C,GAAb,CAAiBiD,MAAjB,EAAyBC,QAAzB;AACD;;AACD,SAAOH,YAAP;AACD,CAPM;AASP,AAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACnF,OAAD;AAAA,SAAaoF,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,GAApB,CAAnB;AAAA,CAA5B;AAEP,AAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACtF,OAAD,EAAUuF,gBAAV,EAA+B;AACxD,MACE,CAACvF,OAAD,IACG,CAACuF,gBADJ,IAEG,CAACvF,OAAO,CAACwF,MAFZ,IAGG,CAACD,gBAAgB,CAACC,MAHrB,IAIG,CAACxF,OAAO,CAACqF,SAJZ,IAKG,CAACE,gBAAgB,CAACF,SALrB,IAMG,CAACrF,OAAO,CAACwF,MAAR,CAAeP,MANnB,IAOG,CAACM,gBAAgB,CAACC,MAAjB,CAAwBP,MAR9B,EASE;AACA,WAAO,KAAP;AACD;;AACD,SACEjF,OAAO,CAACyF,aAAR,KAA0BF,gBAAgB,CAACE,aAA3C,IACGzF,OAAO,CAACwF,MAAR,CAAeP,MAAf,KAA0BM,gBAAgB,CAACC,MAAjB,CAAwBP,MADrD,IAEGE,mBAAmB,CAACnF,OAAD,CAAnB,KAAiCmF,mBAAmB,CAACI,gBAAD,CAHzD;AAKD,CAlBM;AAoBP,AAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxCC,WADwC,EAExCC,WAFwC,EAGxCC,WAHwC;AAAA,SAKxC,CACEP,WAAW,CAACK,WAAD,EAAcC,WAAd,CADb,EAEEN,WAAW,CAACM,WAAD,EAAcC,WAAd,CAFb,CALwC;AAAA,CAAnC;AAWP,AAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,SAAc,UAACzD,OAAD,EAAa;AACvD;AACA,QAAIA,OAAO,IAAIA,OAAO,CAACwD,cAAnB,IAAqCxD,OAAO,CAACwD,cAAR,CAAuBC,QAAvB,CAAzC,EAA2E;AACzE,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAN6B;AAAA,CAAvB;AAQP,AAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,WAAD,EAAcC,UAAd,EAA6B;AAAA,8BAC9BA,UAD8B,CAC5DT,aAD4D;AAAA,MAC5DA,aAD4D,sCAC5ChF,SAD4C;;AAEpE,MAAIgF,aAAa,KAAK7F,SAAlB,IAA+B6F,aAAa,KAAK3F,OAArD,EAA8D;AAC5D,QAAMqG,2BAA2B,GAAGF,WAAW,CAC5CG,GADiC,CAC7B,UAACpG,OAAD;AAAA,aACHA,OAAO,CAACyF,aAAR,KACKzF,OAAO,CAACI,cAAR,IAA0BJ,OAAO,CAACI,cAAR,EAA3B,GAAuDR,SAAvD,GAAmEa,SADvE,CADG;AAAA,KAD6B,EAKjC4F,WALiC,CAKrBzG,SALqB,CAApC;;AAMA,QAAIuG,2BAA2B,GAAG,CAA9B,GAAkCF,WAAW,CAAChC,MAAlD,EAA0D;AACxD,UAAMqC,QAAQ,0CAAOL,WAAP,CAAd;;AACAK,MAAAA,QAAQ,CAACC,MAAT,CAAgBJ,2BAA2B,GAAG,CAA9C,EAAiD,CAAjD,EAAoDD,UAApD;AACA,aAAOI,QAAP;AACD;AACF;;AACD,0DACKL,WADL,IAEEC,UAFF;AAID,CAnBM;AAqBP,AAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAChC,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOA,EAAP;AACD;;AACD,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAMC,MAAM,GAAGC,MAAM,CAACC,UAAP,CAAkBH,EAAlB,CAAf;;AACA,QAAI,CAACE,MAAM,CAACE,KAAP,CAAaH,MAAb,CAAL,EAA2B;AACzB,aAAOA,MAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAXM;;ACrPP,2BAAe;AACbI,EAAAA,WAAW,EAAE,KADA;AAEbC,EAAAA,OAAO,EAAE,KAFI;AAGbd,EAAAA,WAAW,EAAE,EAHA;AAIbvD,EAAAA,mBAAmB,EAAE;AAAEoC,IAAAA,OAAO,EAAE;AAAX,GAJR;AAKb;AACAkC,EAAAA,OAAO,EAAE,KANI;AAObC,EAAAA,oBAAoB,EAAE,CAPT;AAQb;AACAC,EAAAA,eAAe,EAAE,KATJ;AAUbC,EAAAA,6BAA6B,EAAE,CAVlB;AAWbvD,EAAAA,cAAc,EAAE,EAXH;AAYbwD,EAAAA,UAAU,EAAE,EAZC;AAabtE,EAAAA,WAAW,EAAE,CAbA;AAcbuE,EAAAA,WAAW,EAAE,IAdA;AAebC,EAAAA,SAAS,EAAE;AAfE,CAAf;;ICUE1H,cAGEF,qBAHFE;IACAC,WAEEH,qBAFFG;IACAC,YACEJ,qBADFI;AAGF,AAAe,SAASyH,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAAClH,IAAf;AACE,SAAKmH,WAAL;AACE,aAAOC,oBAAP;;AACF,SAAKD,cAAL;AACE,oDACKF,KADL;AAEE;AACA;AACAR,QAAAA,OAAO,EAAE,KAJX;AAKEf,QAAAA,WAAW,EAAE;AALf;;AAOF,SAAKyB,uBAAL;AACE,oDACKF,KADL;AAEET,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKW,mBAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,yCACNuB,KAAK,CAACvB,WAAN,CAAkB1B,MAAlB,CAAyB,UAACqD,CAAD;AAAA,iBAC1BA,CAAC,CAACnC,aAAF,KAAoB7F,WADM;AAAA,SAAzB,CADM;AAFb;;AAQF,SAAK8H,wBAAL;AAA2C;AACzC,YAAMG,gBAAgB,GAAGJ,MAAM,CAACnF,OAAP,CAAegE,QAAf,IAA2B,EAApD;AADyC,oCAEJmB,MAAM,CAACnF,OAFH,CAEjCI,mBAFiC;AAAA,YAEjCA,mBAFiC,sCAEX,EAFW;AAIzC,YAAMoF,YAAY,GAAGN,KAAK,CAAC9E,mBAAN,IAA6B,EAAlD;AACA,YAAMqF,eAAe,GAAGD,YAAY,CAAC1F,GAArC;AACA,YAAM4F,gBAAgB,GAAGtF,mBAAmB,CAACN,GAA7C;;AACA,YAAI4F,gBAAgB,KAAKD,eAAzB,EAA0C;AACxC,iBAAOP,KAAP;AACD,SATwC;;;AAYzC,YAAMS,mBAAmB,GAAGT,KAAK,CAACvB,WAAN,CAAkB1B,MAAlB,CAAyB,UAACrC,GAAD;AAAA,iBACnD,CAAE2F,gBAAgB,CAACK,IAAjB,CAAsB;AAAA,gBAAG1F,SAAH,QAAGA,SAAH;AAAA,mBAAmB2F,kBAAU,CAAC3F,SAAD,EAAYN,GAAG,CAACM,SAAhB,CAA7B;AAAA,WAAtB,CADiD;AAAA,SAAzB,CAA5B;AAIA,YAAM4F,kBAAkB,GAAGtC,cAAc,CAAC,iBAAD,CAAd,CAAkC2B,MAAM,CAACnF,OAAzC,CAA3B;AACA,YAAM+F,gCAAgC,GAAGvC,cAAc,CAAC,+BAAD,CAAd,CAAgD2B,MAAM,CAACnF,OAAvD,CAAzC;AACA,sDACKkF,KADL;AAEET,UAAAA,OAAO,EAAE,KAFX;AAGED,UAAAA,WAAW,EAAE,IAHf;AAIEE,UAAAA,OAAO,EAAES,MAAM,CAACnF,OAAP,CAAe0E,OAJ1B;AAKEC,UAAAA,oBAAoB,EAAEQ,MAAM,CAACnF,OAAP,CAAe2E;AALvC,WAOMmB,kBAAkB,IAAI;AACxBlB,UAAAA,eAAe,EAAEO,MAAM,CAACnF,OAAP,CAAe4E;AADR,SAP5B,MAUMmB,gCAAgC,IAAI;AACtClB,UAAAA,6BAA6B,EAAEM,MAAM,CAACnF,OAAP,CAAe6E;AADR,SAV1C;AAaElB,UAAAA,WAAW,mDACN4B,gBADM,0CAENI,mBAFM;AAbb;AAkBD;;AACD,SAAKP,wBAAL;AAA2C;AACzC,YAAMG,iBAAgB,GAAGJ,MAAM,CAACnF,OAAP,CAAegE,QAAf,IAA2B,EAApD;;AADyC,qCAEJmB,MAAM,CAACnF,OAFH,CAEjCI,mBAFiC;AAAA,YAEjCA,oBAFiC,uCAEX,EAFW;;AAIzC,YAAMoF,aAAY,GAAGN,KAAK,CAAC9E,mBAAN,IAA6B,EAAlD;;AACA,YAAMqF,gBAAe,GAAGD,aAAY,CAAC1F,GAArC;AACA,YAAM4F,iBAAgB,GAAGtF,oBAAmB,CAACN,GAA7C;;AACA,YAAI4F,iBAAgB,KAAKD,gBAAzB,EAA0C;AACxC,iBAAOP,KAAP;AACD,SATwC;;;AAYzC,YAAMS,oBAAmB,GAAGT,KAAK,CAACvB,WAAN,CAAkB1B,MAAlB,CAAyB,UAACrC,GAAD;AAAA,iBACnD,CAAE2F,iBAAgB,CAACK,IAAjB,CAAsB;AAAA,gBAAG1F,SAAH,SAAGA,SAAH;AAAA,mBAAmB2F,kBAAU,CAAC3F,SAAD,EAAYN,GAAG,CAACM,SAAhB,CAA7B;AAAA,WAAtB,CADiD;AAAA,SAAzB,CAA5B;;AAIA,sDACKgF,KADL;AAEET,UAAAA,OAAO,EAAE,KAFX;AAGED,UAAAA,WAAW,EAAE,IAHf;AAIEE,UAAAA,OAAO,EAAES,MAAM,CAACnF,OAAP,CAAe0E,OAJ1B;AAKEC,UAAAA,oBAAoB,EAAEQ,MAAM,CAACnF,OAAP,CAAe2E,oBALvC;AAMEC,UAAAA,eAAe,EAAEO,MAAM,CAACnF,OAAP,CAAe4E,eANlC;AAOEC,UAAAA,6BAA6B,EAAEM,MAAM,CAACnF,OAAP,CAAe6E,6BAPhD;AAQElB,UAAAA,WAAW,mDACNgC,oBADM,0CAENJ,iBAFM;AARb;AAaD;;AACD,SAAKH,yBAAL;AAA4C;AAC1C,sDAAYF,KAAZ;AACD;;AACD,SAAKE,oBAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,mDACNuB,KAAK,CAACvB,WADA,2CAEJwB,MAAM,CAACnF,OAFH;AAFb;;AAOF,SAAKoF,qBAAL;AAAwC;AACtC,YAAMY,WAAW,GAAGd,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAACwB,CAAD;AAAA,iBACxCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUd,MAAM,CAACnF,OAAP,CAAeiG,KAAzB,CAAV,GAA4Cd,MAAM,CAACnF,OAAnD,GAA6DsF,CADrB;AAAA,SAAtB,CAApB;;AAGA,+CAAIU,WAAJ,EAAiBE,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAElBD,CAAC,CAAChD,aAAF,IACGiD,CAAC,CAACjD,aADL,IAEGgD,CAAC,CAAChD,aAAF,KAAoB7F,WAFvB,KAIE8I,CAAC,CAACjD,aAAF,KAAoB3F,SAApB,IACG4I,CAAC,CAACjD,aAAF,KAAoB5F,QALzB,CADF,GAQI,CAAC,CARL,GAQS,CATW;AAAA,SAAtB;;AAWA,sDACK2H,KADL;AAEEvB,UAAAA,WAAW,EAAEqC;AAFf;AAID;;AACD,SAAKZ,sBAAL;AAAyC;AACvC;AACAD,QAAAA,MAAM,CAACnF,OAAP,CAAeqG,MAAf,GAAwB,IAAxB;AACA,sDACKnB,KADL;AAEEvB,UAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAACwB,CAAD;AAAA,mBACjCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUd,MAAM,CAACnF,OAAP,CAAeiG,KAAzB,CAAV,GACId,MAAM,CAACnF,OADX,GAEIsF,CAH6B;AAAA,WAAtB;AAFf;AAQD;;AACD,SAAKF,mBAAL;AAAsC;AACpC,sDACKF,KADL;AAEE9E,UAAAA,mBAAmB,EAAE+E,MAAM,CAACnF,OAF9B;AAGEgF,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKI,mBAAL;AAAsC;AACpC,sDACKF,KADL;AAEEF,UAAAA,SAAS,EAAE;AAFb;AAID;;AACD,SAAKI,mBAAL;AAAsC;AAAA,YAC5BvF,OAD4B,GAChBsF,MAAM,CAACnF,OADS,CAC5BH,OAD4B;;AAAA,oCAEcqF,KAFd,CAE5B9E,mBAF4B;AAAA,YAE5BA,qBAF4B,sCAEN,EAFM;AAAA,YAEFI,WAFE,GAEc0E,KAFd,CAEF1E,WAFE;;AAGpC,YAAM8F,sBAAsB,GAAGlG,qBAAmB,CAACN,GAAnD;;AACA,YAAI,CAAC+F,kBAAU,CAAChG,OAAO,CAACC,GAAT,EAAcwG,sBAAd,CAAf,EAAsD;AACpD,iBAAOpB,KAAP;AACD;;AACD,sDACKA,KADL;AAEEH,UAAAA,WAAW,EAAEvE,WAAW,GAAG;AAF7B;AAID;;AACD,SAAK4E,mBAAL;AAAsC;AAAA,8BACMD,MAAM,CAACnF,OADb;AAAA,YAC5BH,QAD4B,mBAC5BA,OAD4B;AAAA,YACnBnC,OADmB,mBACnBA,OADmB;AAAA,YACV6I,WADU,mBACVA,WADU;AAEpC,YAAI/F,YAAW,GAAG,CAAlB;;AAFoC,qCAGc0E,KAHd,CAG5B9E,mBAH4B;AAAA,YAG5BA,qBAH4B,uCAGN,EAHM;AAAA,YAGF2E,WAHE,GAGcG,KAHd,CAGFH,WAHE;;AAIpC,YAAMuB,uBAAsB,GAAGlG,qBAAmB,CAACN,GAAnD;;AACA,YAAI,CAAC+F,kBAAU,CAAChG,QAAO,CAACC,GAAT,EAAcwG,uBAAd,CAAf,EAAsD;AACpD,iBAAOpB,KAAP;AACD,SAPmC;;;AASpC,YAAI,EAAEA,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAAClE,GAAD;AAAA,iBAASA,GAAG,CAACM,SAAb;AAAA,SAAtB,EAA8CsG,OAA9C,CAAsD9I,OAAO,CAACwC,SAA9D,IAA2E,CAA7E,CAAJ,EAAqF;AACnF,iBAAOgF,KAAP;AACD;;AAED1E,QAAAA,YAAW,GAAG0E,KAAK,CAAC1E,WAAN,GAAoB,CAAlC,CAboC;;AAepC,YAAI+F,WAAJ,EAAiB;AACf/F,UAAAA,YAAW,GAAG,CAAd;AACD;;AAED,YAAI9C,OAAO,CAACI,cAAR,IAA0BJ,OAAO,CAACI,cAAR,EAA9B,EAAwD;AACtD,wDACKoH,KADL;AAEEvB,YAAAA,WAAW,EAAED,yBAAyB,CAACwB,KAAK,CAACvB,WAAP,EAAoBjG,OAApB;AAFxC;AAID;;AACD,sDACKwH,KADL;AAEE1E,UAAAA,WAAW,EAAXA,YAFF;AAGEuE,UAAAA,WAAW,EAAGvE,YAAW,KAAK,CAAjB,GACTsC,MAAM,CAAC,IAAI2D,IAAJ,EAAD,EAAa,UAAb,CADG,GAET1B,WALN;AAMEpB,UAAAA,WAAW,EAAED,yBAAyB,CAACwB,KAAK,CAACvB,WAAP,EAAoBjG,OAApB;AANxC;AAQD;;AACD,SAAK0H,kBAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAACwB,CAAD;AAAA,iBACjCO,kBAAU,CAACP,CAAC,CAACpF,SAAH,EAAciF,MAAM,CAACnF,OAAP,CAAetC,OAAf,CAAuBwC,SAArC,CAAV,GACIiF,MAAM,CAACnF,OAAP,CAAetC,OADnB,GAEI4H,CAH6B;AAAA,SAAtB;AAFf;;AAQF,SAAKF,sBAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAACwB,CAAD;AAAA,iBACjCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUd,MAAM,CAACnF,OAAP,CAAeiG,KAAzB,CAAV,GACId,MAAM,CAACnF,OADX,GAEIsF,CAH6B;AAAA,SAAtB;AAFf;;AAQF,SAAKF,YAAL;AACE,oDACKF,KADL;AAEE1E,QAAAA,WAAW,EAAE,CAFf;AAGEuE,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAKK,kBAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkB1B,MAAlB,CAAyB,UAACqD,CAAD;AAAA,iBACpC,CAACO,kBAAU,CAACP,CAAC,CAACpF,SAAH,EAAciF,MAAM,CAACnF,OAArB,CADyB;AAAA,SAAzB;AAFf;;AAMF,SAAKoF,4BAAL;AACE,oDACKF,KADL;AAEEvB,QAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkB1B,MAAlB,CAAyB,UAACqD,CAAD;AAAA,iBACpC,CAACO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUd,MAAM,CAACnF,OAAjB,CADyB;AAAA,SAAzB;AAFf;;AAMF,SAAKoF,mBAAL;AAAsC;AACpC,sDACKF,KADL;AAEE5D,UAAAA,cAAc,EAAE6D,MAAM,CAACnF;AAFzB;AAID;;AACD,SAAKoF,eAAL;AAAkC;AAChC,sDACKF,KADL;AAEEJ,UAAAA,UAAU,EAAEK,MAAM,CAACnF;AAFrB;AAID;;AACD,SAAKoF,mBAAL;AAAsC;AACpC,sDACKF,KADL;AAEEvB,UAAAA,WAAW,EAAEuB,KAAK,CAACvB,WAAN,CAAkBG,GAAlB,CAAsB,UAACwB,CAAD,EAAO;AACxC,gBAAIO,kBAAU,CAACP,CAAC,CAACpF,SAAH,EAAciF,MAAM,CAACnF,OAAP,CAAeE,SAA7B,CAAd,EAAuD;AACrD,kBAAIoF,CAAC,CAACoB,kBAAF,IAAwB,OAAOpB,CAAC,CAACoB,kBAAT,KAAgC,UAA5D,EAAwE;AACtEpB,gBAAAA,CAAC,CAACoB,kBAAF,CAAqBvB,MAAM,CAACnF,OAA5B;AACD;;AACD,qBAAOsF,CAAP;AACD;;AACD,mBAAOA,CAAP;AACD,WARY;AAFf;AAYD;;AACD;AACE,aAAOJ,KAAP;AAnQJ;AAqQD;;AC9QD;;;;;;;;;AAQA,SAASyB,sBAAT,cAKG;AAAA,MAL+BvG,mBAK/B,QAL+BA,mBAK/B;AAAA,MALoDwG,OAKpD,QALoDA,OAKpD;AAAA,MAL6DhC,eAK7D,QAL6DA,eAK7D;AAAA,MAJDiC,kBAIC,SAJDA,kBAIC;AAAA,MAHDC,GAGC,SAHDA,GAGC;AAAA,MAFDC,MAEC,SAFDA,MAEC;AAAA,MADDC,SACC,SADDA,SACC;AACD,MAAM3H,UAAU,GAAGe,mBAAmB,IAAIA,mBAAmB,CAACN,GAA9D;AACAmH,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMC,iBAAiB,GAAGC,4BAAM,EAAhC;;AACA,QAAI9H,UAAU,IAAIyH,GAAd,IAAqBA,GAAG,CAACM,cAA7B,EAA6C;AAC3C,UAAMA,cAAc,GAAG,IAAIN,GAAG,CAACM,cAAR,EAAvB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,uDAAZ,EAAqEH,iBAArE;;AACAE,MAAAA,cAAc,CAACE,iBAAf,GAAmC,UAACzH,OAAD,EAAUnC,OAAV,EAAsB;AACvD;AACA,YAAImI,kBAAU,CAAChG,OAAO,CAACC,GAAT,EAAcM,mBAAmB,CAACN,GAAlC,CAAV,IAAoD,CAAC8E,eAAzD,EAA0E;AACxE,cAAI2B,WAAW,GAAG,KAAlB;;AACA,cAAI;AAAA,gBACMgB,OADN,GACkBP,SADlB,CACMO,OADN;AAEFhB,YAAAA,WAAW,GAAGgB,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAAC5I,SAA/B,IAA4C4I,OAAO,CAAC3I,YAAlE;AACD,WAHD,CAGE,OAAOC,KAAP,EAAc;AAEf;;AAEDkI,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmE3J,OAAnE;AACAmJ,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAE;AAAEH,cAAAA,OAAO,EAAPA,OAAF;AAAWnC,cAAAA,OAAO,EAAPA,OAAX;AAAoB6I,cAAAA,WAAW,EAAXA;AAApB;AAFQ,WAAD,CAAlB;;AAKA,cAAIA,WAAJ,EAAiB;AACf,gBAAI;AACFzH,cAAAA,UAAU,CAAC,YAAM;AACfsB,gBAAAA,mBAAmB,CAACsH,UAApB;AACAtJ,gBAAAA,cAAc;AACf,eAHS,CAAV;AAID,aALD,CAKE,OAAOS,KAAP,EAAc;AACdkI,cAAAA,MAAM,CAACY,OAAP,CAAe,oDAAf;AACD;AACF;AACF;;AACD,YAAI9B,kBAAU,CAAChG,OAAO,CAACC,GAAT,EAAcM,mBAAmB,CAACN,GAAlC,CAAV,IAAoD8E,eAAxD,EAAyE;AACvEiC,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAE;AAAEH,cAAAA,OAAO,EAAPA;AAAF;AAFQ,WAAD,CAAlB;AAID;AACF,OAlCD;;AAoCAuH,MAAAA,cAAc,CAACQ,gBAAf,GAAkC,UAAC/H,OAAD,EAAUnC,OAAV,EAAsB;AACtDqJ,QAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkE3J,OAAlE;AACAmJ,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAEwJ,kBADW;AAEjBzH,UAAAA,OAAO,EAAE;AAAEH,YAAAA,OAAO,EAAPA,OAAF;AAAWnC,YAAAA,OAAO,EAAPA;AAAX;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQA0J,MAAAA,cAAc,CAACS,gBAAf,GAAkC,UAACC,CAAD,EAAI5H,SAAJ,EAAkB;AAClD6G,QAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkEnH,SAAlE;AACA2G,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAEwJ,kBADW;AAEjBzH,UAAAA,OAAO,EAAEE;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQAkH,MAAAA,cAAc,CAACW,iBAAf,GAAmC,UAACD,CAAD,EAAIE,aAAJ,EAAsB;AACvDjB,QAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEW,aAAnE;AACAnB,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,UAAAA,OAAO,EAAEgI;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQAZ,MAAAA,cAAc,CAACa,gBAAf,GAAkC,UAAClH,YAAD,EAAkB;AAClD,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkEtG,YAAlE;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACc,eAAf,GAAiC,UAACnH,YAAD,EAAkB;AACjD,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,mDAAZ,EAAiEtG,YAAjE;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACe,iBAAf,GAAmC,UAACpH,YAAD,EAAkB;AACnD,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEtG,YAAnE;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACgB,WAAf,GAA6B,UAACrH,YAAD,EAAkB;AAC7C,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,+CAAZ,EAA6DtG,YAA7D;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACiB,aAAf,GAA+B,UAACtH,YAAD,EAAkB;AAC/C,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,iDAAZ,EAA+DtG,YAA/D;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACkB,YAAf,GAA8B,UAACvH,YAAD,EAAkB;AAC9C,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,gDAAZ,EAA8DtG,YAA9D;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAqG,MAAAA,cAAc,CAACmB,iBAAf,GAAmC,UAACxH,YAAD,EAAkB;AACnD,YAAI8E,kBAAU,CAAC9E,YAAY,CAACjB,GAAd,EAAmBM,mBAAmB,CAACN,GAAvC,CAAd,EAA2D;AACzDiH,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEtG,YAAnE;AACA8F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAEwJ,mBADW;AAEjBzH,YAAAA,OAAO,EAAEe;AAFQ,WAAD,CAAlB;AAID;AACF,OARD,CA3H2C;;;AAsI3C+F,MAAAA,GAAG,CAAC0B,iBAAJ,CAAsBtB,iBAAtB,EAAyCE,cAAzC;AACD;;AACD,WAAO,YAAM;AACX,UAAIN,GAAG,IAAIA,GAAG,CAAC2B,oBAAf,EAAqC;AACnC1B,QAAAA,MAAM,CAACM,IAAP,CAAY,oEAAZ,EAAkFH,iBAAlF;AACAJ,QAAAA,GAAG,CAAC2B,oBAAJ,CAAyBvB,iBAAzB;AACD;AACF,KALD;AAMD,GAhJQ,EAgJN,CAAC7H,UAAD,EAAauH,OAAb,CAhJM,CAAT;AAiJD;;ACnKD,SAAS8B,aAAT,cAIG;AAAA,MAJsBrJ,UAItB,QAJsBA,UAItB;AAAA,MAJkCuH,OAIlC,QAJkCA,OAIlC;AAAA,MAHDC,kBAGC,SAHDA,kBAGC;AAAA,MAFDC,GAEC,SAFDA,GAEC;AAAA,MADDC,MACC,SADDA,MACC;AACDE,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI5H,UAAU,IAAIuH,OAAd,IAAyBE,GAAzB,IAAgCA,GAAG,CAAC6B,YAAxC,EAAsD;AACpD5B,MAAAA,MAAM,CAACM,IAAP,CAAY,0CAAZ,EAAwDhI,UAAxD;AACAyH,MAAAA,GAAG,CAAC6B,YAAJ,CAAiBC,UAAjB,CAA4BvJ,UAA5B,EACGwJ,IADH,CACQ,UAAC9H,YAAD,EAAkB;AACtBgG,QAAAA,MAAM,CAACM,IAAP,CAAY,yCAAZ,EAAuDtG,YAAvD;AACA8F,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,mBADW;AAEjB9I,UAAAA,OAAO,EAAEe;AAFQ,SAAD,CAAlB;AAKAgG,QAAAA,MAAM,CAACM,IAAP,CAAY,uBAAZ,EAAqCtG,YAArC,EAPsB;;AAStBA,QAAAA,YAAY,CAAC2G,UAAb;AACD,OAXH,EAYGqB,KAZH,CAYS,UAACC,CAAD,EAAO;AACZjC,QAAAA,MAAM,CAACY,OAAP,CAAe,8CAAf,EAA+D;AAAEtI,UAAAA,UAAU,EAAVA,UAAF;AAAc2J,UAAAA,CAAC,EAADA;AAAd,SAA/D;AACAnC,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K;AADW,SAAD,CAAlB;AAGD,OAjBH;AAkBAhC,MAAAA,GAAG,CAACmC,WAAJ,CAAgB,UAACC,eAAD,EAAkBC,GAAlB,EAA0B;AACxC,YAAIA,GAAJ,EAAS;AACPpC,UAAAA,MAAM,CAAClI,KAAP,CAAa,gCAAb,EAA+CsK,GAA/C;AACA;AACD;;AACDpC,QAAAA,MAAM,CAACM,IAAP,CAAY,iCAAZ,EAA+C6B,eAA/C;AACArC,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,mBADW;AAEjB9I,UAAAA,OAAO,EAAEkJ;AAFQ,SAAD,CAAlB;AAID,OAVD;AAWD;AACF,GAjCQ,EAiCN,CAAC7J,UAAD,EAAauH,OAAb,CAjCM,CAAT;AAkCD;;ACtCD,IAAMwC,gBAAgB,GAAG,EAAzB;AACA,IAAMC,gBAAgB,GAAG,EAAzB;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAmB;AAAA,MAAlBtF,QAAkB,uEAAP,EAAO;AACnD,MAAMuF,aAAa,GAAGvF,QAAQ,CAACA,QAAQ,CAACrC,MAAT,GAAkB,CAAnB,CAA9B;AACA,SAAQ4H,aAAa,IAAIA,aAAa,CAACxG,SAAhC,IAA8C,IAArD;AACD,CAHD;;AAKA,SAASyG,uBAAT,cAQG;AAAA,MAPDpJ,mBAOC,QAPDA,mBAOC;AAAA,MANDqJ,0BAMC,QANDA,0BAMC;AAAA,MALDC,eAKC,QALDA,eAKC;AAAA,MAHD5C,GAGC,SAHDA,GAGC;AAAA,MAFDC,MAEC,SAFDA,MAEC;AAAA,MADDF,kBACC,SADDA,kBACC;AACD,MAAMxH,UAAU,GAAGe,mBAAmB,IAAIA,mBAAmB,CAACN,GAA9D;AACAmH,EAAAA,eAAS,CAAC,YAAM;AACdF,IAAAA,MAAM,CAACM,IAAP,CAAY,gDAAZ,EAA8DjH,mBAA9D;AACAyG,IAAAA,kBAAkB,CAAC;AACjB5I,MAAAA,IAAI,EAAE6K;AADW,KAAD,CAAlB;;AAIA,QAAIhC,GAAG,IAAIA,GAAG,CAAC6C,iBAAX,IACCvJ,mBADD,IACwBA,mBAAmB,CAACwJ,sBADhD,EACwE;AACtE,UAAMC,iBAAiB,GAAG,IAAI/C,GAAG,CAAC6C,iBAAR,EAA1B;AACAE,MAAAA,iBAAiB,CAACC,cAAlB,GAAmCV,gBAAnC;AACAS,MAAAA,iBAAiB,CAACE,WAAlB,GAAgC,IAAhC;AACAF,MAAAA,iBAAiB,CAACG,cAAlB,GAAmC,KAAnC;AACAH,MAAAA,iBAAiB,CAACI,eAAlB,GAAoC,IAApC;;AACA,UAAIR,0BAAJ,EAAgC;AAC9BS,QAAAA,MAAM,CAACC,IAAP,CAAYV,0BAAZ,EAAwCxK,OAAxC,CAAgD,UAACqD,GAAD,EAAS;AACvDuH,UAAAA,iBAAiB,CAACvH,GAAD,CAAjB,GAAyBmH,0BAA0B,CAACnH,GAAD,CAAnD;AACD,SAFD;AAGD;;AACDyE,MAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAEjH,QAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBqJ,QAAAA,0BAA0B,EAA1BA;AAAvB,OAA1C;AACA5C,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K;AADW,OAAD,CAAlB;;AAIA,UAAIY,eAAJ,EAAqB;AACnBG,QAAAA,iBAAiB,CAACO,cAAlB,GAAmCf,gBAAnC;AACAjJ,QAAAA,mBAAmB,CAACiK,sBAApB,CACEX,eADF,EAEEG,iBAFF,EAIGhB,IAJH,CAIQ,UAAC7E,QAAD,EAAc;AAClB,cAAMU,OAAO,GAAIV,QAAQ,IAAIA,QAAQ,CAACrC,MAAT,GAAkB,CAA/C;AACA,cAAMgD,oBAAoB,GAAGD,OAAO,GAChCV,QAAQ,CAAC,CAAD,CAAR,CAAYjB,SADoB,GAEhC,IAFJ;AAGA,cAAM8B,6BAA6B,GAAGyE,yBAAyB,CAACtF,QAAD,CAA/D,CALkB;;AAOlB,cAAMsG,qBAAqB,GAAG,IAAIxD,GAAG,CAAC6C,iBAAR,EAA9B;AACAW,UAAAA,qBAAqB,CAACF,cAAtB,GAAuCf,gBAAvC;AACAjJ,UAAAA,mBAAmB,CAACiK,sBAApB,CACExF,6BAA6B,IAAI,IAAI4B,IAAJ,GAAW8D,OAAX,EADnC,EAEED,qBAFF,EAGEzB,IAHF,CAGO,UAAC2B,YAAD,EAAkB;AACvB3D,YAAAA,kBAAkB,CAAC;AACjB5I,cAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,cAAAA,OAAO,EAAE;AACPgE,gBAAAA,QAAQ,EAARA,QADO;AAEPU,gBAAAA,OAAO,EAAPA,OAFO;AAGPC,gBAAAA,oBAAoB,EAApBA,oBAHO;AAIPvE,gBAAAA,mBAAmB,EAAnBA,mBAJO;AAKPyE,gBAAAA,6BAA6B,EAA7BA,6BALO;AAMPD,gBAAAA,eAAe,EAAE4F,YAAY,IAAIA,YAAY,CAAC7I,MAAb,GAAsB;AANhD;AAFQ,aAAD,CAAlB;AAWD,WAfD;AAgBD,SA7BH,EA8BGoH,KA9BH,CA8BS,UAAClK,KAAD,EAAW;AAChBkI,UAAAA,MAAM,CAAClI,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgI,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,YAAAA,OAAO,EAAE;AACPgE,cAAAA,QAAQ,EAAE,EADH;AAEPU,cAAAA,OAAO,EAAE,KAFF;AAGPC,cAAAA,oBAAoB,EAAE,CAHf;AAIPvE,cAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,WAAD,CAAlB;AASD,SAzCH,EA0CGqK,OA1CH,CA0CW,YAAM;AACb,cAAI,CAACf,eAAL,EAAsB;AACpB5K,YAAAA,UAAU,CAAC;AAAA,qBAAM4L,cAAA,EAAN;AAAA,aAAD,CAAV;AACD;;AACDtK,UAAAA,mBAAmB,CAACsH,UAApB;AACD,SA/CH;AAgDD,OAlDD,MAkDO;AACLtH,QAAAA,mBAAmB,CAACiK,sBAApB,CACE,IAAI5D,IAAJ,GAAW8D,OAAX,EADF,EAEEV,iBAFF,EAIGhB,IAJH,CAIQ,UAAC7E,QAAD,EAAc;AAClB,cAAMU,OAAO,GAAIV,QAAQ,IAAIA,QAAQ,CAACrC,MAAT,GAAkB,CAA/C;AACA,cAAMgD,oBAAoB,GAAGD,OAAO,GAChCV,QAAQ,CAAC,CAAD,CAAR,CAAYjB,SADoB,GAEhC,IAFJ;AAGA,cAAM8B,6BAA6B,GAAGyE,yBAAyB,CAACtF,QAAD,CAA/D;AACA6C,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,YAAAA,OAAO,EAAE;AACPgE,cAAAA,QAAQ,EAARA,QADO;AAEPU,cAAAA,OAAO,EAAPA,OAFO;AAGPC,cAAAA,oBAAoB,EAApBA,oBAHO;AAIPvE,cAAAA,mBAAmB,EAAnBA,mBAJO;AAKPyE,cAAAA,6BAA6B,EAA7BA,6BALO;AAMPD,cAAAA,eAAe,EAAE;AANV;AAFQ,WAAD,CAAlB;AAWD,SArBH,EAsBGmE,KAtBH,CAsBS,UAAClK,KAAD,EAAW;AAChBkI,UAAAA,MAAM,CAAClI,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgI,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,YAAAA,OAAO,EAAE;AACPgE,cAAAA,QAAQ,EAAE,EADH;AAEPU,cAAAA,OAAO,EAAE,KAFF;AAGPC,cAAAA,oBAAoB,EAAE,CAHf;AAIPvE,cAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,WAAD,CAAlB;AASD,SAjCH,EAkCGqK,OAlCH,CAkCW,YAAM;AACb,cAAI,CAACf,eAAL,EAAsB;AACpB5K,YAAAA,UAAU,CAAC;AAAA,qBAAM4L,cAAA,EAAN;AAAA,aAAD,CAAV;AACD;;AACDtK,UAAAA,mBAAmB,CAACsH,UAApB;AACD,SAvCH;AAwCD;AACF;AACF,GApHQ,EAoHN,CAACrI,UAAD,EAAaoK,0BAAb,EAAyCC,eAAzC,CApHM,CAAT;AAqHD;;ACvID,SAASiB,kBAAT,cAMG;AAAA,MAN2BC,QAM3B,QAN2BA,QAM3B;AAAA,MALD7D,MAKC,SALDA,MAKC;AAAA,MAJDD,GAIC,SAJDA,GAIC;AAAA,MAHD1G,mBAGC,SAHDA,mBAGC;AAAA,MAFDyG,kBAEC,SAFDA,kBAEC;AAAA,MADD4C,0BACC,SADDA,0BACC;AACDxC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAM4D,UAAU,GAAG,CAACD,QAApB;AACA,WAAO,YAAM;AACX;AACA,UAAIC,UAAJ,EAAgB;AACd9D,QAAAA,MAAM,CAACM,IAAP,CAAY,+BAAZ;AADc,2BAEWP,GAFX,CAENgE,OAFM;AAAA,YAENA,OAFM,6BAEI,EAFJ;AAGd,YAAMC,WAAW,GAAGD,OAAO,CAACE,eAAR,IAA2B,KAA/C;AAEA,YAAMnB,iBAAiB,GAAG,IAAI/C,GAAG,CAAC6C,iBAAR,EAA1B;AACAE,QAAAA,iBAAiB,CAACC,cAAlB,GAAmC,EAAnC;AACAD,QAAAA,iBAAiB,CAACG,cAAlB,GAAmC,KAAnC;AACAH,QAAAA,iBAAiB,CAACI,eAAlB,GAAoCc,WAApC;;AAEA,YAAItB,0BAAJ,EAAgC;AAC9BS,UAAAA,MAAM,CAACC,IAAP,CAAYV,0BAAZ,EAAwCxK,OAAxC,CAAgD,UAACqD,GAAD,EAAS;AACvDuH,YAAAA,iBAAiB,CAACvH,GAAD,CAAjB,GAAyBmH,0BAA0B,CAACnH,GAAD,CAAnD;AACD,WAFD;AAGD;;AACDyE,QAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAEjH,UAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBqJ,UAAAA,0BAA0B,EAA1BA;AAAvB,SAA1C;AACA5C,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K;AADW,SAAD,CAAlB;AAIAhC,QAAAA,GAAG,CAAC6B,YAAJ,CAAiBC,UAAjB,CAA4BxI,mBAAmB,CAACN,GAAhD,EACG+I,IADH,CACQ,UAAC9H,YAAD,EAAkB;AACtB,cAAMkK,eAAe,GAAG,IAAIxE,IAAJ,GAAW8D,OAAX,EAAxB;AAEAxJ,UAAAA,YAAY,CAACsJ,sBAAb,CACEY,eADF,EAEEpB,iBAFF,EAIGhB,IAJH,CAIQ,UAAC7E,QAAD,EAAc;AAClB6C,YAAAA,kBAAkB,CAAC;AACjB5I,cAAAA,IAAI,EAAE6K;AADW,aAAD,CAAlB;AAIA,gBAAMpE,OAAO,GAAIV,QAAQ,IAAIA,QAAQ,CAACrC,MAAT,GAAkB,CAA/C;AACA,gBAAMgD,oBAAoB,GAAGD,OAAO,GAChCV,QAAQ,CAAC,CAAD,CAAR,CAAYjB,SADoB,GAEhC,IAFJ;AAGA8D,YAAAA,kBAAkB,CAAC;AACjB5I,cAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,cAAAA,OAAO,EAAE;AACPgE,gBAAAA,QAAQ,EAARA,QADO;AAEPU,gBAAAA,OAAO,EAAPA,OAFO;AAGPC,gBAAAA,oBAAoB,EAApBA,oBAHO;AAIPvE,gBAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,aAAD,CAAlB;AASAtB,YAAAA,UAAU,CAAC;AAAA,qBAAM4L,cAAA,EAAN;AAAA,aAAD,CAAV;AACD,WAvBH,EAwBG3B,KAxBH,CAwBS,UAAClK,KAAD,EAAW;AAChBkI,YAAAA,MAAM,CAAClI,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACD,WA1BH,EA2BG4L,OA3BH,CA2BW,YAAM;AACbrK,YAAAA,mBAAmB,CAACsH,UAApB;AACD,WA7BH;AA8BD,SAlCH;AAmCD;AACF,KA1DD;AA2DD,GA7DQ,EA6DN,CAACkD,QAAD,CA7DM,CAAT;AA8DD;;ACtED,SAASM,iBAAT,cASG;AAAA,MARD9K,mBAQC,QARDA,mBAQC;AAAA,MAPDuE,oBAOC,QAPDA,oBAOC;AAAA,MAND8E,0BAMC,QANDA,0BAMC;AAAA,MAJD/E,OAIC,SAJDA,OAIC;AAAA,MAHDqC,MAGC,SAHDA,MAGC;AAAA,MAFDF,kBAEC,SAFDA,kBAEC;AAAA,MADDC,GACC,SADDA,GACC;AACD,SAAOqE,iBAAW,CAAC,UAACC,EAAD,EAAQ;AACzB,QAAI,CAAC1G,OAAL,EAAc;AAAE;AAAS;;AACzB,QAAMmF,iBAAiB,GAAG,IAAI/C,GAAG,CAAC6C,iBAAR,EAA1B;AACAE,IAAAA,iBAAiB,CAACC,cAAlB,GAAmC,EAAnC;AACAD,IAAAA,iBAAiB,CAACG,cAAlB,GAAmC,KAAnC;AACAH,IAAAA,iBAAiB,CAACI,eAAlB,GAAoC,IAApC;;AAEA,QAAIR,0BAAJ,EAAgC;AAC9BS,MAAAA,MAAM,CAACC,IAAP,CAAYV,0BAAZ,EAAwCxK,OAAxC,CAAgD,UAACqD,GAAD,EAAS;AACvDuH,QAAAA,iBAAiB,CAACvH,GAAD,CAAjB,GAAyBmH,0BAA0B,CAACnH,GAAD,CAAnD;AACD,OAFD;AAGD;;AACDyE,IAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAEjH,MAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBqJ,MAAAA,0BAA0B,EAA1BA;AAAvB,KAA1C;AAEArJ,IAAAA,mBAAmB,CAACiK,sBAApB,CACE1F,oBAAoB,IAAI,IAAI8B,IAAJ,GAAW8D,OAAX,EAD1B,EAEEV,iBAFF,EAIGhB,IAJH,CAIQ,UAAC7E,QAAD,EAAc;AAClB,UAAMqH,eAAe,GAAIrH,QAAQ,IAAIA,QAAQ,CAACrC,MAAT,GAAkB,CAAvD;AACA,UAAM2J,aAAa,GAAGD,eAAe,GACjCrH,QAAQ,CAAC,CAAD,CAAR,CAAYjB,SADqB,GAEjC,IAFJ;AAIA8D,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,QAAAA,OAAO,EAAE;AACPgE,UAAAA,QAAQ,EAARA,QADO;AAEPU,UAAAA,OAAO,EAAE2G,eAFF;AAGP1G,UAAAA,oBAAoB,EAAE2G,aAHf;AAIPlL,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASAgL,MAAAA,EAAE,CAAC,CAACpH,QAAD,EAAW,IAAX,CAAD,CAAF;AACD,KApBH,EAqBG+E,KArBH,CAqBS,UAAClK,KAAD,EAAW;AAChBkI,MAAAA,MAAM,CAAClI,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgI,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,QAAAA,OAAO,EAAE;AACPgE,UAAAA,QAAQ,EAAE,EADH;AAEPU,UAAAA,OAAO,EAAE,KAFF;AAGPC,UAAAA,oBAAoB,EAAE,CAHf;AAIPvE,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASAgL,MAAAA,EAAE,CAAC,CAAC,IAAD,EAAOvM,KAAP,CAAD,CAAF;AACD,KAjCH,EAkCG4L,OAlCH,CAkCW,YAAM;AACbrK,MAAAA,mBAAmB,CAACsH,UAApB;AACD,KApCH;AAqCD,GAnDiB,EAmDf,CAACtH,mBAAD,EAAsBuE,oBAAtB,CAnDe,CAAlB;AAoDD;;AC9DD,IAAM4G,WAAW,GAAG,EAApB;;AAEA,SAASC,qBAAT,cASG;AAAA,MARDpL,mBAQC,QARDA,mBAQC;AAAA,MAPDyE,6BAOC,QAPDA,6BAOC;AAAA,MAND4E,0BAMC,QANDA,0BAMC;AAAA,MALD7E,eAKC,QALDA,eAKC;AAAA,MAHDmC,MAGC,SAHDA,MAGC;AAAA,MAFDF,kBAEC,SAFDA,kBAEC;AAAA,MADDC,GACC,SADDA,GACC;AACD,SAAOqE,iBAAW,CAAC,UAACC,EAAD,EAAQ;AACzB,QAAI,CAACxG,eAAL,EAAsB;AAAE;AAAS;;AACjC,QAAMiF,iBAAiB,GAAG,IAAI/C,GAAG,CAAC6C,iBAAR,EAA1B;AACAE,IAAAA,iBAAiB,CAACO,cAAlB,GAAmCmB,WAAnC;AACA1B,IAAAA,iBAAiB,CAACG,cAAlB,GAAmC,KAAnC;AACAH,IAAAA,iBAAiB,CAACI,eAAlB,GAAoC,IAApC;;AAEA,QAAIR,0BAAJ,EAAgC;AAC9BS,MAAAA,MAAM,CAACC,IAAP,CAAYV,0BAAZ,EAAwCxK,OAAxC,CAAgD,UAACqD,GAAD,EAAS;AACvDuH,QAAAA,iBAAiB,CAACvH,GAAD,CAAjB,GAAyBmH,0BAA0B,CAACnH,GAAD,CAAnD;AACD,OAFD;AAGD;;AACDyE,IAAAA,MAAM,CAACM,IAAP,CAAY,kCAAZ,EAAgD;AAAEjH,MAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBqJ,MAAAA,0BAA0B,EAA1BA;AAAvB,KAAhD;AAEArJ,IAAAA,mBAAmB,CAACiK,sBAApB,CACExF,6BAA6B,IAAI,IAAI4B,IAAJ,GAAW8D,OAAX,EADnC,EAEEV,iBAFF,EAIGhB,IAJH,CAIQ,UAAC7E,QAAD,EAAc;AAClB,UAAMyH,cAAc,GAAIzH,QAAQ,IAAIA,QAAQ,CAACrC,MAAtB,IAAiC,CAAxD;AACA,UAAM0J,eAAe,GAAII,cAAc,GAAG,CAAlB,IAClB5B,iBAAiB,CAACO,cAAlB,KAAqCqB,cAD3C;AAEA,UAAMH,aAAa,GAAGD,eAAe,GACjCrH,QAAQ,CAACA,QAAQ,CAACrC,MAAT,GAAkB,CAAnB,CAAR,CAA8BoB,SADG,GAEjC,IAFJ;AAGA8D,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,wBADW;AAEjB9I,QAAAA,OAAO,EAAE;AACPgE,UAAAA,QAAQ,EAARA,QADO;AAEPY,UAAAA,eAAe,EAAEyG,eAFV;AAGPxG,UAAAA,6BAA6B,EAAEyG,aAHxB;AAIPlL,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASAgL,MAAAA,EAAE,CAAC,CAACpH,QAAD,EAAW,IAAX,CAAD,CAAF;AACD,KArBH,EAsBG+E,KAtBH,CAsBS,UAAClK,KAAD,EAAW;AAChBkI,MAAAA,MAAM,CAAClI,KAAP,CAAa,yCAAb,EAAwDA,KAAxD;AACAgI,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,yBADW;AAEjB9I,QAAAA,OAAO,EAAE;AACPgE,UAAAA,QAAQ,EAAE,EADH;AAEPY,UAAAA,eAAe,EAAE,KAFV;AAGPC,UAAAA,6BAA6B,EAAE,CAHxB;AAIPzE,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASAgL,MAAAA,EAAE,CAAC,CAAC,IAAD,EAAOvM,KAAP,CAAD,CAAF;AACD,KAlCH,EAmCG4L,OAnCH,CAmCW,YAAM;AACbrK,MAAAA,mBAAmB,CAACsH,UAApB;AACD,KArCH;AAsCD,GApDiB,EAoDf,CAACtH,mBAAD,EAAsByE,6BAAtB,EAAqDD,eAArD,CApDe,CAAlB;AAqDD;;ACjED,SAAS8G,wBAAT,cAA2F;AAAA,MAAvDtL,mBAAuD,QAAvDA,mBAAuD;AAAA,MAAlCyG,kBAAkC,QAAlCA,kBAAkC;AAAA,MAAVE,MAAU,SAAVA,MAAU;AACzF,SAAOoE,iBAAW,CAAC,UAACzN,OAAD,EAAU0N,EAAV,EAAiB;AAClCrE,IAAAA,MAAM,CAACM,IAAP,CAAY,sDAAZ,EAAoE3J,OAApE;AADkC,QAE1B2C,YAF0B,GAET3C,OAFS,CAE1B2C,YAF0B;AAGlC0G,IAAAA,MAAM,CAACM,IAAP,CAAY,oEAAZ,EAAkFhH,YAAlF,EAHkC;;AAMlC,QAAIA,YAAY,KAAK,QAAjB,IAA6BA,YAAY,KAAK,SAAlD,EAA6D;AAC3D0G,MAAAA,MAAM,CAACM,IAAP,CAAY,iEAAZ,EAA+E3J,OAA/E;AACAmJ,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,4BADW;AAEjB9I,QAAAA,OAAO,EAAEtC,OAAO,CAACuI;AAFA,OAAD,CAAlB;;AAIA,UAAImF,EAAJ,EAAQ;AAAEA,QAAAA,EAAE;AAAK;;AACjB;AACD,KAdiC;;;AAiBlChL,IAAAA,mBAAmB,CAACuL,aAApB,CAAkCjO,OAAlC,EAA2C,UAACyL,GAAD,EAAS;AAClDpC,MAAAA,MAAM,CAACM,IAAP,CAAY,mEAAZ,EAAiFhH,YAAjF;;AACA,UAAI+K,EAAJ,EAAQ;AAAEA,QAAAA,EAAE,CAACjC,GAAD,CAAF;AAAU;;AACpB,UAAI,CAACA,GAAL,EAAU;AACRpC,QAAAA,MAAM,CAACM,IAAP,CAAY,+DAAZ,EAA6E3J,OAA7E;AACAmJ,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,kBADW;AAEjB9I,UAAAA,OAAO,EAAEtC,OAAO,CAACwC;AAFA,SAAD,CAAlB;AAID,OAND,MAMO;AACL6G,QAAAA,MAAM,CAACY,OAAP,CAAe,8DAAf,EAA+EwB,GAA/E;AACD;AACF,KAZD;AAaD,GA9BiB,EA8Bf,CAAC/I,mBAAD,EAAsByG,kBAAtB,CA9Be,CAAlB;AA+BD;;AC/BD,SAAS+E,wBAAT,cAQG;AAAA,MAPDxL,mBAOC,QAPDA,mBAOC;AAAA,MANDyG,kBAMC,QANDA,kBAMC;AAAA,MALDgF,yBAKC,QALDA,yBAKC;AAAA,MAHD9E,MAGC,SAHDA,MAGC;AAAA,MAFDzH,MAEC,SAFDA,MAEC;AAAA,MADDwH,GACC,SADDA,GACC;AACD,SAAOqE,iBAAW,CAAC,UAACjL,SAAD,EAAY4L,IAAZ,EAAkBV,EAAlB,EAAyB;AAC1C,QAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,UAAMC,MAAM,GAAG,IAAInF,GAAG,CAACoF,iBAAR,EAAf;AACAD,MAAAA,MAAM,CAACvO,OAAP,GAAiBsO,GAAjB;AACA,aAAOC,MAAP;AACD,KAJD;;AAMA,QAAME,iBAAiB,GAAGN,yBAAyB,IAC9C,OAAOA,yBAAP,KAAqC,UAD1C;;AAGA,QAAIM,iBAAJ,EAAuB;AACrBpF,MAAAA,MAAM,CAACM,IAAP,CAAY,0DAAZ,EAAwEwE,yBAAxE;AACD;;AAED,QAAMI,MAAM,GAAGJ,yBAAyB,GACpCA,yBAAyB,CAACC,IAAD,CADW,GAEpCC,mBAAmB,CAACD,IAAD,CAFvB;AAIA1L,IAAAA,mBAAmB,CAACgM,iBAApB,CAAsClM,SAAtC,EAAiD+L,MAAjD,EAAyD,UAACI,CAAD,EAAIrD,CAAJ,EAAU;AACjEjC,MAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C4E,MAA1C;AACA,UAAMK,UAAU,GAAGxF,GAAG,CAACyF,qBAAJ,EAAnB;AACA,UAAI7O,OAAO,GAAG2O,CAAd;AACA,UAAIlD,GAAG,GAAGH,CAAV;;AACA,UAAIsD,UAAJ,EAAgB;AACd5O,QAAAA,OAAO,GAAGsL,CAAV;AACAG,QAAAA,GAAG,GAAGkD,CAAN;AACD;;AACD,UAAIjB,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAACjC,GAAD,EAAMzL,OAAN,CAAF;AACD;;AACD,UAAI,CAACyL,GAAL,EAAU;AACRpC,QAAAA,MAAM,CAACM,IAAP,CAAY,oCAAZ,EAAkD3J,OAAlD;AACAmJ,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,kBADW;AAEjB9I,UAAAA,OAAO,EAAE;AACPH,YAAAA,OAAO,EAAEO,mBADF;AAEP1C,YAAAA,OAAO,EAAPA;AAFO;AAFQ,SAAD,CAAlB;AAOA4B,QAAAA,MAAM,CAACkN,OAAP,CACE7M,yBADF,EAEE;AACEjC,UAAAA,OAAO,EAAPA,OADF;AAEEmC,UAAAA,OAAO,EAAEO;AAFX,SAFF;AAOD,OAhBD,MAgBO;AACL2G,QAAAA,MAAM,CAACY,OAAP,CAAe,mCAAf,EAAoDwB,GAApD;AACD;AACF,KA/BD;AAgCD,GAlDiB,EAkDf,CAAC/I,mBAAmB,CAACN,GAArB,EAA0B+G,kBAA1B,EAA8CgF,yBAA9C,CAlDe,CAAlB;AAmDD;;AC7DD,SAASY,wBAAT,cAKG;AAAA,MAJDrM,mBAIC,QAJDA,mBAIC;AAAA,MAHDyG,kBAGC,QAHDA,kBAGC;AAAA,MADDE,MACC,SADDA,MACC;AACD,SAAOoE,iBAAW,CAAC,UAACuB,aAAD,EAAmB;AACpC3F,IAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsDqF,aAAtD;AADoC,QAE5B9O,WAF4B,GAEN8O,aAFM,CAE5B9O,WAF4B;AAAA,QAEf+O,IAFe,GAEND,aAFM,CAEfC,IAFe;;AAGpC,QAAID,aAAa,IAAI,OAAOA,aAAa,CAACE,YAArB,KAAsC,UAAvD,IACCF,aAAa,CAACE,YAAd,EADL,EAEE;AACA;AACAF,MAAAA,aAAa,CAACrM,YAAd,GAA6B,SAA7B;AACAwG,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,QAAAA,OAAO,EAAE0M;AAFQ,OAAD,CAAlB,CAHA;;AASA,UAAI9O,WAAW,KAAK,MAApB,EAA4B;AAC1BwC,QAAAA,mBAAmB,CAChByM,iBADH,CACqBH,aADrB,EAEG7D,IAFH,CAEQ,UAACnL,OAAD,EAAa;AACjBqJ,UAAAA,MAAM,CAACM,IAAP,CAAY,qCAAZ,EAAmD;AAAE3J,YAAAA,OAAO,EAAPA;AAAF,WAAnD;AACAmJ,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,qBADW;AAEjB9I,YAAAA,OAAO,EAAEtC;AAFQ,WAAD,CAAlB;AAID,SARH,EASGqL,KATH,CASS,UAACC,CAAD,EAAO;AACZjC,UAAAA,MAAM,CAACY,OAAP,CAAe,oCAAf,EAAqD;AAAEqB,YAAAA,CAAC,EAADA;AAAF,WAArD,EADY;;AAGZ0D,UAAAA,aAAa,CAACrM,YAAd,GAA6B,QAA7B;AACAwG,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,YAAAA,OAAO,EAAE0M;AAFQ,WAAD,CAAlB;AAID,SAjBH,EAD0B;;AAqB1BA,QAAAA,aAAa,CAACrM,YAAd,GAA6B,SAA7B;AACAwG,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,UAAAA,OAAO,EAAE0M;AAFQ,SAAD,CAAlB;AAIA;AACD;;AAED,UAAI9O,WAAW,KAAK,MAApB,EAA4B;AAC1BwC,QAAAA,mBAAmB,CAChB0M,iBADH,CACqBJ,aADrB,EACoCC,IADpC,EAEG9D,IAFH,CAEQ,UAACnL,OAAD,EAAa;AACjBqJ,UAAAA,MAAM,CAACM,IAAP,CAAY,0CAAZ,EAAwD;AAAE3J,YAAAA,OAAO,EAAPA;AAAF,WAAxD;AACAmJ,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,qBADW;AAEjB9I,YAAAA,OAAO,EAAEtC;AAFQ,WAAD,CAAlB;AAID,SARH,EASGqL,KATH,CASS,UAACC,CAAD,EAAO;AACZjC,UAAAA,MAAM,CAACY,OAAP,CAAe,yCAAf,EAA0D;AAAEqB,YAAAA,CAAC,EAADA;AAAF,WAA1D,EADY;;AAGZ0D,UAAAA,aAAa,CAACrM,YAAd,GAA6B,QAA7B;AACAwG,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,YAAAA,OAAO,EAAE0M;AAFQ,WAAD,CAAlB;AAID,SAjBH,EAD0B;;AAqB1BA,QAAAA,aAAa,CAACrM,YAAd,GAA6B,SAA7B;AACAwG,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,UAAAA,OAAO,EAAE0M;AAFQ,SAAD,CAAlB;AAID;AACF,KAnED,MAmEO;AACL;AACA;AACAK,MAAAA,OAAO,CAAClO,KAAR,CAAc,2BAAd;AACAkI,MAAAA,MAAM,CAACY,OAAP,CAAe,2BAAf,EAA4C+E,aAA5C;AACD;AACF,GA5EiB,EA4Ef,CAACtM,mBAAD,EAAsByG,kBAAtB,CA5Ee,CAAlB;AA6ED;;ACjFc,SAASmG,sBAAT,cAKZ;AAAA,MAL8C5M,mBAK9C,QAL8CA,mBAK9C;AAAA,MALmE6M,uBAKnE,QALmEA,uBAKnE;AAAA,MAJDnG,GAIC,SAJDA,GAIC;AAAA,MAHDC,MAGC,SAHDA,MAGC;AAAA,MAFDzH,MAEC,SAFDA,MAEC;AAAA,MADDuH,kBACC,SADDA,kBACC;AACD,MAAMqG,eAAe,GAAGC,YAAM,CAAC,IAAD,CAA9B;AAEA,MAAMC,WAAW,GAAGjC,iBAAW,CAC7B,YAAM;AACJ,QAAMW,IAAI,GAAGoB,eAAe,CAAC3F,OAAhB,CAAwB8F,KAArC;;AACA,QAAMtB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,UAAMtO,OAAO,GAAI,OAAOsO,GAAP,KAAe,QAAhB,GAA4BA,GAAG,CAACsB,IAAJ,EAA5B,GAAyCtB,GAAzD;AACA,UAAMC,MAAM,GAAG,IAAInF,GAAG,CAACoF,iBAAR,EAAf;AACAD,MAAAA,MAAM,CAACvO,OAAP,GAAiBA,OAAjB;AACA,aAAOuO,MAAP;AACD,KALD;;AAOA,QAAME,iBAAiB,GAAGc,uBAAuB,IAC5C,OAAOA,uBAAP,KAAmC,UADxC;;AAGA,QAAId,iBAAJ,EAAuB;AACrBpF,MAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsE4F,uBAAtE;AACD;;AAED,QAAMhB,MAAM,GAAGgB,uBAAuB,GAClCA,uBAAuB,CAACnB,IAAD,CADW,GAElCC,mBAAmB,CAACD,IAAD,CAFvB;AAIA/E,IAAAA,MAAM,CAACM,IAAP,CAAY,sCAAZ,EAAoD4E,MAApD;AACA,QAAMsB,UAAU,GAAGnN,mBAAmB,CAACoN,eAApB,CAAoCvB,MAApC,EAA4C,UAACwB,GAAD,EAAMtE,GAAN,EAAc;AAC3E,UAAMmD,UAAU,GAAGxF,GAAG,CAACyF,qBAAJ,EAAnB;AACA,UAAI7O,OAAO,GAAG+P,GAAd;AACA,UAAI5O,KAAK,GAAGsK,GAAZ;;AACA,UAAImD,UAAJ,EAAgB;AACd5O,QAAAA,OAAO,GAAGyL,GAAV;AACAtK,QAAAA,KAAK,GAAG4O,GAAR;AACD,OAP0E;AAS3E;;;AACA,UAAI5O,KAAJ,EAAW;AACTkI,QAAAA,MAAM,CAACY,OAAP,CAAe,kCAAf,EAAmD;AACjDjK,UAAAA,OAAO,EAAPA;AADiD,SAAnD;AAGAmJ,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,UAAAA,OAAO,EAAEtC;AAFQ,SAAD,CAAlB;AAIA;AACD;;AACDqJ,MAAAA,MAAM,CAACM,IAAP,CAAY,mCAAZ,EAAiD3J,OAAjD;AACAmJ,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,qBADW;AAEjB9I,QAAAA,OAAO,EAAEtC;AAFQ,OAAD,CAAlB;AAID,KAzBkB,CAAnB;AA0BA4B,IAAAA,MAAM,CAACkN,OAAP,CAAe7M,wBAAf,EAA0C;AACxC;;AAEAjC,MAAAA,OAAO,EAAE6P,UAH+B;AAIxC1N,MAAAA,OAAO,EAAEO;AAJ+B,KAA1C;AAMAtB,IAAAA,UAAU,CAAC;AAAA,aAAM4L,cAAA,EAAN;AAAA,KAAD,CAAV;AACD,GAvD4B,EAwD7B,CAACtK,mBAAD,EAAsB6M,uBAAtB,CAxD6B,CAA/B;AA2DA,SAAO,CAACC,eAAD,EAAkBE,WAAlB,CAAP;AACD;;ACpEc,SAASM,0BAAT,cASZ;AAAA,MARDtN,mBAQC,QARDA,mBAQC;AAAA,MAPDuN,uBAOC,QAPDA,uBAOC;AAAA,mCANDC,gBAMC;AAAA,MANDA,gBAMC,sCANkB,EAMlB;AAAA,MAJD9G,GAIC,SAJDA,GAIC;AAAA,MAHDC,MAGC,SAHDA,MAGC;AAAA,MAFDzH,MAEC,SAFDA,MAEC;AAAA,MADDuH,kBACC,SADDA,kBACC;AACD,MAAMuG,WAAW,GAAGjC,iBAAW,CAAC,UAACwB,IAAD,EAAU;AAAA,QAEtCkB,eAFsC,GAKpCD,gBALoC,CAEtCC,eAFsC;AAAA,QAGtCC,aAHsC,GAKpCF,gBALoC,CAGtCE,aAHsC;AAAA,QAItCC,cAJsC,GAKpCH,gBALoC,CAItCG,cAJsC;AAMxC,QAAMC,kBAAkB,GAAGL,uBAAuB,IAAI,OAAOA,uBAAP,KAAmC,UAAzF;AAEA,QAAMM,oBAAoB,GAAItB,IAAI,CAAC1O,IAAL,KAAc,WAAd,IAA6B0O,IAAI,CAAC1O,IAAL,KAAc,WAA3C,IAA0D0O,IAAI,CAAC1O,IAAL,KAAc,YAAtG;AACA,QAAMiQ,iBAAiB,GAAIL,eAAe,GAAG,CAAnB,IAA0BA,eAAe,GAAG,CAAtE,CATwC;;AAWxC,QAAMM,uBAAuB,GAAGzD,UAAA,CAAiBoD,aAAjB,KAC3BpD,UAAA,CAAiBqD,cAAjB,CADL;AAGA,QAAMK,gBAAgB,GAAGH,oBAAoB,KAAKC,iBAAiB,IAAIC,uBAA1B,CAA7C;;AAEA,QAAMpC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACsC,KAAD,EAAW;AACrC,UAAMpC,MAAM,GAAG,IAAInF,GAAG,CAACwH,iBAAR,EAAf;AACArC,MAAAA,MAAM,CAACU,IAAP,GAAc0B,KAAd;AACA,aAAOpC,MAAP;AACD,KAJD;;AAMA,QAAImC,gBAAJ,EAAsB;AAAE;AACtB,UAAI;AACF,YAAMG,KAAK,GAAG9P,QAAQ,CAAC+P,aAAT,CAAuB,KAAvB,CAAd;AACAD,QAAAA,KAAK,CAACE,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAAZ;;AACA4B,QAAAA,KAAK,CAACK,MAAN,GAAe,YAAM;AACnBF,UAAAA,GAAG,CAACG,eAAJ,CAAoBN,KAAK,CAACE,GAA1B;AACA,cAAMK,MAAM,GAAGrQ,QAAQ,CAAC+P,aAAT,CAAuB,QAAvB,CAAf;AACA,cAAMO,UAAU,GAAGR,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACU,KAA/C;AACA,cAAMC,WAAW,GAAGX,KAAK,CAACY,aAAN,IAAuBZ,KAAK,CAACa,MAAjD;AAEA,cAAIC,WAAW,GAAG3E,UAAA,CAAiBoD,aAAjB,KAAmCiB,UAArD;AACA,cAAIO,YAAY,GAAG5E,UAAA,CAAiBqD,cAAjB,KAAoCmB,WAAvD,CAPmB;AAUnB;AACA;;AACA,cAAIvC,IAAI,CAAC1O,IAAL,KAAc,WAAd,IAA6B,CAACkQ,uBAAlC,EAA2D;AACzDkB,YAAAA,WAAW,IAAIxB,eAAf;AACAyB,YAAAA,YAAY,IAAIzB,eAAhB;AACD;;AAEDiB,UAAAA,MAAM,CAACG,KAAP,GAAeI,WAAf;AACAP,UAAAA,MAAM,CAACM,MAAP,GAAgBE,YAAhB;AACA,cAAMC,OAAO,GAAGT,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAAhB;AACAD,UAAAA,OAAO,CAACE,SAAR,CAAkBlB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+Bc,WAA/B,EAA4CC,YAA5C;AACAC,UAAAA,OAAO,CAACT,MAAR,CAAeY,MAAf,CACE,UAACC,YAAD,EAAkB;AAChB,gBAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,CAACF,YAAD,CAAT,EAAyBhD,IAAI,CAACmD,IAA9B,EAAoC;AAAE7R,cAAAA,IAAI,EAAE0O,IAAI,CAAC1O;AAAb,aAApC,CAAvB;;AACA,gBAAI+P,kBAAJ,EAAwB;AACtBjH,cAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsEsG,uBAAtE;AACD;;AACD,gBAAM1B,MAAM,GAAG+B,kBAAkB,GAC7BL,uBAAuB,CAACiC,cAAD,CADM,GAE7B7D,mBAAmB,CAAC6D,cAAD,CAFvB;AAGA7I,YAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsD4E,MAAtD;AACA,gBAAM8D,cAAc,GAAG3P,mBAAmB,CAAC4P,eAApB,CACrB/D,MADqB,EAErB,UAACgE,QAAD,EAAW9G,GAAX,EAAmB;AACjB,kBAAMmD,UAAU,GAAGxF,GAAG,CAACyF,qBAAJ,EAAnB;;AADiB,0BAEQD,UAAU,GAAG,CAACnD,GAAD,EAAM8G,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAW9G,GAAX,CAFvC;AAAA;AAAA,kBAEVzL,OAFU;AAAA,kBAEDmB,KAFC;;AAGjB,kBAAIA,KAAJ,EAAW;AACT;AACA;AACAkI,gBAAAA,MAAM,CAAClI,KAAP,CAAa,uCAAb,EAAsDnB,OAAtD;AACAA,gBAAAA,OAAO,CAACwS,QAAR,GAAmBxB,GAAG,CAACC,eAAJ,CAAoBiB,cAApB,CAAnB;AACAlS,gBAAAA,OAAO,CAACiP,IAAR,GAAeiD,cAAf;AACA/I,gBAAAA,kBAAkB,CAAC;AACjB5I,kBAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,kBAAAA,OAAO,EAAEtC;AAFQ,iBAAD,CAAlB;AAIA;AACD;;AACDqJ,cAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsD3J,OAAtD;AACAmJ,cAAAA,kBAAkB,CAAC;AACjB5I,gBAAAA,IAAI,EAAE6K,qBADW;AAEjB9I,gBAAAA,OAAO,EAAEtC;AAFQ,eAAD,CAAlB;AAID,aAtBoB,CAAvB;AAwBA4B,YAAAA,MAAM,CAACkN,OAAP,CAAe7M,wBAAf,EAA0C;AACxC;;AAEAjC,cAAAA,OAAO,yCACFqS,cADE;AAELjQ,gBAAAA,GAAG,EAAE4O,GAAG,CAACC,eAAJ,CAAoBiB,cAApB,CAFA;AAGL;AACAvP,gBAAAA,YAAY,EAAE;AAJT,gBAHiC;AASxCR,cAAAA,OAAO,EAAEO;AAT+B,aAA1C;AAWAtB,YAAAA,UAAU,CAAC;AAAA,qBAAM4L,cAAA,EAAN;AAAA,aAAD,EAA+B,IAA/B,CAAV;AACD,WA9CH,EA+CEiC,IAAI,CAAC1O,IA/CP,EAgDE4P,eAhDF;AAkDD,SAvED;AAwED,OA3ED,CA2EE,OAAOhP,KAAP,EAAc;AACdkI,QAAAA,MAAM,CAAClI,KAAP,CAAa,uCAAb;AACD;AACF,KA/ED,MA+EO;AAAE;AACP,UAAImP,kBAAJ,EAAwB;AACtBjH,QAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsEsG,uBAAtE;AACD;;AACD,UAAM1B,MAAM,GAAG0B,uBAAuB,GAClCA,uBAAuB,CAAChB,IAAD,CADW,GAElCZ,mBAAmB,CAACY,IAAD,CAFvB;AAGA5F,MAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsD4E,MAAtD;AAEA,UAAMsB,UAAU,GAAGnN,mBAAmB,CAAC4P,eAApB,CAAoC/D,MAApC,EAA4C,UAACgE,QAAD,EAAW9G,GAAX,EAAmB;AAChF,YAAMmD,UAAU,GAAGxF,GAAG,CAACyF,qBAAJ,EAAnB;;AADgF,oBAEvDD,UAAU,GAAG,CAACnD,GAAD,EAAM8G,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAW9G,GAAX,CAFwB;AAAA;AAAA,YAEzEzL,OAFyE;AAAA,YAEhEmB,KAFgE;;AAGhF,YAAIA,KAAJ,EAAW;AACT;AACA;AACAkI,UAAAA,MAAM,CAAClI,KAAP,CAAa,uCAAb,EAAsDnB,OAAtD;AACAA,UAAAA,OAAO,CAACwS,QAAR,GAAmBxB,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAAnB;AACAjP,UAAAA,OAAO,CAACiP,IAAR,GAAeA,IAAf;AACA9F,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K,sBADW;AAEjB9I,YAAAA,OAAO,EAAEtC;AAFQ,WAAD,CAAlB;AAIA;AACD;;AACDqJ,QAAAA,MAAM,CAACM,IAAP,CAAY,mCAAZ,EAAiD3J,OAAjD;AACAmJ,QAAAA,kBAAkB,CAAC;AACjB5I,UAAAA,IAAI,EAAE6K,qBADW;AAEjB9I,UAAAA,OAAO,EAAEtC;AAFQ,SAAD,CAAlB;AAID,OApBkB,CAAnB;AAqBA4B,MAAAA,MAAM,CAACkN,OAAP,CAAe7M,wBAAf,EAA0C;AACxC;;AAEAjC,QAAAA,OAAO,yCACF6P,UADE;AAELzN,UAAAA,GAAG,EAAE4O,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAFA;AAGL;AACAtM,UAAAA,YAAY,EAAE;AAJT,UAHiC;AASxCR,QAAAA,OAAO,EAAEO;AAT+B,OAA1C;AAWAtB,MAAAA,UAAU,CAAC;AAAA,eAAM4L,cAAA,EAAN;AAAA,OAAD,EAA+B,IAA/B,CAAV;AACD;AACF,GAhJ8B,EAgJ5B,CAACtK,mBAAD,EAAsBuN,uBAAtB,EAA+CC,gBAA/C,CAhJ4B,CAA/B;AAiJA,SAAO,CAACR,WAAD,CAAP;AACD;;AC5Jc,SAAS+C,gBAAT,cAIZ;AAAA,MAJwCxM,WAIxC,QAJwCA,WAIxC;AAAA,MAJqDvD,mBAIrD,QAJqDA,mBAIrD;AAAA,MAHDyG,kBAGC,SAHDA,kBAGC;AAAA,MAFDC,GAEC,SAFDA,GAEC;AAAA,MADDC,MACC,SADDA,MACC;AACDE,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI,CAACH,GAAG,CAACM,cAAL,IAAuB,CAAChH,mBAAmB,CAACN,GAAhD,EAAqD;AACnD,aAAO,YAAM,EAAb;AACD,KAHa;;;AAKd,QAAMsQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,UAAMC,aAAa,GAAG1M,WAAW,CAAC2M,MAAZ,CAAmB,UAACC,WAAD,EAAc3Q,GAAd,EAAsB;AAC7D,YAAIA,GAAG,CAACM,SAAJ,KAAkB,CAAtB,EAAyB;AACvB,wDACKqQ,WADL,0CAEG3Q,GAAG,CAACM,SAFP,EAEmBwK,eAAA,CAAsB9K,GAAtB,EAA2BQ,mBAA3B,CAFnB;AAID;;AACD,eAAOmQ,WAAP;AACD,OARqB,EAQnB,EARmB,CAAtB;AASA1J,MAAAA,kBAAkB,CAAC;AACjB5I,QAAAA,IAAI,EAAE6K,eADW;AAEjB9I,QAAAA,OAAO,EAAEqQ;AAFQ,OAAD,CAAlB;AAID,KAdD;;AAeA,QAAI1M,WAAW,CAAChC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1ByO,MAAAA,aAAa;AACd;;AAED,QAAM/Q,UAAU,GAAGe,mBAAmB,CAACN,GAAvC;AACA,QAAM0Q,OAAO,GAAG,IAAI1J,GAAG,CAACM,cAAR,EAAhB;;AACA,QAAMqJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,CAAD,EAAO;AACjC,UAAIrR,UAAU,KAAKqR,CAAC,CAAC5Q,GAArB,EAA0B;AACxBsQ,QAAAA,aAAa;AACd;AACF,KAJD;;AAKAI,IAAAA,OAAO,CAACG,wBAAR,GAAmCF,mBAAnC;AACAD,IAAAA,OAAO,CAACI,oBAAR,GAA+BH,mBAA/B,CAhCc;;AAkCd,QAAMI,SAAS,GAAG1J,4BAAM,EAAxB;AACAJ,IAAAA,MAAM,CAACM,IAAP,CAAY,8DAAZ,EAA4EwJ,SAA5E;AACA/J,IAAAA,GAAG,CAAC0B,iBAAJ,CAAsBqI,SAAtB,EAAiCL,OAAjC;AACA,WAAO,YAAM;AACX,UAAI1J,GAAG,IAAIA,GAAG,CAAC2B,oBAAf,EAAqC;AACnC1B,QAAAA,MAAM,CAACM,IAAP,CAAY,8DAAZ,EAA4EwJ,SAA5E;AACA/J,QAAAA,GAAG,CAAC2B,oBAAJ,CAAyBoI,SAAzB;AACD;AACF,KALD;AAMD,GA3CQ,EA2CN,CAAClN,WAAD,EAAcvD,mBAAd,CA3CM,CAAT;AA4CD;;AClDD,IAAM0Q,cAAc,GAAGC,cAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAEpDC,QAFoD,GAQlDF,KARkD,CAEpDE,QAFoD;AAAA,MAGpDlC,KAHoD,GAQlDgC,KARkD,CAGpDhC,KAHoD;AAAA,MAIpDG,MAJoD,GAQlD6B,KARkD,CAIpD7B,MAJoD;AAAA,MAKpDgC,QALoD,GAQlDH,KARkD,CAKpDG,OALoD;AAAA,MAMpDC,QANoD,GAQlDJ,KARkD,CAMpDI,QANoD;AAAA,MAOpDC,SAPoD,GAQlDL,KARkD,CAOpDK,SAPoD;AAUtD,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;AACA,SACEP;AACE,IAAA,GAAG,EAAEG,GADP;AAEE,IAAA,SAAS,oCAA6BG,QAAQ,GAAG,YAAH,GAAkB,EAAvD,cAA6DE,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB,CAA7D,CAFX;AAGE,IAAA,KAAK,EAAE;AACLzC,MAAAA,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,aAA+BA,KAAK,CAAC0C,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,IAAqB,CAApD,oBAA+D1C,KAAK,GAAG,CAAvE,OADF;AAELG,MAAAA,MAAM,EAAE,OAAOA,MAAP,KAAkB,QAAlB,aAAgCA,MAAM,CAACuC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,IAAsB,CAAtD,oBAAiEvC,MAAM,GAAG,CAA1E;AAFH,KAHT;AAOE,IAAA,OAAO,EAAE,iBAACpG,CAAD;AAAA,aAAOoI,QAAO,CAACpI,CAAD,CAAd;AAAA,KAPX;AAQE,IAAA,IAAI,EAAC,QARP;AASE,IAAA,SAAS,EAAE,mBAACA,CAAD;AAAA,aAAOoI,QAAO,CAACpI,CAAD,CAAd;AAAA,KATb;AAUE,IAAA,QAAQ,EAAE;AAVZ,KAYE+H;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,QADH,CAZF,CADF;AAkBD,CA7BsB,CAAvB;AA+BAL,cAAc,CAACc,SAAf,GAA2B;AACzBT,EAAAA,QAAQ,EAAEU,SAAS,CAACC,OAAV,CAAkBC,UADH;AAEzBX,EAAAA,OAAO,EAAES,SAAS,CAACG,IAFM;AAGzBX,EAAAA,QAAQ,EAAEQ,SAAS,CAACI,IAHK;AAIzBhD,EAAAA,KAAK,EAAE4C,SAAS,CAACK,SAAV,CAAoB,CACzBL,SAAS,CAACM,MADe,EAEzBN,SAAS,CAACO,MAFe,CAApB,CAJkB;AAQzBhD,EAAAA,MAAM,EAAEyC,SAAS,CAACK,SAAV,CAAoB,CAC1BL,SAAS,CAACM,MADgB,EAE1BN,SAAS,CAACO,MAFgB,CAApB,CARiB;AAYzBd,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB;AAZc,CAA3B;AAkBAtB,cAAc,CAACwB,YAAf,GAA8B;AAC5BjB,EAAAA,QAAQ,EAAE,KADkB;AAE5BpC,EAAAA,KAAK,EAAE,MAFqB;AAG5BG,EAAAA,MAAM,EAAE,MAHoB;AAI5BgC,EAAAA,OAAO,EAAE,mBAAM,EAJa;AAK5BE,EAAAA,SAAS,EAAE;AALiB,CAA9B;;AC/Ce,SAASiB,yBAAT,cAOZ;AAAA,MANDjR,cAMC,QANDA,cAMC;AAAA,MANekR,cAMf,QANeA,cAMf;AAAA,MAJDzH,WAIC,SAJDA,WAIC;AAAA,MAHDhE,MAGC,SAHDA,MAGC;AAAA,MAFDpE,MAEC,SAFDA,MAEC;AAAA,MADD8P,YACC,SADDA,YACC;AACD,SAAOC,aAAO,CAAC;AAAA,WAAM,iBAMf;AAAA,UALJC,SAKI,SALJA,SAKI;AAAA,UAJJC,gBAII,SAJJA,gBAII;AAAA,UAHJlV,OAGI,SAHJA,OAGI;AAAA,UAFJmV,aAEI,SAFJA,aAEI;AAAA,wCADJC,gBACI;AAAA,UADJA,gBACI,sCADe,EACf;;AACJ,UAAI,CAAC/H,WAAD,IAAgB,EAAE4H,SAAS,IAAIC,gBAAb,IAAiClV,OAAjC,IAA4CmV,aAA9C,CAApB,EAAkF;AAChF9L,QAAAA,MAAM,CAACY,OAAP,CAAe,mDAAf;AACA,eAAO,IAAP;AACD;;AAED,aACEoJ,6BAACgC,oBAAD;AACE,QAAA,SAAS,EAAEJ,SADb;AAEE,QAAA,gBAAgB,EAAEC,gBAFpB;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,gBAAgB,EAAEC;AAJpB,SAOIL,YAAY,CAAC3O,GAAb,CAAiB,UAACkP,KAAD,EAAW;AAC1B,YAAMC,eAAe,GAAGvV,OAAO,CAACwV,SAAR,CACrBjR,MADqB,CACd,UAACkR,QAAD;AAAA,iBAAcA,QAAQ,CAAC7Q,GAAT,KAAiB0Q,KAAK,CAAC1Q,GAArC;AAAA,SADc,EAC4B,CAD5B,CAAxB;AAEA,YAAM8Q,SAAS,GAAGH,eAAe,GAC7B,EAAEA,eAAe,CAACI,OAAhB,CAAwB7M,OAAxB,CAAgC7D,MAAhC,IAA0C,CAA5C,CAD6B,GAE7B,KAFJ;AAGA,eACEoO,6BAAC,cAAD;AACE,UAAA,GAAG,EAAEiC,KAAK,CAAC1Q,GADb;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,MAAM,EAAC,MAHT;AAIE,UAAA,QAAQ,EAAE8Q,SAJZ;AAKE,UAAA,OAAO,EAAE,mBAAM;AACbP,YAAAA,aAAa;AACbL,YAAAA,cAAc,CAAC9U,OAAD,EAAUsV,KAAK,CAAC1Q,GAAhB,EAAqB8Q,SAArB,CAAd;AACD;AARH,WAUErC,6BAACuC,qBAAD;AACE,UAAA,GAAG,EAAEN,KAAK,CAAClT,GADb;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,MAAM,EAAC,MAHT;AAIE,UAAA,gBAAgB,EACdiR,6BAACwC,YAAD;AAAM,YAAA,KAAK,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAC,MAA1B;AAAiC,YAAA,IAAI,EAAEC,iBAAS,CAACC;AAAjD;AALJ,UAVF,CADF;AAqBD,OA3BD,CAPJ,CADF;AAuCD,KAnDc;AAAA,GAAD,EAmDX,CAACnS,cAAD,EAAiBkR,cAAjB,CAnDW,CAAd;AAoDD;;ACjEc,SAASkB,yBAAT,cAAwE;AAAA,MAAnCtT,mBAAmC,QAAnCA,mBAAmC;AAAA,MAAV2G,MAAU,SAAVA,MAAU;AACrF,SAAOoE,iBAAW,CAAC,UAACzN,OAAD,EAAU4E,GAAV,EAAe8Q,SAAf,EAA6B;AAC9C,QAAIA,SAAJ,EAAe;AACbhT,MAAAA,mBAAmB,CAACuT,cAApB,CAAmCjW,OAAnC,EAA4C4E,GAA5C,EACGuG,IADH,CACQ,UAAC4E,GAAD,EAAS;AACb1G,QAAAA,MAAM,CAACM,IAAP,CAAY,yBAAZ,EAAuCoG,GAAvC;AACD,OAHH,EAIG1E,KAJH,CAIS,UAACI,GAAD,EAAS;AACdpC,QAAAA,MAAM,CAACY,OAAP,CAAe,wBAAf,EAAyCwB,GAAzC;AACD,OANH;AAOA;AACD;;AACD/I,IAAAA,mBAAmB,CAACwT,WAApB,CAAgClW,OAAhC,EAAyC4E,GAAzC,EACGuG,IADH,CACQ,UAAC4E,GAAD,EAAS;AACb1G,MAAAA,MAAM,CAACM,IAAP,CAAY,sBAAZ,EAAoCoG,GAApC;AACD,KAHH,EAIG1E,KAJH,CAIS,UAACI,GAAD,EAAS;AACdpC,MAAAA,MAAM,CAACY,OAAP,CAAe,qBAAf,EAAsCwB,GAAtC;AACD,KANH;AAOD,GAlBiB,EAkBf,CAAC/I,mBAAD,CAlBe,CAAlB;AAmBD;;ACTc,SAASyT,aAAT,OAIZ;AAAA,MAHDnW,OAGC,QAHDA,OAGC;AAAA,MAFDoW,MAEC,QAFDA,MAEC;AAAA,MADDxC,SACC,QADDA,SACC;AACD,MAAMC,kBAAkB,GAAIC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAD,GAA6BA,SAA7B,GAAyC,CAACA,SAAD,CAApE;;AACA,MAAMyC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,YAAQD,MAAR;AACE,WAAKxT,sBAAiB,CAAC/C,MAAvB;AACA,WAAK+C,sBAAiB,CAAC9C,OAAvB;AAAgC;AAC9B,iBAAO,IAAP;AACD;;AACD,WAAK8C,sBAAiB,CAACC,IAAvB;AACA,WAAKD,sBAAiB,CAACO,SAAvB;AACA,WAAKP,sBAAiB,CAACI,IAAvB;AAA6B;AAC3B,iBACEqQ,6BAACiD,aAAD;AACE,YAAA,SAAS,EAAC,+BADZ;AAEE,YAAA,IAAI,EAAEC,uBAAe,CAACC,SAFxB;AAGE,YAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,aAKGvR,yBAAmB,CAACnF,OAAD,CALtB,CADF;AASD;;AACD;AAAS,eAAO,IAAP;AAlBX;AAoBD,GArBD;;AAuBA,MAAM2W,IAAI,GAAG;AACX7W,IAAAA,OAAO,EACLuT,6BAACuD,cAAD;AAAQ,MAAA,SAAS,EAAC,+BAAlB;AAAkD,MAAA,KAAK,EAAC,MAAxD;AAA+D,MAAA,MAAM,EAAC;AAAtE,OACEvD,6BAACwC,YAAD;AAAM,MAAA,IAAI,EAAEC,iBAAS,CAACe,OAAtB;AAA+B,MAAA,KAAK,EAAC,MAArC;AAA4C,MAAA,MAAM,EAAC,MAAnD;AAA0D,MAAA,SAAS,EAAEC,kBAAU,CAACC;AAAhF,MADF,CAFS;AAMXlU,IAAAA,IAAI,EAAEwQ,6BAACwC,YAAD;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAgD,MAAA,KAAK,EAAC,MAAtD;AAA6D,MAAA,MAAM,EAAC,MAApE;AAA2E,MAAA,IAAI,EAAEC,iBAAS,CAACkB,IAA3F;AAAiG,MAAA,SAAS,EAAEF,kBAAU,CAACjU;AAAvH,MANK;AAOXM,IAAAA,SAAS,EAAEkQ,6BAACwC,YAAD;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAgD,MAAA,KAAK,EAAC,MAAtD;AAA6D,MAAA,MAAM,EAAC,MAApE;AAA2E,MAAA,IAAI,EAAEC,iBAAS,CAACmB,QAA3F;AAAqG,MAAA,SAAS,EAAEH,kBAAU,CAACjU;AAA3H,MAPA;AAQXG,IAAAA,IAAI,EAAEqQ,6BAACwC,YAAD;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAgD,MAAA,KAAK,EAAC,MAAtD;AAA6D,MAAA,MAAM,EAAC,MAApE;AAA2E,MAAA,IAAI,EAAEC,iBAAS,CAACmB,QAA3F;AAAqG,MAAA,SAAS,EAAEH,kBAAU,CAAC9T;AAA3H,MARK;AASXnD,IAAAA,MAAM,EAAEwT,6BAACwC,YAAD;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAgD,MAAA,KAAK,EAAC,MAAtD;AAA6D,MAAA,MAAM,EAAC,MAApE;AAA2E,MAAA,IAAI,EAAEC,iBAAS,CAACoB,KAA3F;AAAkG,MAAA,SAAS,EAAEJ,kBAAU,CAACI;AAAxH;AATG,GAAb;AAYA,SACE7D;AAAK,IAAA,SAAS,EAAE,iDAAIQ,kBAAJ,IAAwB,yBAAxB,GAAmDG,IAAnD,CAAwD,GAAxD;AAAhB,KACG2C,IAAI,CAACP,MAAD,CADP,EAEE/C,wCAFF,EAGGgD,KAAK,CAACD,AAAD,CAHR,CADF;AAOD;AAEDD,aAAa,CAACjC,SAAd,GAA0B;AACxBlU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CADe;AAQxBjB,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MARM;AASxBd,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB;AATa,CAA1B;AAeAyB,aAAa,CAACvB,YAAd,GAA6B;AAC3B5U,EAAAA,OAAO,EAAE,IADkB;AAE3BoW,EAAAA,MAAM,EAAE,EAFmB;AAG3BxC,EAAAA,SAAS,EAAE;AAHgB,CAA7B;;ACxEA,IAAM0D,aAAa,GAAGjE,cAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAEnDI,SAFmD,GAQjDL,KARiD,CAEnDK,SAFmD;AAAA,MAGnDH,QAHmD,GAQjDF,KARiD,CAGnDE,QAHmD;AAAA,MAInD8D,KAJmD,GAQjDhE,KARiD,CAInDgE,KAJmD;AAAA,MAKnD5D,QALmD,GAQjDJ,KARiD,CAKnDI,QALmD;AAAA,MAMnD6D,KANmD,GAQjDjE,KARiD,CAMnDiE,KANmD;AAAA,MAOnD9D,OAPmD,GAQjDH,KARiD,CAOnDG,OAPmD;AAUrD,MAAMG,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;;AACA,MAAID,QAAQ,IAAI,CAAC6D,KAAjB,EAAwB;AACtB3D,IAAAA,kBAAkB,CAAC4D,OAAnB,CAA2B,mCAA3B;AACD,GAFD,MAEO,IAAID,KAAJ,EAAW;AAChB3D,IAAAA,kBAAkB,CAACzP,IAAnB,CAAwB,iCAAxB;AACD,GAFM,MAEA;AACLyP,IAAAA,kBAAkB,CAAC4D,OAAnB,CAA2B,yBAA3B;AACD;;AAED,SACEpE;AACE,IAAA,GAAG,EAAEG,GADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,SAAS,EAAEK,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB,CAJb;AAKE,IAAA,OAAO,EAAEN,OALX;AAME,IAAA,SAAS,EAAEA;AANb,KAQEL;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,QADH,CADF,EAIEJ,6BAACiD,aAAD;AAAO,IAAA,SAAS,EAAE7C,QAAQ,IAAI8D,KAAZ,GAAoB,uCAApB,GAA8D,EAAhF;AAAoF,IAAA,IAAI,EAAEhB,uBAAe,CAACC,SAA1G;AAAqH,IAAA,KAAK,EAAEC,mBAAW,CAACiB;AAAxI,KACGH,KADH,CAJF,CARF,CADF;AAmBD,CAtCqB,CAAtB;AAwCAD,aAAa,CAACpD,SAAd,GAA0B;AACxBT,EAAAA,QAAQ,EAAEU,SAAS,CAACC,OAAV,CAAkBC,UADJ;AAExBkD,EAAAA,KAAK,EAAEpD,SAAS,CAACK,SAAV,CAAoB,CACzBL,SAAS,CAACM,MADe,EAEzBN,SAAS,CAACO,MAFe,CAApB,CAFiB;AAMxBf,EAAAA,QAAQ,EAAEQ,SAAS,CAACI,IANI;AAOxBX,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CAPa;AAWxB8C,EAAAA,KAAK,EAAErD,SAAS,CAACI,IAXO;AAYxBb,EAAAA,OAAO,EAAES,SAAS,CAACG;AAZK,CAA1B;AAeAgD,aAAa,CAAC1C,YAAd,GAA6B;AAC3BhB,EAAAA,SAAS,EAAE,EADgB;AAE3B2D,EAAAA,KAAK,EAAE,EAFoB;AAG3B5D,EAAAA,QAAQ,EAAE,KAHiB;AAI3B6D,EAAAA,KAAK,EAAE,KAJoB;AAK3B9D,EAAAA,OAAO,EAAE,mBAAM;AALY,CAA7B;;ACtDA,IAAMiE,UAAU,GAAG,kBAAnB;AAEA,AAAe,SAASC,OAAT,OAGZ;AAAA,MAFDhE,SAEC,QAFDA,SAEC;AAAA,MADDH,QACC,QADDA,QACC;AACD,MAAMI,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;AACAC,EAAAA,kBAAkB,CAAC4D,OAAnB,CAA2BE,UAA3B;AAEA,SACEtE;AAAK,IAAA,SAAS,EAAEQ,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB;AAAhB,KACEX,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAKqB,UAAL;AADX,KAGGlE,QAHH,CADF,CADF;AASD;AAEDmE,OAAO,CAAC1D,SAAR,GAAoB;AAClBN,EAAAA,SAAS,EAAEO,SAAS,CAACO,MADH;AAElBjB,EAAAA,QAAQ,EAAEU,SAAS,CAACK,SAAV,CAAoB,CAC5BL,SAAS,CAACC,OADkB,EAE5BD,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF4B,EAG5BP,SAAS,CAACO,MAHkB,CAApB;AAFQ,CAApB;AASAkD,OAAO,CAAChD,YAAR,GAAuB;AACrBhB,EAAAA,SAAS,EAAE,EADU;AAErBH,EAAAA,QAAQ,EAAE;AAFW,CAAvB;;AC/BA,IAAMkE,YAAU,GAAG,0BAAnB;AACA,IAAME,kBAAkB,GAAG,CAA3B;AAEA,AAAe,SAASC,cAAT,OAKZ;AAAA,MAJDlE,SAIC,QAJDA,SAIC;AAAA,MAHDH,QAGC,QAHDA,QAGC;AAAA,MAFDsE,YAEC,QAFDA,YAEC;AACD,MAAMlE,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,KACtB+D,YADsB,gDACP/D,SADO,KAEvB,CAAC+D,YAAD,EAAa/D,SAAb,CAFJ;;AADC,kBAI+CoE,cAAQ,CAAC,KAAD,CAJvD;AAAA;AAAA,MAIMC,gBAJN;AAAA,MAIwBC,mBAJxB;;AAKD,MAAMC,WAAW,GAAG1I,YAAM,CAAC,IAAD,CAA1B;AAEA,SACE4D;AACE,IAAA,SAAS,EAAEQ,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB,CADb;AAEE,IAAA,WAAW,EAAE,uBAAM;AAAEkE,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA4B,KAFnD;AAGE,IAAA,OAAO,EAAE,mBAAM;AAAEA,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA4B,KAH/C;AAIE,IAAA,UAAU,EAAE,sBAAM;AAAEA,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAA6B,KAJnD;AAKE,IAAA,MAAM,EAAE,kBAAM;AAAEA,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAA6B;AAL/C,KAOE7E;AACE,IAAA,SAAS,YAAKsE,YAAL,eADX;AAEE,IAAA,GAAG,EAAEQ;AAFP,KAIG1E,QAJH,CAPF,EAcIwE,gBAAgB,IACd5E;AACE,IAAA,SAAS,YAAKsE,YAAL,oBADX;AAEE,IAAA,KAAK,EAAE;AACLS,MAAAA,MAAM,wBAAiBP,kBAAjB;AADD;AAFT,KAMExE;AACE,IAAA,SAAS,YAAKsE,YAAL;AADX,KAGEtE;AACE,IAAA,SAAS,YAAKsE,YAAL,8CADX;AAEE,IAAA,KAAK,EAAE;AACLU,MAAAA,IAAI,EAAEF,WAAW,CAACtO,OAAZ,mBAA+BsO,WAAW,CAACtO,OAAZ,CAAoByO,WAApB,GAAkC,CAAjE;AADD;AAFT,KAMGP,YANH,CAHF,CANF,CAfN,CADF;AAuCD;AAEDD,cAAc,CAAC5D,SAAf,GAA2B;AACzBN,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CADc;AAKzBjB,EAAAA,QAAQ,EAAEU,SAAS,CAACC,OAAV,CAAkBC,UALH;AAMzB0D,EAAAA,YAAY,EAAE5D,SAAS,CAACK,SAAV,CAAoB,CAChCL,SAAS,CAACC,OADsB,EAEhCD,SAAS,CAACG,IAFsB,CAApB,EAGXD;AATsB,CAA3B;AAWAyD,cAAc,CAAClD,YAAf,GAA8B;AAC5BhB,EAAAA,SAAS,EAAE;AADiB,CAA9B;;AC3De,SAAS2E,cAAT,OAQZ;AAAA,MAPD3E,SAOC,QAPDA,SAOC;AAAA,MAND3O,MAMC,QANDA,MAMC;AAAA,MALDjF,OAKC,QALDA,OAKC;AAAA,MAJDwY,WAIC,QAJDA,WAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFD3D,cAEC,QAFDA,cAEC;AAAA,MADD4D,sBACC,QADDA,sBACC;AACD,MAAM7E,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;AACAC,EAAAA,kBAAkB,CAAC4D,OAAnB,CAA2B,0BAA3B;AACA,MAAMkB,sBAAsB,GAAGD,sBAA/B;AACA,MAAME,UAAU,GAAG,MAAnB;AACA,MAAMpH,WAAW,GAAG,MAApB;AACA,MAAMqH,mBAAmB,GAAGpJ,YAAM,CAAC,IAAD,CAAlC;AANC,2BAO0BzP,OAP1B,CAOOwV,SAPP;AAAA,MAOOA,SAPP,mCAOmB,EAPnB;AAQD,MAAMsD,gBAAgB,GAAGtD,SAAzB;;AARC,oBASqBuD,gBAAU,CAACC,uCAAD,CAT/B;AAAA,MASOC,SATP,eASOA,SATP;;AAWD,SACE5F;AAAK,IAAA,SAAS,EAAEQ,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB;AAAhB,KACEX;AAAK,IAAA,SAAS,EAAC;AAAf,KAEIyF,gBAAgB,IACdA,gBAAgB,CAAC1S,GAAjB,CAAqB,UAACqP,QAAD,EAAc;AAAA,4BACRA,QADQ,CACzBE,OADyB;AAAA,QACzBA,OADyB,kCACf,EADe;AAEjC,QAAMuD,QAAQ,GAAGV,WAAW,CAACW,GAAZ,CAAgB1D,QAAQ,CAAC7Q,GAAzB,KAAiC,EAAlD;AACA,QAAMwU,gBAAgB,GAAGzD,OAAO,CAAC1R,MAAjC;AACA,QAAMoV,WAAW,GAAG,EAAE1D,OAAO,CAAC7M,OAAR,CAAgB7D,MAAhB,IAA0B,CAA5B,CAApB;AACA,QAAMqU,SAAS,GAAG3D,OAAO,CACtBpR,MADe,CACR,UAACgV,aAAD;AAAA,aAAmBA,aAAa,KAAKtU,MAArC;AAAA,KADQ,EAEfmB,GAFe,CAEX,UAACmT,aAAD;AAAA,aACHd,UAAU,CAACU,GAAX,CAAeI,aAAf,KAAiCN,SAAS,CAACO,oBADxC;AAAA,KAFW,CAAlB;AAKA,QAAMC,cAAc,GAAIH,SAAS,CAACrV,MAAV,GAAmB,CAApB,GACnBgV,SAAS,CAACS,gBADS,GACUT,SAAS,CAACU,YAD3C;AAEA,WACEtG,6BAAC,cAAD;AACE,MAAA,SAAS,EAAC,0CADZ;AAEE,MAAA,GAAG,EAAEoC,QAAQ,CAAC7Q,GAFhB;AAGE,MAAA,YAAY,EACV+Q,OAAO,CAAC1R,MAAR,GAAiB,CAAjB,IACEoP,6BAAC,OAAD,QACEA,sEAGMiG,SAAS,CAACtF,IAAV,CAAe,IAAf,CAHN,SAKMqF,WAAW,GACPI,cADO,GAEP,EAPV,EADF;AALN,OAqBEpG,6BAAC,aAAD;AACE,MAAA,KAAK,EAAE+F,gBADT;AAEE,MAAA,QAAQ,EAAEC,WAFZ;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMvE,cAAc,CAAC9U,OAAD,EAAUyV,QAAQ,CAAC7Q,GAAnB,EAAwByU,WAAxB,CAApB;AAAA;AAHX,OAKEhG,6BAACuC,qBAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,GAAG,EAAEsD,QAFP;AAGE,MAAA,KAAK,EAAEN,UAHT;AAIE,MAAA,MAAM,EAAEpH,WAJV;AAKE,MAAA,gBAAgB,EACd6B,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAE+C,UADT;AAEE,QAAA,MAAM,EAAEpH,WAFV;AAGE,QAAA,IAAI,EAAEsE,iBAAS,CAACC;AAHlB;AANJ,MALF,CArBF,CADF;AA2CD,GAvDD,CAHN,EA8DK+C,gBAAgB,CAAC7U,MAAjB,GAA0BuU,WAAW,CAACoB,IAAvC,IAEEvG,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAAC,aAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,OAAO,EAAEyG,cAFX;AAGE,QAAA,SAAS,EAAC,8CAHZ;AAIE,QAAA,GAAG,EAAEjB;AAJP,SAMExF,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAE+C,UADT;AAEE,QAAA,MAAM,EAAEpH,WAFV;AAGE,QAAA,SAAS,EAAEsF,kBAAU,CAACiD,eAHxB;AAIE,QAAA,IAAI,EAAEjE,iBAAS,CAACkE;AAJlB,QANF,CADW;AAAA,KADf;AAgBE,IAAA,SAAS,EAAE,mBAAC7E,aAAD;AAAA,aACT9B,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAE6Y,mBAFb;AAGE,QAAA,gBAAgB,EAAEA,mBAHpB;AAIE,QAAA,aAAa,EAAE1D,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADS;AAAA;AAhBb,IAhEN,CADF,CADF;AAiGD;AAED1B,cAAc,CAACrE,SAAf,GAA2B;AACzBjP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MADO;AAEzBd,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CAFc;AAMzB1U,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB1E,IAAAA,SAAS,EAAErB,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAAlB;AADY,GAAhB,EAEN7F,UARsB;AASzBmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UATd;AAUzBoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAVa;AAWzBgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAXD;AAYzBoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG;AAZT,CAA3B;AAcAiE,cAAc,CAAC3D,YAAf,GAA8B;AAC5BhB,EAAAA,SAAS,EAAE,EADiB;AAE5B6E,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAFgB;AAG5BmD,EAAAA,MAAM,EAAE,EAHoB;AAI5B6P,EAAAA,cAAc,EAAE,0BAAM,EAJM;AAK5B4D,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AALI,CAA9B;;AC1Ie,SAAS0B,sBAAT,OAKZ;AAAA,MAJDpa,OAIC,QAJDA,OAIC;AAAA,MAHDqa,SAGC,QAHDA,SAGC;AAAA,MAFDzG,SAEC,QAFDA,SAEC;AAAA,MADD0G,QACC,QADDA,QACC;;AAAA,oBACqBvB,gBAAU,CAACC,uCAAD,CAD/B;AAAA,MACOC,SADP,eACOA,SADP;;AAED,MAAMsB,eAAe,GAAGhE,uBAAe,CAACiE,MAAxC;AACA,MAAMC,YAAY,GAAGH,QAAQ,GAAG7D,mBAAW,CAACC,cAAf,GAAgCD,mBAAW,CAACiE,WAAzE;AACA,SAAO1F,aAAO,CAAC;AAAA,WAAM,YAAM;AACzB,UAAM2F,YAAY,GAAG3a,OAAO,CAAC4a,KAAR,CAAc,IAAd,CAArB;AACA,UAAMC,cAAc,GAAGF,YAAY,CAChCvU,GADoB,CAChB,UAAC0U,IAAD;AAAA,eAAWA,IAAI,KAAK,EAAT,GAAcA,IAAd,GAAqBzH,wCAAhC;AAAA,OADgB,CAAvB;;AAEA,UAAIgH,SAAS,GAAG,CAAhB,EAAmB;AACjBQ,QAAAA,cAAc,CAACzW,IAAf,CACEiP,6BAACiD,aAAD;AACE,UAAA,GAAG,EAAE7M,4BAAM,EADb;AAEE,UAAA,SAAS,EAAEmK,SAFb;AAGE,UAAA,IAAI,EAAE2G,eAHR;AAIE,UAAA,KAAK,EAAEE;AAJT,sBAMOxB,SAAS,CAAC8B,cANjB,OADF;AAUD;;AACD,aAAOF,cAAP;AACD,KAjBc;AAAA,GAAD,EAiBX,CAAC7a,OAAD,EAAUqa,SAAV,EAAqBzG,SAArB,CAjBW,CAAd;AAkBD;;AChCD,IAAMoH,WAAW,GAAG,YAApB;AACA,IAAMC,WAAW,GAAG,YAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAGhB;AAAA,MAFJ1H,GAEI,QAFJA,GAEI;AAAA,MADJ2H,QACI,QADJA,QACI;;AACJ,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAI5H,GAAG,CAAC3J,OAAR,EAAiB;AACfsR,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAJD;;AAKA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAI7H,GAAG,CAAC3J,OAAR,EAAiB;AACfsR,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAJD;;AAMA5R,EAAAA,eAAS,CAAC,YAAM;AAAA,QACNM,OADM,GACM2J,GADN,CACN3J,OADM;AAEdA,IAAAA,OAAO,CAACyR,gBAAR,CAAyBN,WAAzB,EAAsCI,eAAtC;AACAvR,IAAAA,OAAO,CAACyR,gBAAR,CAAyBL,WAAzB,EAAsCI,cAAtC;AACA,WAAO,YAAM;AACXxR,MAAAA,OAAO,CAAC0R,mBAAR,CAA4BP,WAA5B,EAAyCI,eAAzC;AACAvR,MAAAA,OAAO,CAAC0R,mBAAR,CAA4BN,WAA5B,EAAyCI,cAAzC;AACD,KAHD;AAID,GARQ,CAAT;AASD,CAxBD;;ACkBA,IAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AACA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,cAAc,GAAG,KAAvB;AAEA,AAAe,SAASC,OAAT,CAAiBpI,KAAjB,EAAwB;AAAA,MAEnCqI,MAFmC,GAkBjCrI,KAlBiC,CAEnCqI,MAFmC;AAAA,MAGnC3W,MAHmC,GAkBjCsO,KAlBiC,CAGnCtO,MAHmC;AAAA,MAInCjF,OAJmC,GAkBjCuT,KAlBiC,CAInCvT,OAJmC;AAAA,MAKnC4T,SALmC,GAkBjCL,KAlBiC,CAKnCK,SALmC;AAAA,MAMnCiI,aANmC,GAkBjCtI,KAlBiC,CAMnCsI,aANmC;AAAA,MAOnCC,QAPmC,GAkBjCvI,KAlBiC,CAOnCuI,QAPmC;AAAA,MAQnCC,QARmC,GAkBjCxI,KAlBiC,CAQnCwI,QARmC;AAAA,MASnCC,UATmC,GAkBjCzI,KAlBiC,CASnCyI,UATmC;AAAA,MAUnC5F,MAVmC,GAkBjC7C,KAlBiC,CAUnC6C,MAVmC;AAAA,MAWnC/I,WAXmC,GAkBjCkG,KAlBiC,CAWnClG,WAXmC;AAAA,MAYnCmL,WAZmC,GAkBjCjF,KAlBiC,CAYnCiF,WAZmC;AAAA,MAanCC,UAbmC,GAkBjClF,KAlBiC,CAanCkF,UAbmC;AAAA,MAcnC3D,cAdmC,GAkBjCvB,KAlBiC,CAcnCuB,cAdmC;AAAA,MAenC4D,sBAfmC,GAkBjCnF,KAlBiC,CAenCmF,sBAfmC;AAAA,MAgBnCuD,QAhBmC,GAkBjC1I,KAlBiC,CAgBnC0I,QAhBmC;AAAA,MAiBnCC,WAjBmC,GAkBjC3I,KAlBiC,CAiBnC2I,WAjBmC;AAoBrC,MAAI,CAAClc,OAAL,EAAc,OAAO,IAAP;AACd,MAAM6T,kBAAkB,GAAIC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAD,GAA6BA,SAA7B,GAAyC,CAACA,SAAD,CAApE;AACAC,EAAAA,kBAAkB,CAACzP,IAAnB,2BAA2CwX,MAAM,GAAG,YAAH,GAAkB,YAAnE;AACA,MAAMO,2BAA2B,GAAG/B,sBAAsB,CAAC;AACzDpa,IAAAA,OAAO,EAAEA,OAAO,CAACA,OADwC;AAEzDqa,IAAAA,SAAS,EAAEra,OAAO,CAACqa,SAFsC;AAGzDzG,IAAAA,SAAS,EAAE;AAH8C,GAAD,CAA1D;AAKA,MAAMwI,2BAA2B,GAAGhC,sBAAsB,CAAC;AACzDpa,IAAAA,OAAO,EAAEA,OAAO,CAACA,OADwC;AAEzDqa,IAAAA,SAAS,EAAEra,OAAO,CAACqa,SAFsC;AAGzDzG,IAAAA,SAAS,EAAE,4BAH8C;AAIzD0G,IAAAA,QAAQ,EAAE;AAJ+C,GAAD,CAA1D;AAOA,SACEjH;AAAK,IAAA,SAAS,EAAE,iDAAIQ,kBAAJ,IAAwB,kBAAxB,GAA4CG,IAA5C,CAAiD,GAAjD;AAAhB,KAEI4H,MAAM,GAEFvI,6BAAC,mBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,OAAO,EAAEjF,OAFX;AAGE,IAAA,aAAa,EAAE6b,aAHjB;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,UAAU,EAAEC,UANd;AAOE,IAAA,MAAM,EAAE5F,MAPV;AAQE,IAAA,WAAW,EAAE/I,WARf;AASE,IAAA,WAAW,EAAEmL,WATf;AAUE,IAAA,UAAU,EAAEC,UAVd;AAWE,IAAA,cAAc,EAAE3D,cAXlB;AAYE,IAAA,mBAAmB,EAAEqH,2BAZvB;AAaE,IAAA,sBAAsB,EAAEzD,sBAb1B;AAcE,IAAA,QAAQ,EAAEuD,QAdZ;AAeE,IAAA,WAAW,EAAEC;AAff,IAFE,GAqBF7I,6BAAC,mBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,OAAO,EAAEjF,OAFX;AAGE,IAAA,WAAW,EAAEqN,WAHf;AAIE,IAAA,WAAW,EAAEmL,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,mBAAmB,EAAEsH,2BAPvB;AAQE,IAAA,sBAAsB,EAAE1D,sBAR1B;AASE,IAAA,QAAQ,EAAEuD,QATZ;AAUE,IAAA,WAAW,EAAEC;AAVf,IAvBR,CADF;AAwCD;AAEDP,OAAO,CAACzH,SAAR,GAAoB;AAClB0H,EAAAA,MAAM,EAAEzH,SAAS,CAACI,IADA;AAElBuH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAFF;AAGlBtP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAHA;AAIlB1U,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,EAMLhD,UAVc;AAWlBT,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CAXO;AAelBqH,EAAAA,QAAQ,EAAE5H,SAAS,CAACG,IAfF;AAgBlB8B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAhBA;AAiBlBsH,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAjBJ;AAkBlBuH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAlBP;AAmBlBjH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAnBV;AAoBlBmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CApBK;AAqBlB2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CArBM;AAsBlBgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAtBR;AAuBlBoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAvBhB;AAwBlB2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAxBF;AAyBlB2H,EAAAA,WAAW,EAAE/H,SAAS,CAACI;AAzBL,CAApB;AA4BAoH,OAAO,CAAC/G,YAAR,GAAuB;AACrBgH,EAAAA,MAAM,EAAE,KADa;AAErBE,EAAAA,QAAQ,EAAE,KAFW;AAGrB7W,EAAAA,MAAM,EAAE,EAHa;AAIrB4W,EAAAA,aAAa,EAAEL,IAJM;AAKrB5H,EAAAA,SAAS,EAAE,EALU;AAMrBmI,EAAAA,QAAQ,EAAEP,IANW;AAOrBQ,EAAAA,UAAU,EAAER,IAPS;AAQrBpF,EAAAA,MAAM,EAAE,EARa;AASrBoC,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EATQ;AAUrB2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAVS;AAWrBgT,EAAAA,cAAc,EAAE0G,IAXK;AAYrB9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA,GAZH;AAarBuD,EAAAA,QAAQ,EAAE,KAbW;AAcrBC,EAAAA,WAAW,EAAE;AAdQ,CAAvB;;AAiBA,SAASG,mBAAT,OAgBG;AAAA,MAfDpX,MAeC,QAfDA,MAeC;AAAA,MAdDjF,OAcC,QAdDA,OAcC;AAAA,MAbD+b,QAaC,QAbDA,QAaC;AAAA,MAZDD,QAYC,QAZDA,QAYC;AAAA,MAXDE,UAWC,QAXDA,UAWC;AAAA,MAVD5F,MAUC,QAVDA,MAUC;AAAA,MATDyF,aASC,QATDA,aASC;AAAA,MARDxO,WAQC,QARDA,WAQC;AAAA,MAPDmL,WAOC,QAPDA,WAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALD3D,cAKC,QALDA,cAKC;AAAA,MAJDwH,mBAIC,QAJDA,mBAIC;AAAA,MAHD5D,sBAGC,QAHDA,sBAGC;AAAA,MAFDuD,QAEC,QAFDA,QAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAMK,mBAAmB,GAAGD,mBAA5B;AACA,MAAM3D,sBAAsB,GAAGD,sBAA/B,CAFC;;AAID,MAAM8D,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMgN,kBAAkB,GAAGhN,YAAM,CAAC,IAAD,CAAjC;AACA,MAAMiN,cAAc,GAAGjN,YAAM,CAAC,IAAD,CAA7B;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAMkN,aAAa,GAAGC,2BAAmB,CAACxG,MAAD,CAAzC;;AARC,kBASmC4B,cAAQ,CAAC,KAAD,CAT3C;AAAA;AAAA,MASM6E,UATN;AAAA,MASkBC,aATlB;;AAAA,mBAUmC9E,cAAQ,CAAC,KAAD,CAV3C;AAAA;AAAA,MAUM+E,UAVN;AAAA,MAUkBC,aAVlB;;AAAA,mBAW2ChF,cAAQ,CAAC,KAAD,CAXnD;AAAA;AAAA,MAWMiF,cAXN;AAAA,MAWsBC,iBAXtB;;AAaD,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,GAAG,EAAEmJ,UAFP;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,gBAAH,GAAsBC,cADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,gBAAH,GAAsBC;AAF3C;AAHT,KAQErI;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AACE,IAAA,SAAS,EAAC;AADZ,KAGEA;AAAK,IAAA,SAAS,EAAC,6BAAf;AAA6C,IAAA,GAAG,EAAE6B;AAAlD,KACE7B,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,SAAS,EAAC,mCADZ;AAEE,QAAA,GAAG,EAAEb,cAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE,mBAAM;AACb5C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SATH;AAUE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAZH,SAcE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAdF,CADW;AAAA,KADf;AAwBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEjB,cALb;AAME,QAAA,gBAAgB,EAAExH,gBANpB;AAOE,QAAA,aAAa,EAAEC,aAPjB;AAQE,QAAA,QAAQ;AARV,SAWIwH,aAAa,IACXtJ,6BAACuK,cAAD;AACE,QAAA,SAAS,EAAC,6BADZ;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAEC,UAAAA,uBAAe,CAAC7d,OAAO,CAACA,OAAT,CAAf;AAAkCmV,UAAAA,aAAa;AAAK;AAFvE,gBAZN,EAqBIwH,aAAa,IACXtJ,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBC,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACA5G,UAAAA,aAAa;AACd;AALH,gBAtBN,EAkCKnV,OAAO,IAAIA,OAAO,CAACkP,YAAnB,IAAmClP,OAAO,CAACkP,YAAR,EAApC,IACEmE,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb/B,UAAAA,aAAa,CAAC7b,OAAD,CAAb;AACAmV,UAAAA,aAAa;AACd;AAJH,kBAnCN,EA6CE9B,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA7G,UAAAA,aAAa;AACd;AALH,kBA7CF,CADF;AAyDD;AAtFH,IADF,EA0FKwH,aAAa,IAAItP,WAAjB,IAAiCmL,WAAW,CAACoB,IAAZ,GAAmB,CAArD,IAEEvG,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,GAAG,EAAEd,kBAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE,mBAAM;AACb3C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SATH;AAUE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAZH,SAcE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAdF,CADW;AAAA,KADf;AAwBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAEyc,kBAFb;AAGE,QAAA,gBAAgB,EAAEvH,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AAtCH,IA5FN,CAHF,EA2II,CAACiC,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC,aAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW;AAFV,IADF,CA5IN,CADF,EAsJE/C;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,8DADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACqH;AAHrB,KAKEzK,6BAAC,mBAAD,OALF,CADF,CADF,EAWKhG,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAAhE,IAEEoP,6BAAC,cAAD;AACE,IAAA,SAAS,EAAC,6DADZ;AAEE,IAAA,MAAM,EAAEpO,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IAbN,CADF,CAtJF,CARF,CADF;AA6LD;;AAED,SAASqF,mBAAT,QAWG;AAAA,MAVD9Y,MAUC,SAVDA,MAUC;AAAA,MATDjF,OASC,SATDA,OASC;AAAA,MARDqN,WAQC,SARDA,WAQC;AAAA,MAPDmL,WAOC,SAPDA,WAOC;AAAA,MANDC,UAMC,SANDA,UAMC;AAAA,MALD3D,cAKC,SALDA,cAKC;AAAA,MAJDwH,mBAIC,SAJDA,mBAIC;AAAA,MAHD5D,sBAGC,SAHDA,sBAGC;AAAA,MAFDuD,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;AACD,MAAMK,mBAAmB,GAAGD,mBAA5B;AACA,MAAM3D,sBAAsB,GAAGD,sBAA/B;AACA,MAAM8D,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMgN,kBAAkB,GAAGhN,YAAM,CAAC,IAAD,CAAjC;AACA,MAAMiN,cAAc,GAAGjN,YAAM,CAAC,IAAD,CAA7B;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAMuO,SAAS,GAAGvO,YAAM,CAAC,IAAD,CAAxB;;AAPC,0BAWG4D,cAAK,CAAC0F,UAAN,CAAiBkF,wBAAjB,CAXH;AAAA,MASCC,kBATD,qBASCA,kBATD;AAAA,MAUCC,iBAVD,qBAUCA,iBAVD;;AAAA,mBAYmCnG,cAAQ,CAAC,KAAD,CAZ3C;AAAA;AAAA,MAYM6E,UAZN;AAAA,MAYkBC,aAZlB;;AAAA,mBAamC9E,cAAQ,CAAC,KAAD,CAb3C;AAAA;AAAA,MAaM+E,UAbN;AAAA,MAakBC,aAblB;;AAAA,oBAc2ChF,cAAQ,CAAC,KAAD,CAdnD;AAAA;AAAA,MAcMiF,cAdN;AAAA,MAcsBC,iBAdtB;;AAeD,MAAMkB,qBAAqB,GAAG/Q,WAAW,IAAImL,WAAf,IAA+BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;AACA,MAAMyE,kBAAkB,GAAIhR,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAA3F;;AAEA,MAAMkZ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,GAAG,EAAEmJ,UADP;AAEE,IAAA,SAAS,EAAC,iCAFZ;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,gBAAH,GAAsBC,cADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,gBAAH,GAAsBC;AAF3C;AAHT,KAQErI;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI,CAAC6I,WAAD,IACE7I,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACiL,cAAD;AACE,QAAA,GAAG,EAAEN,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACE,kBAAL,EAAyB;AACvBpE,YAAAA,cAAc;AACf;AACF,SANH;AAOE,QAAA,SAAS,EAAC,+BAPZ;AAQE,QAAA,GAAG,EAAEyE,2BAAmB,CAACve,OAAD,CAR1B;AASE,QAAA,KAAK,EAAC,MATR;AAUE,QAAA,MAAM,EAAC;AAVT,QADW;AAAA,KADf;AAeE,IAAA,SAAS,EAAE,mBAACmV,aAAD;AAAA,aACT9B,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEK,SALb;AAME,QAAA,gBAAgB,EAAEA,SANpB;AAOE,QAAA,aAAa,EAAE7I,aAPjB;AAQE,QAAA,KAAK,EAAE;AAAEkI,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AART,SAWIa,iBAAiB,GACbA,iBAAiB,CAAC;AAClBK,QAAAA,IAAI,EAAExe,OAAO,CAACwF,MADI;AAElBkY,QAAAA,KAAK,EAAEvI;AAFW,OAAD,CADJ,GAMb9B,6BAACoL,iBAAD;AACE,QAAA,IAAI,EAAEze,OAAO,CAACwF,MADhB;AAEE,QAAA,SAAS,EAAE2P;AAFb,QAjBR,CADS;AAAA;AAfb,IAHN,EAgDI,CAAC8G,QAAD,IACE5I,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,oCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACmI,SAFxB;AAGE,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAHrB,KAKGiI,qBAAa,CAAC3e,OAAD,CALhB,CAjDN,EA0DEqT;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,8DADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACiB;AAHrB,KAKErE,6BAAC,mBAAD,OALF,CADF,CADF,EAWIgL,kBAAkB,IAChBhL,6BAAC,cAAD;AACE,IAAA,SAAS,EAAC,6DADZ;AAEE,IAAA,MAAM,EAAEpO,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IAZN,CADF,CA1DF,CADF,EAsFErF;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,GAAG,EAAE6B,gBAFP;AAGE,IAAA,KAAK,EAAE;AAAE0J,MAAAA,GAAG,EAAE3C,QAAQ,GAAG,KAAH,GAAW;AAA1B;AAHT,KAMImC,qBAAqB,IAEnB/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEd,kBADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb3C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,SAAS,EAAEoJ,kBADb;AAEE,QAAA,gBAAgB,EAAEvH,gBAFpB;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,OAAO,EAAEnV,OAJX;AAKE,QAAA,gBAAgB,EAAE;AAAEia,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AArCH,IARN,EAiDE5G,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEb,cADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb5C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAACsK,eAAD;AACE,QAAA,SAAS,EAAEjB,cADb;AAEE,QAAA,gBAAgB,EAAExH,gBAFpB;AAGE,QAAA,aAAa,EAAEC;AAHjB,SAKE9B,6BAACuK,cAAD;AACE,QAAA,SAAS,EAAC,6BADZ;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAEC,UAAAA,uBAAe,CAAC7d,OAAO,CAACA,OAAT,CAAf;AAAkCmV,UAAAA,aAAa;AAAK;AAFvE,gBALF,CADF;AAcD;AA1CH,IAjDF,CADF,EAgGI,CAAC+G,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGvR,2BAAmB,CAACnF,OAAD,CALtB,CAjGN,CAtFF,CARF,CADF;AA6MD;;AAED+d,mBAAmB,CAAC7J,SAApB,GAAgC;AAC9BjP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UADK;AAE9BrU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CAFqB;AAS9BhK,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UATE;AAU9BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAViB;AAW9B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAXkB;AAY9BgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAZI;AAa9BgI,EAAAA,mBAAmB,EAAEnI,SAAS,CAACG,IAAV,CAAeD,UAbN;AAc9BqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAdJ;AAe9B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAfK;AAgB9B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAhBE,CAAhC;AAmBA0J,mBAAmB,CAACnJ,YAApB,GAAmC;AACjC5U,EAAAA,OAAO,EAAE,EADwB;AAEjCwY,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EAFoB;AAGjC2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAHqB;AAIjCgT,EAAAA,cAAc,EAAE0G,IAJiB;AAKjC9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AALS,CAAnC;AAQA2D,mBAAmB,CAACnI,SAApB,GAAgC;AAC9BjP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UADK;AAE9BrU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CAFqB;AAS9B0E,EAAAA,QAAQ,EAAE5H,SAAS,CAACG,IATU;AAU9B0H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAVQ;AAW9BwH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAXU;AAY9BsH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAZK;AAa9B8B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAAV,CAAiBL,UAbK;AAc9BhH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAdE;AAe9BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAfiB;AAgB9B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAhBkB;AAiB9BgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAjBI;AAkB9BgI,EAAAA,mBAAmB,EAAEnI,SAAS,CAACG,IAAV,CAAeD,UAlBN;AAmB9BqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAnBJ;AAoB9B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UApBK;AAqB9B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AArBE,CAAhC;AAwBAgI,mBAAmB,CAACzH,YAApB,GAAmC;AACjC5U,EAAAA,OAAO,EAAE,EADwB;AAEjC6b,EAAAA,aAAa,EAAEL,IAFkB;AAGjCO,EAAAA,QAAQ,EAAEP,IAHuB;AAIjCQ,EAAAA,UAAU,EAAER,IAJqB;AAKjCM,EAAAA,QAAQ,EAAE,KALuB;AAMjCtD,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EANoB;AAOjC2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAPqB;AAQjCgT,EAAAA,cAAc,EAAE0G,IARiB;AASjC9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AATS,CAAnC;;AClqBe,SAASmG,YAAT,OAGZ;AAAA,MAFDjL,SAEC,QAFDA,SAEC;AAAA,MADD5T,OACC,QADDA,OACC;;AACD,MAAI,CAACA,OAAO,CAACE,WAAT,IAAwBF,OAAO,CAACE,WAAR,KAAwB,OAApD,EAA6D;AAAE;AAC7D,WAAO,IAAP;AACD;;AAED,MAAM2T,kBAAkB,GAAIC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAD,GAA6BA,SAA7B,GAAyC,CAACA,SAAD,CAApE;AACA,SACEP;AAAK,IAAA,SAAS,EAAE,iDAAIQ,kBAAJ,IAAwB,wBAAxB,GAAkDG,IAAlD,CAAuD,GAAvD;AAAhB,KACEX,6BAACiD,aAAD;AAAO,IAAA,SAAS,EAAC,8BAAjB;AAAgD,IAAA,IAAI,EAAEC,uBAAe,CAACmI,SAAtE;AAAiF,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAApG,KACG1W,OAAO,CAACA,OADX,CADF,CADF;AAOD;AAED6e,YAAY,CAAC3K,SAAb,GAAyB;AACvBlU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CADc;AAQvBzD,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB;AARY,CAAzB;AAcAmK,YAAY,CAACjK,YAAb,GAA4B;AAC1B5U,EAAAA,OAAO,EAAE,EADiB;AAE1B4T,EAAAA,SAAS,EAAE;AAFe,CAA5B;;ACnCO,IAAMzO,qBAAmB,GAAG,SAAtBA,mBAAsB,CAACnF,OAAD;AAAA,SAAaoF,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,GAApB,CAAnB;AAAA,CAA5B;AAEP,AAAO,IAAMuX,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxG,MAAD;AAAA,SACjCA,MAAM,KAAKxT,sBAAiB,CAACC,IAA7B,IACGuT,MAAM,KAAKxT,sBAAiB,CAACO,SADhC,IAEGiT,MAAM,KAAKxT,sBAAiB,CAACI,IAHC;AAAA,CAA5B;;ACyBP,IAAMwY,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEA,IAAMsD,0BAA0B,GAAG,qCAAnC;AACA,IAAMC,0BAA0B,GAAG,qCAAnC;AACA,IAAMtD,kBAAgB,GAAG,KAAzB;AACA,IAAMC,gBAAc,GAAG,KAAvB;AAEA,AAAe,SAASsD,gBAAT,OAgBZ;AAAA,0BAfDhf,OAeC;AAAA,MAfDA,OAeC,6BAfS,EAeT;AAAA,MAdDiF,MAcC,QAdDA,MAcC;AAAA,MAbD6W,QAaC,QAbDA,QAaC;AAAA,MAZDF,MAYC,QAZDA,MAYC;AAAA,MAXDlI,OAWC,QAXDA,OAWC;AAAA,MAVDsI,UAUC,QAVDA,UAUC;AAAA,MATD5F,MASC,QATDA,MASC;AAAA,MARDyF,aAQC,QARDA,aAQC;AAAA,MAPDxO,WAOC,QAPDA,WAOC;AAAA,MANDmL,WAMC,QANDA,WAMC;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJD3D,cAIC,QAJDA,cAIC;AAAA,MAHD4D,sBAGC,QAHDA,sBAGC;AAAA,MAFDuD,QAEC,QAFDA,QAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,SACEN,MAAM,GAEFvI,6BAAC,wBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,MAAM,EAAEmR,MAFV;AAGE,IAAA,OAAO,EAAEpW,OAHX;AAIE,IAAA,OAAO,EAAE0T,OAJX;AAKE,IAAA,QAAQ,EAAEoI,QALZ;AAME,IAAA,QAAQ,EAAEG,QANZ;AAOE,IAAA,UAAU,EAAED,UAPd;AAQE,IAAA,UAAU,EAAEvD,UARd;AASE,IAAA,WAAW,EAAEyD,WATf;AAUE,IAAA,WAAW,EAAE7O,WAVf;AAWE,IAAA,WAAW,EAAEmL,WAXf;AAYE,IAAA,aAAa,EAAEqD,aAZjB;AAaE,IAAA,cAAc,EAAE/G,cAblB;AAcE,IAAA,sBAAsB,EAAE4D;AAd1B,IAFE,GAoBFrF,6BAAC,wBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,MAAM,EAAEmR,MAFV;AAGE,IAAA,OAAO,EAAEpW,OAHX;AAIE,IAAA,OAAO,EAAE0T,OAJX;AAKE,IAAA,QAAQ,EAAEuI,QALZ;AAME,IAAA,UAAU,EAAExD,UANd;AAOE,IAAA,WAAW,EAAEyD,WAPf;AAQE,IAAA,WAAW,EAAE7O,WARf;AASE,IAAA,WAAW,EAAEmL,WATf;AAUE,IAAA,cAAc,EAAE1D,cAVlB;AAWE,IAAA,sBAAsB,EAAE4D;AAX1B,IArBN;AAoCD;AAED,AAAO,SAASuG,wBAAT,QAeJ;AAAA,4BAdDjf,OAcC;AAAA,MAdDA,OAcC,8BAdS,EAcT;AAAA,MAbDiF,MAaC,SAbDA,MAaC;AAAA,MAZD6W,QAYC,SAZDA,QAYC;AAAA,MAXDpI,OAWC,SAXDA,OAWC;AAAA,MAVDsI,UAUC,SAVDA,UAUC;AAAA,MATD5F,MASC,SATDA,MASC;AAAA,MARDyF,aAQC,SARDA,aAQC;AAAA,MAPDxO,WAOC,SAPDA,WAOC;AAAA,MANDmL,WAMC,SANDA,WAMC;AAAA,MALDC,UAKC,SALDA,UAKC;AAAA,MAJD3D,cAIC,SAJDA,cAIC;AAAA,MAHD4D,sBAGC,SAHDA,sBAGC;AAAA,MAFDuD,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;AAAA,MAEC3b,IAFD,GAMGP,OANH,CAECO,IAFD;AAAA,MAGC6B,GAHD,GAMGpC,OANH,CAGCoC,GAHD;AAAA,MAICoQ,QAJD,GAMGxS,OANH,CAICwS,QAJD;AAAA,MAKC0M,UALD,GAMGlf,OANH,CAKCkf,UALD;AAOD,MAAMC,YAAY,GAAID,UAAU,IAAIA,UAAU,CAACjb,MAAX,GAAoB,CAAlC,IAAuCib,UAAU,CAAC,CAAD,CAAV,CAAc9c,GAAtD,IAA8D,IAAnF;;AAPC,oBAQqB2W,gBAAU,CAACC,uCAAD,CAR/B;AAAA,MAQOC,SARP,eAQOA,SARP;;AASD,MAAMuD,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAM2P,OAAO,GAAG3P,YAAM,CAAC,IAAD,CAAtB;AACA,MAAM4P,cAAc,GAAG5P,YAAM,CAAC,IAAD,CAA7B;;AAZC,kBAamCuI,cAAQ,CAAC,KAAD,CAb3C;AAAA;AAAA,MAaM6E,UAbN;AAAA,MAakBC,aAblB;;AAAA,mBAcmC9E,cAAQ,CAAC,KAAD,CAd3C;AAAA;AAAA,MAcM+E,UAdN;AAAA,MAckBC,aAdlB;;AAAA,mBAe2ChF,cAAQ,CAAC,KAAD,CAfnD;AAAA;AAAA,MAeMiF,cAfN;AAAA,MAesBC,iBAftB;;AAiBD,MAAMkB,qBAAqB,GAAI/Q,WAAW,IAAImL,WAAf,IAA8BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;AACA,MAAMjB,sBAAsB,GAAGD,sBAA/B;AACA,MAAMiE,aAAa,GAAGC,mBAAmB,CAACxG,MAAD,CAAzC;;AAEA,MAAM+G,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,SAAS,EAAEyL,0BADb;AAEE,IAAA,GAAG,EAAEtC,UAFP;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsBC,gBADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsBC;AAF3C;AAHT,KAQErI;AAAK,IAAA,SAAS,YAAKyL,0BAAL;AAAd,KACEzL;AAAK,IAAA,SAAS,YAAKyL,0BAAL;AAAd,KACEzL;AACE,IAAA,SAAS,YAAKyL,0BAAL,wBADX;AAEE,IAAA,GAAG,EAAE5J;AAFP,KAIE7B,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAE6B,OADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbtF,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEyB,OALb;AAME,QAAA,gBAAgB,EAAElK,gBANpB;AAOE,QAAA,aAAa,EAAEC,aAPjB;AAQE,QAAA,QAAQ;AARV,SAWKnV,OAAO,IAAIA,OAAO,CAACkP,YAAnB,IAAmClP,OAAO,CAACkP,YAAR,EAApC,IACEmE,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb/B,UAAAA,aAAa,CAAC7b,OAAD,CAAb;AACAmV,UAAAA,aAAa;AACd;AAJH,SAMG8D,SAAS,CAACqG,6BANb,CAZN,EAsBEjM,6BAACuK,cAAD;AAAU,QAAA,OAAO,EAAE,mBAAM;AACvB,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA7G,UAAAA,aAAa;AACd;AAJD,SAMG8D,SAAS,CAACsG,6BANb,CAtBF,CADF;AAiCD;AA7DH,IAJF,EAoEI5C,aAAa,IAAIyB,qBAAjB,IAEE/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAE8B,cADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbvF,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAEqf,cAFb;AAGE,QAAA,gBAAgB,EAAEnK,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AArCH,IAtEN,CADF,EAkHI,CAACiC,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J,6BAAC,aAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW,MAFV;AAGE,IAAA,SAAS,YAAK0I,0BAAL;AAHX,IAnHN,CADF,EA4HEzL;AAAK,IAAA,SAAS,YAAKyL,0BAAL;AAAd,KACEzL;AACE,IAAA,SAAS,YAAKyL,0BAAL;AADX,KAGEzL;AACE,IAAA,SAAS,YAAKyL,0BAAL,uBADX;AAEE,IAAA,OAAO,EAAEnC,aAAa,GAAG;AAAA,aAAMjJ,OAAO,CAAC,IAAD,CAAb;AAAA,KAAH,GAAyB,YAAM,EAFvD;AAGE,IAAA,SAAS,EAAEiJ,aAAa,GAAG;AAAA,aAAMjJ,OAAO,CAAC,IAAD,CAAb;AAAA,KAAH,GAAyB,YAAM,EAHzD;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,IAAI,EAAC;AALP,KAQIlT,eAAO,CAACD,IAAD,CAAP,IACE8S,4DAEK8L,YAAD,GAEI9L,6BAACuC,qBAAD;AACE,IAAA,SAAS,YAAKkJ,0BAAL,iBADX;AAEE,IAAA,GAAG,EAAEK,YAFP;AAGE,IAAA,GAAG,EAAC,iBAHN;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACd9L;AAAK,MAAA,SAAS,YAAKyL,0BAAL;AAAd,OACEzL,6BAACwC,YAAD;AACE,MAAA,IAAI,EAAEC,iBAAS,CAAC0J,IADlB;AAEE,MAAA,SAAS,EAAE1I,kBAAU,CAAC2I,eAFxB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT,MADF;AAPJ,IAFJ;AAqBI;AACA;AACE,IAAA,SAAS,YAAKX,0BAAL;AADX,KAGEzL;AAAQ,IAAA,GAAG,EAAEjR,GAAG,IAAIoQ,QAApB;AAA8B,IAAA,IAAI,EAAEjS;AAApC,IAHF,CAxBR,EA+BE8S,6BAACwC,YAAD;AACE,IAAA,SAAS,YAAKiJ,0BAAL,sBADX;AAEE,IAAA,IAAI,EAAEhJ,iBAAS,CAAC0J,IAFlB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IA/BF,CATN,EAkDIlf,eAAO,CAACC,IAAD,CAAP,IACE8S,6BAACuC,qBAAD;AACE,IAAA,SAAS,YAAKkJ,0BAAL,eADX;AAEE,IAAA,GAAG,EAAEK,YAAY,IAAI/c,GAAhB,IAAuBoQ,QAF9B;AAGE,IAAA,GAAG,EAAC,iBAHN;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACda;AAAK,MAAA,SAAS,YAAKyL,0BAAL;AAAd,OACEzL,6BAACwC,YAAD;AACE,MAAA,IAAI,EAAEC,iBAAS,CAAC4J,KADlB;AAEE,MAAA,SAAS,EAAE5I,kBAAU,CAAC2I,eAFxB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT,MADF;AAPJ,IAnDN,EAuEIE,mBAAW,CAACpf,IAAD,CAAX,IACE8S;AAAK,IAAA,SAAS,YAAKyL,0BAAL;AAAd,KACG7F,SAAS,CAAC2G,6BADb,CAxEN,EA6EEvM;AAAK,IAAA,SAAS,YAAKyL,0BAAL;AAAd,IA7EF,CAHF,EAmFKzR,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAAhE,IAEEoP,6BAAC,cAAD;AACE,IAAA,SAAS,YAAKyL,0BAAL,iCADX;AAEE,IAAA,MAAM,EAAE7Z,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IArFN,CADF,CA5HF,CARF,CADF;AA2OD;AAED,AAAO,SAASmH,wBAAT,QAYJ;AAAA,4BAXD7f,OAWC;AAAA,MAXDA,OAWC,8BAXS,EAWT;AAAA,MAVDiF,MAUC,SAVDA,MAUC;AAAA,MATDyO,OASC,SATDA,OASC;AAAA,MARD0C,MAQC,SARDA,MAQC;AAAA,MAPD/I,WAOC,SAPDA,WAOC;AAAA,MANDmL,WAMC,SANDA,WAMC;AAAA,MALDC,UAKC,SALDA,UAKC;AAAA,MAJD3D,cAIC,SAJDA,cAIC;AAAA,MAHD4D,sBAGC,SAHDA,sBAGC;AAAA,MAFDuD,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;AAAA,MAEC3b,IAFD,GAMGP,OANH,CAECO,IAFD;AAAA,MAGC6B,GAHD,GAMGpC,OANH,CAGCoC,GAHD;AAAA,MAICoQ,QAJD,GAMGxS,OANH,CAICwS,QAJD;AAAA,MAKC0M,UALD,GAMGlf,OANH,CAKCkf,UALD;AAOD,MAAMC,YAAY,GAAID,UAAU,IAAIA,UAAU,CAACjb,MAAX,GAAoB,CAAlC,IAAuCib,UAAU,CAAC,CAAD,CAAV,CAAc9c,GAAtD,IAA8D,IAAnF;;AAPC,0BAWGiR,cAAK,CAAC0F,UAAN,CAAiBkF,wBAAjB,CAXH;AAAA,MASCC,kBATD,qBASCA,kBATD;AAAA,MAUCC,iBAVD,qBAUCA,iBAVD;;AAAA,qBAYqBpF,gBAAU,CAACC,uCAAD,CAZ/B;AAAA,MAYOC,SAZP,gBAYOA,SAZP;;AAaD,MAAMuD,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAM4P,cAAc,GAAG5P,YAAM,CAAC,IAAD,CAA7B;AACA,MAAMuO,SAAS,GAAGvO,YAAM,CAAC,IAAD,CAAxB;;AAhBC,mBAiBmCuI,cAAQ,CAAC,KAAD,CAjB3C;AAAA;AAAA,MAiBM6E,UAjBN;AAAA,MAiBkBC,aAjBlB;;AAAA,mBAkBmC9E,cAAQ,CAAC,KAAD,CAlB3C;AAAA;AAAA,MAkBM+E,UAlBN;AAAA,MAkBkBC,aAlBlB;;AAAA,oBAmB2ChF,cAAQ,CAAC,KAAD,CAnBnD;AAAA;AAAA,MAmBMiF,cAnBN;AAAA,MAmBsBC,iBAnBtB;;AAqBD,MAAMkB,qBAAqB,GAAI/Q,WAAW,IAAImL,WAAf,IAA8BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;AACA,MAAMjB,sBAAsB,GAAGD,sBAA/B;AACA,MAAMiE,aAAa,GAAGC,mBAAmB,CAACxG,MAAD,CAAzC;;AAEA,MAAM+G,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,SAAS,EAAE0L,0BADb;AAEE,IAAA,GAAG,EAAEvC,UAFP;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsBC,gBADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsBC;AAF3C;AAHT,KASI,CAACO,QAAD,IACE5I,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAKyI,0BAAL,kBADX;AAEE,IAAA,IAAI,EAAExI,uBAAe,CAACmI,SAFxB;AAGE,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAHrB,KAKGiI,mBAAa,CAAC3e,OAAD,CAAb,IAA0B,EAL7B,CAVN,EAmBEqT;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,KACE1L;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,KACE1L;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,KAEI,CAAC7C,WAAD,IACE7I,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACiL,cAAD;AACE,QAAA,GAAG,EAAEN,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACE,kBAAL,EAAyB;AACvBpE,YAAAA,cAAc;AACf;AACF,SANH;AAOE,QAAA,SAAS,YAAKiF,0BAAL,aAPX;AAQE,QAAA,GAAG,EAAER,yBAAmB,CAACve,OAAD,CAR1B;AASE,QAAA,KAAK,EAAC,MATR;AAUE,QAAA,MAAM,EAAC;AAVT,QADW;AAAA,KADf;AAeE,IAAA,SAAS,EAAE,mBAACmV,aAAD;AAAA,aACT9B,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEK,SALb;AAME,QAAA,gBAAgB,EAAEA,SANpB;AAOE,QAAA,aAAa,EAAE7I,aAPjB;AAQE,QAAA,KAAK,EAAE;AAAEkI,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AART,SAWIa,iBAAiB,GACbA,iBAAiB,CAAC;AAClBK,QAAAA,IAAI,EAAExe,OAAO,CAACwF,MADI;AAElBkY,QAAAA,KAAK,EAAEvI;AAFW,OAAD,CADJ,GAMb9B,6BAACoL,iBAAD;AACE,QAAA,IAAI,EAAEze,OAAO,CAACwF,MADhB;AAEE,QAAA,SAAS,EAAE2P;AAFb,QAjBR,CADS;AAAA;AAfb,IAHN,EA+CE9B;AACE,IAAA,SAAS,YAAK0L,0BAAL,uBADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,OAAO,EAAEpC,aAAa,GAAG;AAAA,aAAMjJ,OAAO,CAAC,IAAD,CAAb;AAAA,KAAH,GAAyB,YAAM,EAJvD;AAKE,IAAA,SAAS,EAAEiJ,aAAa,GAAG;AAAA,aAAMjJ,OAAO,CAAC,IAAD,CAAb;AAAA,KAAH,GAAyB,YAAM;AALzD,KAQIlT,eAAO,CAACD,IAAD,CAAP,IACE8S,4DAEK8L,YAAD,GAEI9L,6BAACuC,qBAAD;AACE,IAAA,SAAS,YAAKmJ,0BAAL,YADX;AAEE,IAAA,GAAG,EAAEI,YAFP;AAGE,IAAA,GAAG,EAAC,iBAHN;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACd9L;AAAK,MAAA,SAAS,YAAK0L,0BAAL;AAAd,OACE1L,6BAACwC,YAAD;AACE,MAAA,IAAI,EAAEC,iBAAS,CAAC0J,IADlB;AAEE,MAAA,SAAS,EAAE1I,kBAAU,CAAC2I,eAFxB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT,MADF;AAPJ,IAFJ;AAqBI;AACA;AAAO,IAAA,SAAS,YAAKV,0BAAL;AAAhB,KACE1L;AAAQ,IAAA,GAAG,EAAEjR,GAAG,IAAIoQ,QAApB;AAA8B,IAAA,IAAI,EAAEjS;AAApC,IADF,CAxBR,EA6BE8S,6BAACwC,YAAD;AACE,IAAA,SAAS,YAAKkJ,0BAAL,iBADX;AAEE,IAAA,IAAI,EAAEjJ,iBAAS,CAAC0J,IAFlB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IA7BF,CATN,EAgDIlf,eAAO,CAACC,IAAD,CAAP,IACE8S,6BAACuC,qBAAD;AACE,IAAA,SAAS,YAAKmJ,0BAAL,UADX;AAEE,IAAA,GAAG,EAAEI,YAAY,IAAI/c,GAAhB,IAAuBoQ,QAF9B;AAGE,IAAA,GAAG,EAAC,iBAHN;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACda;AAAK,MAAA,SAAS,YAAK0L,0BAAL;AAAd,OACE1L,6BAACwC,YAAD;AACE,MAAA,IAAI,EAAEC,iBAAS,CAAC4J,KADlB;AAEE,MAAA,SAAS,EAAE5I,kBAAU,CAAC2I,eAFxB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT,MADF;AAPJ,IAjDN,EAqEIE,mBAAW,CAACpf,IAAD,CAAX,IACE8S;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,KACG9F,SAAS,CAAC2G,6BADb,CAtEN,EA2EEvM;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,IA3EF,CA/CF,EA6HK1R,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAAhE,IAEEoP,6BAAC,cAAD;AACE,IAAA,SAAS,YAAK0L,0BAAL,4BADX;AAEE,IAAA,MAAM,EAAE9Z,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IA/HN,CADF,CADF,EA8IErF;AAAK,IAAA,SAAS,YAAK0L,0BAAL;AAAd,KAEI,CAAC7C,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAKyI,0BAAL,cADX;AAEE,IAAA,IAAI,EAAExI,uBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGvR,qBAAmB,CAACnF,OAAD,CALtB,CAHN,EAYEqT;AACE,IAAA,SAAS,YAAK0L,0BAAL,WADX;AAEE,IAAA,GAAG,EAAE7J;AAFP,KAKIkJ,qBAAqB,IACnB/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAE8B,cADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbvF,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UADlB;AAEE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G,eAFxB;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC;AAJT,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAEqf,cAFb;AAGE,QAAA,gBAAgB,EAAEnK,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AArCH,IANN,CAZF,CA9IF,CAnBF,CADF;AAkOD;AAED+E,gBAAgB,CAAC9K,SAAjB,GAA6B;AAC3BlU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB3Z,IAAAA,IAAI,EAAE4T,SAAS,CAACO,MADO;AAEvBtS,IAAAA,GAAG,EAAE+R,SAAS,CAACO,MAFQ;AAGvBlC,IAAAA,QAAQ,EAAE2B,SAAS,CAACO;AAHG,GAAhB,EAINL,UALwB;AAM3BpP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MANS;AAO3BmH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAPE;AAQ3B8B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MARS;AAS3BkH,EAAAA,MAAM,EAAEzH,SAAS,CAACI,IATS;AAU3BuH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAVO;AAW3Bb,EAAAA,OAAO,EAAES,SAAS,CAACG,IAXQ;AAY3B0H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAZK;AAa3BjH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAbD;AAc3BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAdc;AAe3B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAfe;AAgB3BgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAhBC;AAiB3BoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAjBP;AAkB3B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAlBO;AAmB3B2H,EAAAA,WAAW,EAAE/H,SAAS,CAACI;AAnBI,CAA7B;AAqBAyK,gBAAgB,CAACpK,YAAjB,GAAgC;AAC9BgH,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,QAAQ,EAAE,KAFoB;AAG9BD,EAAAA,aAAa,EAAEL,MAHe;AAI9B9H,EAAAA,OAAO,EAAE8H,MAJqB;AAK9BQ,EAAAA,UAAU,EAAER,MALkB;AAM9BpF,EAAAA,MAAM,EAAE,EANsB;AAO9BnR,EAAAA,MAAM,EAAE,EAPsB;AAQ9BuT,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EARiB;AAS9B2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EATkB;AAU9BgT,EAAAA,cAAc,EAAE0G,MAVc;AAW9B9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA,GAXM;AAY9BuD,EAAAA,QAAQ,EAAE,KAZoB;AAa9BC,EAAAA,WAAW,EAAE;AAbiB,CAAhC;AAgBA+C,wBAAwB,CAAC/K,SAAzB,GAAqC;AACnClU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB3Z,IAAAA,IAAI,EAAE4T,SAAS,CAACO,MADO;AAEvBtS,IAAAA,GAAG,EAAE+R,SAAS,CAACO,MAFQ;AAGvBlC,IAAAA,QAAQ,EAAE2B,SAAS,CAACO;AAHG,GAAhB,EAINL,UALgC;AAMnCpP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UANU;AAOnCyH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAAV,CAAeF,UAPU;AAQnCwH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAAV,CAAeD,UARK;AASnC+B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MATiB;AAUnChB,EAAAA,OAAO,EAAES,SAAS,CAACG,IAAV,CAAeD,UAVW;AAWnC2H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAAV,CAAeD,UAXQ;AAYnChH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAZO;AAanCmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAbJ;AAcnCoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAdH;AAenCS,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAAV,CAAeD,UAfI;AAgBnCqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAAV,CAAeD,UAhBJ;AAiBnC4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAjBU;AAkBnC6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAlBO,CAArC;AAoBA4K,wBAAwB,CAACrK,YAAzB,GAAwC;AACtCwB,EAAAA,MAAM,EAAE;AAD8B,CAAxC;AAIAyJ,wBAAwB,CAAC3L,SAAzB,GAAqC;AACnClU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB3Z,IAAAA,IAAI,EAAE4T,SAAS,CAACO,MADO;AAEvBtS,IAAAA,GAAG,EAAE+R,SAAS,CAACO,MAFQ;AAGvBlC,IAAAA,QAAQ,EAAE2B,SAAS,CAACO;AAHG,GAAhB,EAINL,UALgC;AAMnCpP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UANU;AAOnCX,EAAAA,OAAO,EAAES,SAAS,CAACG,IAAV,CAAeD,UAPW;AAQnC+B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MARiB;AASnCrH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UATO;AAUnCmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAVJ;AAWnCoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAXH;AAYnCS,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAAV,CAAeD,UAZI;AAanCqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAAV,CAAeD,UAbJ;AAcnC4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAdU;AAenC6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAfO,CAArC;AAiBAwL,wBAAwB,CAACjL,YAAzB,GAAwC;AACtCwB,EAAAA,MAAM,EAAE;AAD8B,CAAxC;;ACtsBA,IAAM0J,mBAAmB,GAAG,EAA5B;AACA,IAAMC,iBAAiB,GAAG,KAA1B;AACA,IAAMrE,gBAAc,GAAG,KAAvB;;AACA,IAAMF,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEA,SAASwE,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAIC,MAAM,GAAG,IAAb;AACA,MAAMC,SAAS,GAAG,oCAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;;AACA,MAAID,SAAS,CAACE,IAAV,CAAeJ,OAAf,CAAJ,EAA6B;AAC3BC,IAAAA,MAAM,GAAGpK,iBAAS,CAACwK,aAAnB;AACD,GAFD,MAEO,IAAIF,SAAS,CAACC,IAAV,CAAeJ,OAAf,CAAJ,EAA6B;AAClCC,IAAAA,MAAM,GAAGpK,iBAAS,CAACyK,UAAnB;AACD;;AACD,SAAOL,MAAP;AACD;;AAED,AAAO,SAASM,mBAAT,OAcJ;AAAA,MAbDxgB,OAaC,QAbDA,OAaC;AAAA,MAZDiF,MAYC,QAZDA,MAYC;AAAA,MAXDmR,MAWC,QAXDA,MAWC;AAAA,MAVD4F,UAUC,QAVDA,UAUC;AAAA,MATDF,QASC,QATDA,QASC;AAAA,MARDD,aAQC,QARDA,aAQC;AAAA,MAPDxO,WAOC,QAPDA,WAOC;AAAA,MANDmL,WAMC,QANDA,WAMC;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJD3D,cAIC,QAJDA,cAIC;AAAA,MAHD4D,sBAGC,QAHDA,sBAGC;AAAA,MAFDuD,QAEC,QAFDA,QAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAM9Z,GAAG,GAAGpC,OAAO,CAACygB,QAAR,IAAoBzgB,OAAO,CAACoC,GAAxC;;AACA,MAAMse,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAEC,IAAAA,MAAM,CAACC,IAAP,CAAYxe,GAAZ;AAAmB,GAA/C;;AACA,MAAMoa,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAM2P,OAAO,GAAG3P,YAAM,CAAC,IAAD,CAAtB;AACA,MAAMoR,oBAAoB,GAAGpR,YAAM,CAAC,IAAD,CAAnC;;AANC,kBAOmCuI,cAAQ,CAAC,KAAD,CAP3C;AAAA;AAAA,MAOM6E,UAPN;AAAA,MAOkBC,aAPlB;;AAAA,mBAQmC9E,cAAQ,CAAC,KAAD,CAR3C;AAAA;AAAA,MAQM+E,UARN;AAAA,MAQkBC,aARlB;;AAAA,mBAS2ChF,cAAQ,CAAC,KAAD,CATnD;AAAA;AAAA,MASMiF,cATN;AAAA,MASsBC,iBATtB;;AAUD,MAAMkB,qBAAqB,GAAG/Q,WAAW,IAAImL,WAAf,IAA+BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;AACA,MAAMjB,sBAAsB,GAAGD,sBAA/B;AACA,MAAMiE,aAAa,GAAGC,2BAAmB,CAACxG,MAAD,CAAzC;AACA,MAAMiI,kBAAkB,GAAG1B,aAAa,IAAItP,WAAjB,IAAgCrN,OAAO,CAACwV,SAAxC,IACrBxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CADjC;;AAGA,MAAMkZ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,GAAG,EAAEmJ,UAFP;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAG8D,iBAAH,GAAuBrE,gBADtC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAG6D,iBAAH,GAAuBrE;AAF5C;AAHT,KAQErI;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,GAAG,EAAE6B;AAFP,KAIE7B,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAE6B,OADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbtF,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IADlB;AAEE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G,eAFxB;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC;AAJT,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEyB,OALb;AAME,QAAA,gBAAgB,EAAElK,gBANpB;AAOE,QAAA,aAAa,EAAEC,aAPjB;AAQE,QAAA,QAAQ;AARV,SAWKnV,OAAO,IAAIA,OAAO,CAACkP,YAAnB,IAAmClP,OAAO,CAACkP,YAAR,EAApC,IACEmE,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb/B,UAAAA,aAAa,CAAC7b,OAAD,CAAb;AACAmV,UAAAA,aAAa;AACd;AAJH,kBAZN,EAsBE9B,6BAACuK,cAAD;AAAU,QAAA,OAAO,EAAE,mBAAM;AACvB,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA7G,UAAAA,aAAa;AACd;AAJD,kBAtBF,CADF;AAiCD;AA7DH,IAJF,EAoEIiJ,qBAAqB,IACnB/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEsD,oBADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb/G,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAE6gB,oBAFb;AAGE,QAAA,gBAAgB,EAAE3L,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AArCH,IArEN,CADF,EAiHI,CAACiC,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC,aAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW;AAFV,IADF,CAlHN,CADF,EA4HE/C;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI2M,aAAa,CAAC5d,GAAD,CAAb,GAEIiR;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACwC,YAAD;AACE,IAAA,SAAS,EAAC,gDADZ;AAEE,IAAA,IAAI,EAAEmK,aAAa,CAAC5d,GAAD,CAFrB;AAGE,IAAA,SAAS,EAAE0U,kBAAU,CAACC,OAHxB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,IADF,CAFJ,GAYI,IAdR,EAgBE1D,6BAACyN,gBAAD;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,OAAO,EAAEJ,WAFX;AAGE,IAAA,KAAK,EAAEjK,mBAAW,CAACqH;AAHrB,KAKEzK,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACiE,MADxB;AAEE,IAAA,KAAK,EAAE/D,mBAAW,CAACqH;AAFrB,KAIGiD,gBAAQ,CAAC/gB,OAAO,CAACoS,IAAR,IAAgBpS,OAAO,CAACoC,GAAzB,EAA8B0d,mBAA9B,CAJX,CALF,CAhBF,CADF,EA+BIzB,kBAAkB,IAChBhL,6BAAC,cAAD;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,MAAM,EAAEpO,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IAhCN,CA5HF,CARF,CADF;AAoLD;AAED,AAAO,SAASsI,mBAAT,QAUJ;AAAA,MATDhhB,OASC,SATDA,OASC;AAAA,MARDiF,MAQC,SARDA,MAQC;AAAA,MAPDoI,WAOC,SAPDA,WAOC;AAAA,MANDmL,WAMC,SANDA,WAMC;AAAA,MALDC,UAKC,SALDA,UAKC;AAAA,MAJD3D,cAIC,SAJDA,cAIC;AAAA,MAHD4D,sBAGC,SAHDA,sBAGC;AAAA,MAFDuD,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;;AACD,MAAMwE,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAEC,IAAAA,MAAM,CAACC,IAAP,CAAY5gB,OAAO,CAACoC,GAApB;AAA2B,GAAvD;;AACA,MAAMoa,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;;AAFC,0BAMG4D,cAAK,CAAC0F,UAAN,CAAiBkF,wBAAjB,CANH;AAAA,MAICC,kBAJD,qBAICA,kBAJD;AAAA,MAKCC,iBALD,qBAKCA,iBALD;;AAOD,MAAMjJ,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAMuO,SAAS,GAAGvO,YAAM,CAAC,IAAD,CAAxB;AACA,MAAMoR,oBAAoB,GAAGpR,YAAM,CAAC,IAAD,CAAnC;;AATC,mBAUmCuI,cAAQ,CAAC,KAAD,CAV3C;AAAA;AAAA,MAUM6E,UAVN;AAAA,MAUkBC,aAVlB;;AAAA,mBAWmC9E,cAAQ,CAAC,KAAD,CAX3C;AAAA;AAAA,MAWM+E,UAXN;AAAA,MAWkBC,aAXlB;;AAAA,oBAY2ChF,cAAQ,CAAC,KAAD,CAZnD;AAAA;AAAA,MAYMiF,cAZN;AAAA,MAYsBC,iBAZtB;;AAaD,MAAMkB,qBAAqB,GAAG/Q,WAAW,IAAImL,WAAf,IAA+BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;AACA,MAAMjB,sBAAsB,GAAGD,sBAA/B;;AAEA,MAAMyE,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,GAAG,EAAEmJ,UAFP;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAEpB,QAAQ,GAAG8D,iBAAH,GAAuBrE,gBADtC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAG6D,iBAAH,GAAuBrE;AAF5C;AAHT,KAQErI;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI,CAAC6I,WAAD,IACE7I,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACiL,cAAD;AACE,QAAA,GAAG,EAAEN,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACE,kBAAL,EAAyB;AACvBpE,YAAAA,cAAc;AACf;AACF,SANH;AAOE,QAAA,SAAS,EAAC,+BAPZ;AAQE,QAAA,GAAG,EAAEyE,yBAAmB,CAACve,OAAD,CAR1B;AASE,QAAA,KAAK,EAAC,MATR;AAUE,QAAA,MAAM,EAAC;AAVT,QADW;AAAA,KADf;AAeE,IAAA,SAAS,EAAE,mBAACmV,aAAD;AAAA,aACT9B,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEK,SALb;AAME,QAAA,gBAAgB,EAAEA,SANpB;AAOE,QAAA,aAAa,EAAE7I,aAPjB;AAQE,QAAA,KAAK,EAAE;AAAEkI,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AART,SAWIa,iBAAiB,GACbA,iBAAiB,CAAC;AAClBK,QAAAA,IAAI,EAAExe,OAAO,CAACwF,MADI;AAElBkY,QAAAA,KAAK,EAAEvI;AAFW,OAAD,CADJ,GAMb9B,6BAACoL,iBAAD;AACE,QAAA,IAAI,EAAEze,OAAO,CAACwF,MADhB;AAEE,QAAA,SAAS,EAAE2P;AAFb,QAjBR,CADS;AAAA;AAfb,IAHN,EAgDI,CAAC8G,QAAD,IACE5I,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,oCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACmI,SAFxB;AAGE,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAHrB,KAKGiI,mBAAa,CAAC3e,OAAD,CALhB,CAjDN,EA0DEqT;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI2M,aAAa,CAAChgB,OAAO,CAACoC,GAAT,CAAb,GAEIiR;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACwC,YAAD;AACE,IAAA,SAAS,EAAC,gDADZ;AAEE,IAAA,IAAI,EAAEmK,aAAa,CAAChgB,OAAO,CAACoC,GAAT,CAFrB;AAGE,IAAA,SAAS,EAAE0U,kBAAU,CAACC,OAHxB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,IADF,CAFJ,GAYI,IAdR,EAgBE1D,6BAACyN,gBAAD;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,OAAO,EAAEJ;AAFX,KAIErN,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACiE,MADxB;AAEE,IAAA,KAAK,EAAE/D,mBAAW,CAACiB;AAFrB,KAIGqJ,gBAAQ,CAAC/gB,OAAO,CAACoS,IAAR,IAAgBpS,OAAO,CAACoC,GAAzB,EAA8B0d,mBAA9B,CAJX,CAJF,CAhBF,CADF,EA8BKzS,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAqCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAAjE,IACEoP,6BAAC,cAAD;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,MAAM,EAAEpO,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,WAAW,EAAEwY,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IA/BN,CA1DF,CADF,EAuGErF;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,GAAG,EAAE6B;AAFP,KAKIkJ,qBAAqB,IACnB/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEsD,oBADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb/G,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAE6gB,oBAFb;AAGE,QAAA,gBAAgB,EAAE3L,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADF;AASD;AArCH,IANN,CADF,EAkDI,CAACiC,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGvR,yBAAmB,CAACnF,OAAD,CALtB,CAnDN,CAvGF,CARF,CADF;AAgLD;AAEDwgB,mBAAmB,CAACtM,SAApB,GAAgC;AAC9BlU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CADqB;AAQ9BpS,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MARY;AAS9B0B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MATY;AAU9BsH,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAVQ;AAW9BuH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAXK;AAY9BjH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAZE;AAa9ByH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAbU;AAc9BiE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAdiB;AAe9B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAfkB;AAgB9BgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAhBI;AAiB9BoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAjBJ;AAkB9B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAlBK;AAmB9B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAnBE,CAAhC;AAsBAmM,mBAAmB,CAAC5L,YAApB,GAAmC;AACjCwB,EAAAA,MAAM,EAAE,EADyB;AAEjC4F,EAAAA,UAAU,EAAER,MAFqB;AAGjCK,EAAAA,aAAa,EAAEL,MAHkB;AAIjCxb,EAAAA,OAAO,EAAE,EAJwB;AAKjCiF,EAAAA,MAAM,EAAE,EALyB;AAMjC6W,EAAAA,QAAQ,EAAE,KANuB;AAOjCtD,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EAPoB;AAQjC2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EARqB;AASjCgT,EAAAA,cAAc,EAAE0G,MATiB;AAUjC9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AAVS,CAAnC;AAaAsI,mBAAmB,CAAC9M,SAApB,GAAgC;AAC9BlU,EAAAA,OAAO,EAAEmU,SAAS,CAACgD,QAAV,CAAmBhD,SAAS,CAACK,SAAV,CAAoB,CAC9CL,SAAS,CAACO,MADoC,EAE9CP,SAAS,CAACM,MAFoC,EAG9CN,SAAS,CAACI,IAHoC,EAI9CJ,SAAS,CAACiD,KAJoC,EAK9CjD,SAAS,CAACkD,MALoC,CAApB,CAAnB,CADqB;AAQ9BpS,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MARY;AAS9BrH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UATE;AAU9BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAViB;AAW9B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAXkB;AAY9BgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAZI;AAa9BoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAbJ;AAc9B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAdK;AAe9B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAfE,CAAhC;AAkBA2M,mBAAmB,CAACpM,YAApB,GAAmC;AACjC5U,EAAAA,OAAO,EAAE,EADwB;AAEjCiF,EAAAA,MAAM,EAAE,EAFyB;AAGjCuT,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EAHoB;AAIjC2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAJqB;AAKjCgT,EAAAA,cAAc,EAAE0G,MALiB;AAMjC9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AANS,CAAnC;;AASA,IAAMuI,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MACpBjhB,OADoB,SACpBA,OADoB;AAAA,MAEpBiF,MAFoB,SAEpBA,MAFoB;AAAA,MAGpB6W,QAHoB,SAGpBA,QAHoB;AAAA,MAIpBF,MAJoB,SAIpBA,MAJoB;AAAA,MAKpBI,UALoB,SAKpBA,UALoB;AAAA,MAMpB5F,MANoB,SAMpBA,MANoB;AAAA,MAOpByF,aAPoB,SAOpBA,aAPoB;AAAA,MAQpBxO,WARoB,SAQpBA,WARoB;AAAA,MASpBmL,WAToB,SASpBA,WAToB;AAAA,MAUpBC,UAVoB,SAUpBA,UAVoB;AAAA,MAWpB3D,cAXoB,SAWpBA,cAXoB;AAAA,MAYpB4D,sBAZoB,SAYpBA,sBAZoB;AAAA,MAapBuD,QAboB,SAapBA,QAboB;AAAA,MAcpBC,WAdoB,SAcpBA,WAdoB;AAAA,SAgBpB7I;AAAK,IAAA,SAAS,iCAA0BuI,MAAM,GAAG,YAAH,GAAkB,YAAlD;AAAd,KAEIA,MAAM,GAEFvI,6BAAC,mBAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEiF,MAFV;AAGE,IAAA,QAAQ,EAAE6W,QAHZ;AAIE,IAAA,UAAU,EAAEE,UAJd;AAKE,IAAA,MAAM,EAAE5F,MALV;AAME,IAAA,aAAa,EAAEyF,aANjB;AAOE,IAAA,WAAW,EAAExO,WAPf;AAQE,IAAA,WAAW,EAAEmL,WARf;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,cAAc,EAAE3D,cAVlB;AAWE,IAAA,sBAAsB,EAAE4D,sBAX1B;AAYE,IAAA,QAAQ,EAAEuD,QAZZ;AAaE,IAAA,WAAW,EAAEC;AAbf,IAFE,GAmBF7I,6BAAC,mBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,OAAO,EAAEjF,OAFX;AAGE,IAAA,WAAW,EAAEqN,WAHf;AAIE,IAAA,WAAW,EAAEmL,WAJf;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,cAAc,EAAE3D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D,sBAP1B;AAQE,IAAA,QAAQ,EAAEuD,QARZ;AASE,IAAA,WAAW,EAAEC;AATf,IArBR,CAhBoB;AAAA,CAAtB;;AAsDA+E,aAAa,CAAC/M,SAAd,GAA0B;AACxBlU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CADe;AAExBjV,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAFM;AAGxBkH,EAAAA,MAAM,EAAEzH,SAAS,CAACI,IAHM;AAIxBuH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAJI;AAKxByH,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IALE;AAMxBuH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAND;AAOxB8B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAAV,CAAiBL,UAPD;AAQxBhH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UARJ;AASxBmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CATW;AAUxB2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CAVY;AAWxBgT,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAXF;AAYxBoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAZV;AAaxB2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAbI;AAcxB2H,EAAAA,WAAW,EAAE/H,SAAS,CAACI;AAdC,CAA1B;AAiBA0M,aAAa,CAACrM,YAAd,GAA6B;AAC3B5U,EAAAA,OAAO,EAAE,EADkB;AAE3B4b,EAAAA,MAAM,EAAE,KAFmB;AAG3BE,EAAAA,QAAQ,EAAE,KAHiB;AAI3BE,EAAAA,UAAU,EAAER,MAJe;AAK3BK,EAAAA,aAAa,EAAEL,MALY;AAM3BvW,EAAAA,MAAM,EAAE,EANmB;AAO3BuT,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EAPc;AAQ3B2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EARe;AAS3BgT,EAAAA,cAAc,EAAE0G,MATW;AAU3B9C,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA,GAVG;AAW3BuD,EAAAA,QAAQ,EAAE,KAXiB;AAY3BC,EAAAA,WAAW,EAAE;AAZc,CAA7B;;AC9lBA,IAAMgF,aAAa,GAAG,SAAhBA,aAAgB,CAAC3N,KAAD,EAAW;AAAA,MAE7B4N,YAF6B,GAI3B5N,KAJ2B,CAE7B4N,YAF6B;AAAA,MAG7BC,eAH6B,GAI3B7N,KAJ2B,CAG7B6N,eAH6B;;AAAA,oBAKTrI,gBAAU,CAACC,uCAAD,CALD;AAAA,MAKvBC,SALuB,eAKvBA,SALuB;;AAM/B,SACE5F,6BAACgO,WAAD;AACE,IAAA,QAAQ,EAAEF,YADZ;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,SAAS,EAAEnI,SAAS,CAACqI;AAJvB,IADF;AAQD,CAdD;;AAgBAJ,aAAa,CAAChN,SAAd,GAA0B;AACxBiN,EAAAA,YAAY,EAAEhN,SAAS,CAACG,IAAV,CAAeD,UADL;AAExB+M,EAAAA,eAAe,EAAEjN,SAAS,CAACG,IAAV,CAAeD;AAFR,CAA1B;;ACpBO,IAAMlP,qBAAmB,GAAG,SAAtBA,mBAAsB,CAACnF,OAAD;AAAA,SAAaoF,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,GAApB,CAAnB;AAAA,CAA5B;;ACeP,IAAMsS,YAAU,GAAG,0BAAnB;AACA,IAAM8D,kBAAgB,GAAG,KAAzB;AACA,IAAMC,gBAAc,GAAG,KAAvB;AAEA,AAAe,SAAS6F,cAAT,OAQZ;AAAA,MAPDvhB,OAOC,QAPDA,OAOC;AAAA,MAND4b,MAMC,QANDA,MAMC;AAAA,MALDxF,MAKC,QALDA,MAKC;AAAA,MAJDxC,SAIC,QAJDA,SAIC;AAAA,MAHDoI,UAGC,QAHDA,UAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAMrI,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;AACAC,EAAAA,kBAAkB,CAAC4D,OAAnB,CAA2BE,YAA3B;AACA9D,EAAAA,kBAAkB,CAACzP,IAAnB,WAA2BuT,YAA3B,SAAwCiE,MAAM,GAAG,YAAH,GAAkB,YAAhE;AAEA,SACEvI;AAAK,IAAA,SAAS,EAAEQ,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB;AAAhB,KAEI4H,MAAM,GAEFvI,6BAAC,sBAAD;AACE,IAAA,MAAM,EAAE+C,MADV;AAEE,IAAA,OAAO,EAAEpW,OAFX;AAGE,IAAA,QAAQ,EAAEic,QAHZ;AAIE,IAAA,UAAU,EAAED,UAJd;AAKE,IAAA,WAAW,EAAEE;AALf,IAFE,GAWF7I,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,QAAQ,EAAEic,QAFZ;AAGE,IAAA,WAAW,EAAEC;AAHf,IAbR,CADF;AAuBD;AAEDqF,cAAc,CAACrN,SAAf,GAA2B;AACzBlU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,EAAoB7F,UADJ;AAEzBuH,EAAAA,MAAM,EAAEzH,SAAS,CAACI,IAFO;AAGzB6B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAHO;AAIzBd,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CAJc;AAQzBsH,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IARG;AASzB2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IATK;AAUzB2H,EAAAA,WAAW,EAAE/H,SAAS,CAACI;AAVE,CAA3B;AAaAgN,cAAc,CAAC3M,YAAf,GAA8B;AAC5BgH,EAAAA,MAAM,EAAE,KADoB;AAE5BxF,EAAAA,MAAM,EAAE,EAFoB;AAG5BxC,EAAAA,SAAS,EAAE,EAHiB;AAI5BoI,EAAAA,UAAU,EAAE,sBAAM,EAJU;AAK5BC,EAAAA,QAAQ,EAAE,KALkB;AAM5BC,EAAAA,WAAW,EAAE;AANe,CAA9B;;AASA,SAASsF,sBAAT,QAMG;AAAA,MALDxhB,OAKC,SALDA,OAKC;AAAA,MAJDoW,MAIC,SAJDA,MAIC;AAAA,MAHD4F,UAGC,SAHDA,UAGC;AAAA,MAFDC,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;AACD,MAAMtI,SAAS,GAAG,mCAAlB;AACA,MAAM4I,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AACA,MAAM2P,OAAO,GAAG3P,YAAM,CAAC,IAAD,CAAtB;;AAJC,kBAKmCuI,cAAQ,CAAC,KAAD,CAL3C;AAAA;AAAA,MAKM6E,UALN;AAAA,MAKkBC,aALlB;;AAAA,mBAMmC9E,cAAQ,CAAC,KAAD,CAN3C;AAAA;AAAA,MAMM+E,UANN;AAAA,MAMkBC,aANlB;;AAAA,mBAO2ChF,cAAQ,CAAC,KAAD,CAPnD;AAAA;AAAA,MAOMiF,cAPN;AAAA,MAOsBC,iBAPtB;;AAAA,oBAQqBnE,gBAAU,CAACC,uCAAD,CAR/B;AAAA,MAQOC,SARP,eAQOA,SARP;;AASD,MAAMkE,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,GAAG,EAAEmJ,UADP;AAEE,IAAA,SAAS,EAAE5I,SAFb;AAGE,IAAA,KAAK,EAAE;AACLyJ,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsBC,gBADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsBC;AAF3C;AAHT,KAQErI;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP;AACE,IAAA,SAAS,YAAKO,SAAL,WADX;AAEE,IAAA,GAAG,EAAEsB;AAFP,KAIE7B,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,SAAS,YAAK3J,SAAL,iBADX;AAEE,QAAA,GAAG,EAAEwL,OAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE,mBAAM;AACbtF,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACnBD,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SATH;AAUE,QAAA,MAAM,EAAE,kBAAM;AACZE,UAAAA,kBAAkB;AACnB;AAZH,SAcE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAdF,CADW;AAAA,KADf;AAwBE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMvI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BuI,QAAAA,KAAK;AACLR,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD;;AAIA,aACE7J,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEyB,OALb;AAME,QAAA,gBAAgB,EAAElK,gBANpB;AAOE,QAAA,aAAa,EAAEC,aAPjB;AAQE,QAAA,QAAQ;AARV,SAUE9B,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AAAE5B,UAAAA,UAAU,CAAC,IAAD,CAAV;AAAkB7G,UAAAA,aAAa;AAAK;AADvD,kBAVF,CADF;AAkBD;AA/CH,IAJF,CADF,EAwDI,CAAC+G,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAd,IAA4BE,cAA9B,CAAhB,IACE5J;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP,6BAAC,aAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW;AAFV,IADF,CAzDN,CADF,EAmEE/C;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,iCADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACiB;AAHrB,KAKGuB,SAAS,CAAC2G,6BALb,CADF,EAQEvM,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,sCADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACC;AAHrB,KAKGuC,SAAS,CAACwI,4BALb,CARF,CADF,CAnEF,CARF,CADF;AAiGD;;AAED,SAASC,sBAAT,QAIG;AAAA,MAHD1hB,OAGC,SAHDA,OAGC;AAAA,MAFDic,QAEC,SAFDA,QAEC;AAAA,MADDC,WACC,SADDA,WACC;AACD,MAAMtI,SAAS,GAAG,mCAAlB;AADC,MAEOpO,MAFP,GAEkBxF,OAFlB,CAEOwF,MAFP;AAGD,MAAMwY,SAAS,GAAGvO,YAAM,CAAC,IAAD,CAAxB;;AAHC,qBAIqBsJ,gBAAU,CAACC,uCAAD,CAJ/B;AAAA,MAIOC,SAJP,gBAIOA,SAJP;;AAAA,0BAQG5F,cAAK,CAAC0F,UAAN,CAAiBkF,wBAAjB,CARH;AAAA,MAMCC,kBAND,qBAMCA,kBAND;AAAA,MAOCC,iBAPD,qBAOCA,iBAPD;;AASD,SACE9K;AACE,IAAA,SAAS,EAAEO,SADb;AAEE,IAAA,KAAK,EAAE;AACLyJ,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsBC,gBADrC;AAEL4B,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsBC;AAF3C;AAFT,KAOErI;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KAEI,CAACsI,WAAD,IACE7I,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACiL,cAAD;AACE,QAAA,GAAG,EAAEN,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACE,kBAAL,EAAyB;AACvBpE,YAAAA,cAAc;AACf;AACF,SANH;AAOE,QAAA,SAAS,YAAKlG,SAAL,iCAPX;AAQE,QAAA,GAAG,EAAEpO,MAAM,CAACmc,UARd;AASE,QAAA,KAAK,EAAC,MATR;AAUE,QAAA,MAAM,EAAC,MAVT;AAWE,QAAA,GAAG,EAAC;AAXN,QADW;AAAA,KADf;AAgBE,IAAA,SAAS,EAAE,mBAACxM,aAAD;AAAA,aACT9B,6BAACsK;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEK,SALb;AAME,QAAA,gBAAgB,EAAEA,SANpB;AAOE,QAAA,aAAa,EAAE7I,aAPjB;AAQE,QAAA,KAAK,EAAE;AAAEkI,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AART,SAWIa,iBAAiB,GACbA,iBAAiB,CAAC;AAClBK,QAAAA,IAAI,EAAExe,OAAO,CAACwF,MADI;AAElBkY,QAAAA,KAAK,EAAEvI;AAFW,OAAD,CADJ,GAMb9B,6BAACoL,iBAAD;AACE,QAAA,IAAI,EAAEze,OAAO,CAACwF,MADhB;AAEE,QAAA,SAAS,EAAE2P;AAFb,QAjBR,CADS;AAAA;AAhBb,IAHN,CADF,EAkDE9B;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KAEI,CAACqI,QAAD,IACE5I,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,wBADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACmI,SAFxB;AAGE,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAHrB,KAKGlR,MAAM,CAACN,QAAP,IAAmB+T,SAAS,CAAC2I,OALhC,CAHN,EAYEvO;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KACEP,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,iCADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACiB;AAHrB,KAKGuB,SAAS,CAAC2G,6BALb,CADF,EAQEvM,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,sCADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACC;AAHrB,KAKGuC,SAAS,CAACwI,4BALb,CARF,CAZF,CAlDF,EA+EEpO;AAAK,IAAA,SAAS,YAAKO,SAAL;AAAd,KAEI,CAACsI,WAAD,IACE7I,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK1C,SAAL,cADX;AAEE,IAAA,IAAI,EAAE2C,uBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKG1J,qBAAA,CAA0BhN,OAA1B,CALH,CAHN,CA/EF,CAPF,CADF;AAuGD;;AAEDwhB,sBAAsB,CAACtN,SAAvB,GAAmC;AACjClU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,EAAoB7F,UADI;AAEjC+B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAAV,CAAiBL,UAFQ;AAGjC2H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAHW;AAIjC2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAJQ;AAKjC6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AALK,CAAnC;AAQAmN,sBAAsB,CAAC5M,YAAvB,GAAsC;AACpCoH,EAAAA,UAAU,EAAE,sBAAM;AADkB,CAAtC;AAIA0F,sBAAsB,CAACxN,SAAvB,GAAmC;AACjClU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB1U,IAAAA,MAAM,EAAE2O,SAAS,CAAC+F,KAAV,CAAgB;AACtBhV,MAAAA,QAAQ,EAAEiP,SAAS,CAACO,MADE;AAEtBiN,MAAAA,UAAU,EAAExN,SAAS,CAACO;AAFA,KAAhB;AADe,GAAhB,EAKNL,UAN8B;AAOjC4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAPQ;AAQjC6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AARK,CAAnC;;ACjVO,IAAMwN,OAAO,GAAG,kFAAhB;AACP,AAAO,IAAMC,UAAU,GAAG,qBAAnB;AACP,AAAO,IAAMC,mBAAmB,GAAG,8BAA5B;AACP,AAAO,IAAMC,mBAAmB,GAAG,8BAA5B;;ACAA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,SAAY,UAAC9T,IAAD;AAAA,WAAU8T,MAAM,CAAC7B,IAAP,CAAYjS,IAAZ,CAAV;AAAA,GAAZ;AAAA,CAAxB;AAEP,AAAO,IAAMwO,qBAAmB,GAAG,SAAtBA,mBAAsB,CAACxG,MAAD;AAAA,SACjCA,MAAM,KAAKxT,sBAAiB,CAACC,IAA7B,IACGuT,MAAM,KAAKxT,sBAAiB,CAACO,SADhC,IAEGiT,MAAM,KAAKxT,sBAAiB,CAACI,IAHC;AAAA,CAA5B;AAMP,AAAO,IAAM6a,eAAe,GAAG,SAAlBA,eAAkB,CAACzP,IAAD,EAAU;AACvC,MAAI;AACF,QAAIuS,MAAM,CAACwB,aAAP,IAAwBxB,MAAM,CAACwB,aAAP,CAAqBC,OAAjD,EAA0D;AACxD;AACA;AACA,aAAOzB,MAAM,CAACwB,aAAP,CAAqBC,OAArB,CAA6B,MAA7B,EAAqChU,IAArC,CAAP;AACD;;AACD,QAAIrN,QAAQ,CAACshB,qBAAT,IAAkCthB,QAAQ,CAACshB,qBAAT,CAA+B,MAA/B,CAAtC,EAA8E;AAC5E,UAAMC,QAAQ,GAAGvhB,QAAQ,CAAC+P,aAAT,CAAuB,UAAvB,CAAjB;AACAwR,MAAAA,QAAQ,CAACC,WAAT,GAAuBnU,IAAvB;AACAkU,MAAAA,QAAQ,CAACE,KAAT,CAAeC,QAAf,GAA0B,OAA1B,CAH4E;;AAI5E1hB,MAAAA,QAAQ,CAAC2hB,IAAT,CAAcC,WAAd,CAA0BL,QAA1B;AACAA,MAAAA,QAAQ,CAACM,MAAT;;AACA,UAAI;AACF,eAAO7hB,QAAQ,CAAC8hB,WAAT,CAAqB,MAArB,CAAP,CADE;AAEH,OAFD,CAEE,OAAOC,EAAP,EAAW;AACX,eAAO,KAAP;AACD,OAJD,SAIU;AACR/hB,QAAAA,QAAQ,CAAC2hB,IAAT,CAAcK,WAAd,CAA0BT,QAA1B;AACD;AACF;;AACD,WAAO,KAAP;AACD,GArBD,CAqBE,OAAO7W,GAAP,EAAY;AACZ,WAAOA,GAAP;AACD;AACF,CAzBM;AA2BP,AAAO,IAAM8S,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACve,OAAD;AAAA,SAAaA,OAAO,CAACwF,MAAR,IAAkBxF,OAAO,CAACwF,MAAR,CAAemc,UAA9C;AAAA,CAA5B;AAEP,AAAO,IAAMhD,aAAa,GAAG,SAAhBA,aAAgB,CAAC3e,OAAD;AAAA,SAC3BA,OAAO,CAACwF,MAAR,KACExF,OAAO,CAACwF,MAAR,CAAewd,UAAf,IACGhjB,OAAO,CAACwF,MAAR,CAAeN,QADlB,IAEGlF,OAAO,CAACwF,MAAR,CAAeP,MAHpB,CAD2B;AAAA,CAAtB;AAQP,AAAO,IAAME,qBAAmB,GAAG,SAAtBA,mBAAsB,CAACnF,OAAD;AAAA,SAAaoF,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,GAApB,CAAnB;AAAA,CAA5B;AAEP,AAAO,IAAM4d,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACjjB,OAAD,EAAa;AAAA,MACnCG,UADmC,GACpBH,OADoB,CACnCG,UADmC;;AAE3C,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,KAAP;AACD;;AAJ0C,MAKnCiC,GALmC,GAK3BjC,UAL2B,CAKnCiC,GALmC;;AAM3C,MAAI,CAACA,GAAL,EAAU;AACR,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAVM;;ACzCP,IAAM8gB,KAAK,GAAGjB,eAAe,CAACJ,OAAD,CAA7B;AAEA,AAAe,SAASzH,wBAAT,OAKZ;AAAA,MAJDpa,OAIC,QAJDA,OAIC;AAAA,MAHDqa,SAGC,QAHDA,SAGC;AAAA,MAFDzG,SAEC,QAFDA,SAEC;AAAA,2BADD0G,QACC;AAAA,MADDA,QACC,8BADU,KACV;;AAAA,oBACqBvB,gBAAU,CAACC,uCAAD,CAD/B;AAAA,MACOC,SADP,eACOA,SADP;;AAED,MAAMsB,eAAe,GAAGhE,uBAAe,CAACiE,MAAxC;AACA,MAAM2I,UAAU,GAAG7I,QAAQ,GAAG7D,mBAAW,CAACiB,cAAf,GAAgCjB,mBAAW,CAACqH,WAAvE;AACA,MAAMrD,YAAY,GAAGH,QAAQ,GAAG7D,mBAAW,CAACC,cAAf,GAAgCD,mBAAW,CAACiE,WAAzE;AACA,SAAO1F,aAAO,CAAC;AAAA,WAAM,YAAM;AACzB,UAAM2F,YAAY,GAAG3a,OAAO,CAAC4a,KAAR,CAAc,GAAd,CAArB;AACA,UAAMC,cAAc,GAAGF,YAAY,CAChCvU,GADoB,CAChB,UAAC0U,IAAD;AAAA,eACHoI,KAAK,CAACpI,IAAD,CAAL,GAEIzH,6BAAC+P,iBAAD;AACE,UAAA,GAAG,EAAE3Z,4BAAM,EADb;AAEE,UAAA,SAAS,EAAEmK,SAFb;AAGE,UAAA,GAAG,EAAEkH,IAHP;AAIE,UAAA,IAAI,EAAEP,eAJR;AAKE,UAAA,KAAK,EAAE4I;AALT,WAOGrI,IAPH,CAFJ,GAaIzH,6BAACiD,aAAD;AACE,UAAA,GAAG,EAAE7M,4BAAM,EADb;AAEE,UAAA,SAAS,EAAEmK,SAFb;AAGE,UAAA,IAAI,EAAE2G,eAHR;AAIE,UAAA,KAAK,EAAE4I;AAJT,WAMGrI,IANH,CAdD;AAAA,OADgB,CAAvB;;AAyBA,UAAIT,SAAS,GAAG,CAAhB,EAAmB;AACjBQ,QAAAA,cAAc,CAACzW,IAAf,CACEiP,6BAACiD,aAAD;AACE,UAAA,GAAG,EAAE7M,4BAAM,EADb;AAEE,UAAA,SAAS,EAAEmK,SAFb;AAGE,UAAA,IAAI,EAAE2G,eAHR;AAIE,UAAA,KAAK,EAAEE;AAJT,WAMGxB,SAAS,CAAC8B,cANb,CADF;AAUD;;AACD,aAAOF,cAAP;AACD,KAxCc;AAAA,GAAD,EAwCX,CAAC7a,OAAD,EAAUqa,SAAV,EAAqBzG,SAArB,CAxCW,CAAd;AAyCD;;AC7BD,IAAM6H,kBAAgB,GAAG,KAAzB;AACA,IAAM4H,cAAc,GAAG,KAAvB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAiBlB;AAAA,MAhBJ1H,MAgBI,QAhBJA,MAgBI;AAAA,MAfJ3W,MAeI,QAfJA,MAeI;AAAA,MAdJmR,MAcI,QAdJA,MAcI;AAAA,MAbJpW,OAaI,QAbJA,OAaI;AAAA,MAZJ8b,QAYI,QAZJA,QAYI;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,MAVJE,QAUI,QAVJA,QAUI;AAAA,MATJrI,SASI,QATJA,SASI;AAAA,MARJ6E,UAQI,QARJA,UAQI;AAAA,MAPJuD,UAOI,QAPJA,UAOI;AAAA,MANJ3O,WAMI,QANJA,WAMI;AAAA,MALJmL,WAKI,QALJA,WAKI;AAAA,MAJJ0D,WAII,QAJJA,WAII;AAAA,MAHJL,aAGI,QAHJA,aAGI;AAAA,MAFJ/G,cAEI,QAFJA,cAEI;AAAA,MADJ4D,sBACI,QADJA,sBACI;AAAA,MACIvY,UADJ,GACmBH,OADnB,CACIG,UADJ;AAEJ,MAAM0T,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAlE;;AAEA,MAAM2P,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIN,gBAAgB,CAACjjB,OAAD,CAApB,EAA+B;AAAA,UACrBoC,GADqB,GACbjC,UADa,CACrBiC,GADqB;AAE7Bue,MAAAA,MAAM,CAACC,IAAP,CAAYxe,GAAZ;AACD;AACF,GALD;;AAOA,MAAMohB,0BAA0B,GAAGpJ,wBAAsB,CAAC;AACxDpa,IAAAA,OAAO,EAAEA,OAAO,CAACA,OADuC;AAExDqa,IAAAA,SAAS,EAAEra,OAAO,CAACqa,SAFqC;AAGxDzG,IAAAA,SAAS,EAAE;AAH6C,GAAD,CAAzD;AAKA,MAAMwI,2BAA2B,GAAGhC,wBAAsB,CAAC;AACzDpa,IAAAA,OAAO,EAAEA,OAAO,CAACA,OADwC;AAEzDqa,IAAAA,SAAS,EAAEra,OAAO,CAACqa,SAFsC;AAGzDzG,IAAAA,SAAS,EAAE,0BAH8C;AAIzD0G,IAAAA,QAAQ,EAAE;AAJ+C,GAAD,CAA1D;AAOA,SACEjH;AAAK,IAAA,SAAS,YAAKyO,UAAL,cAAmBA,UAAnB,SAAgClG,MAAM,GAAG,YAAH,GAAkB,YAAxD,cAAwE/H,kBAAkB,CAACG,IAAnB,CAAwB,GAAxB,CAAxE;AAAd,KAEI4H,MAAM,GAEFvI,6BAAC,iBAAD;AACE,IAAA,MAAM,EAAE+C,MADV;AAEE,IAAA,MAAM,EAAEnR,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,QAAQ,EAAE8b,QAJZ;AAKE,IAAA,QAAQ,EAAEyH,QALZ;AAME,IAAA,QAAQ,EAAExH,QANZ;AAOE,IAAA,QAAQ,EAAEE,QAPZ;AAQE,IAAA,UAAU,EAAED,UARd;AASE,IAAA,UAAU,EAAEvD,UATd;AAUE,IAAA,WAAW,EAAEyD,WAVf;AAWE,IAAA,WAAW,EAAE7O,WAXf;AAYE,IAAA,WAAW,EAAEmL,WAZf;AAaE,IAAA,aAAa,EAAEqD,aAbjB;AAcE,IAAA,cAAc,EAAE/G,cAdlB;AAeE,IAAA,mBAAmB,EAAE0O,0BAfvB;AAgBE,IAAA,sBAAsB,EAAE9K;AAhB1B,IAFE,GAsBFrF,6BAAC,iBAAD;AACE,IAAA,MAAM,EAAEpO,MADV;AAEE,IAAA,OAAO,EAAEjF,OAFX;AAGE,IAAA,QAAQ,EAAEujB,QAHZ;AAIE,IAAA,QAAQ,EAAEtH,QAJZ;AAKE,IAAA,UAAU,EAAExD,UALd;AAME,IAAA,WAAW,EAAEyD,WANf;AAOE,IAAA,WAAW,EAAE7O,WAPf;AAQE,IAAA,WAAW,EAAEmL,WARf;AASE,IAAA,cAAc,EAAE1D,cATlB;AAUE,IAAA,mBAAmB,EAAEsH,2BAVvB;AAWE,IAAA,sBAAsB,EAAE1D;AAX1B,IAxBR,CADF;AA0CD,CAlFD;;AAoFA,SAAS+K,iBAAT,CAA2BlQ,KAA3B,EAAkC;AAAA,MAE9B6C,MAF8B,GAkB5B7C,KAlB4B,CAE9B6C,MAF8B;AAAA,MAG9BnR,MAH8B,GAkB5BsO,KAlB4B,CAG9BtO,MAH8B;AAAA,MAI9BjF,OAJ8B,GAkB5BuT,KAlB4B,CAI9BvT,OAJ8B;AAAA,MAK9B8b,QAL8B,GAkB5BvI,KAlB4B,CAK9BuI,QAL8B;AAAA,MAM9ByH,QAN8B,GAkB5BhQ,KAlB4B,CAM9BgQ,QAN8B;AAAA,MAO9BxH,QAP8B,GAkB5BxI,KAlB4B,CAO9BwI,QAP8B;AAAA,MAQ9BE,QAR8B,GAkB5B1I,KAlB4B,CAQ9B0I,QAR8B;AAAA,MAS9BD,UAT8B,GAkB5BzI,KAlB4B,CAS9ByI,UAT8B;AAAA,MAU9BvD,UAV8B,GAkB5BlF,KAlB4B,CAU9BkF,UAV8B;AAAA,MAW9ByD,WAX8B,GAkB5B3I,KAlB4B,CAW9B2I,WAX8B;AAAA,MAY9B1D,WAZ8B,GAkB5BjF,KAlB4B,CAY9BiF,WAZ8B;AAAA,MAa9BnL,WAb8B,GAkB5BkG,KAlB4B,CAa9BlG,WAb8B;AAAA,MAc9BwO,aAd8B,GAkB5BtI,KAlB4B,CAc9BsI,aAd8B;AAAA,MAe9B/G,cAf8B,GAkB5BvB,KAlB4B,CAe9BuB,cAf8B;AAAA,MAgB9BwH,mBAhB8B,GAkB5B/I,KAlB4B,CAgB9B+I,mBAhB8B;AAAA,MAiB9B5D,sBAjB8B,GAkB5BnF,KAlB4B,CAiB9BmF,sBAjB8B;AAAA,MAoB9BvY,UApB8B,GAqB5BH,OArB4B,CAoB9BG,UApB8B;AAAA,MAuB9BujB,YAvB8B,GAwB5BvjB,UAxB4B,CAuB9BujB,YAvB8B;;AAAA,oBAyBV3K,gBAAU,CAACC,uCAAD,CAzBA;AAAA,MAyBxBC,SAzBwB,eAyBxBA,SAzBwB;;AA0BhC,MAAMsD,mBAAmB,GAAGD,mBAA5B;AACA,MAAM3D,sBAAsB,GAAGD,sBAA/B;AACA,MAAM8D,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMgN,kBAAkB,GAAGhN,YAAM,CAAC,IAAD,CAAjC;AACA,MAAMiN,cAAc,GAAGjN,YAAM,CAAC,IAAD,CAA7B;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;AAEA,MAAMkN,aAAa,GAAGC,qBAAmB,CAACxG,MAAD,CAAzC;;AAjCgC,kBAkCI4B,cAAQ,CAAC,KAAD,CAlCZ;AAAA;AAAA,MAkCzB6E,UAlCyB;AAAA,MAkCbC,aAlCa;;AAAA,mBAmCI9E,cAAQ,CAAC,KAAD,CAnCZ;AAAA;AAAA,MAmCzB+E,UAnCyB;AAAA,MAmCbC,aAnCa;;AAqChC,MAAMqB,kBAAkB,GAAIhR,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAA3F;;AAEA,MAAMkZ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,GAAG,EAAEmJ,UADP;AAEE,IAAA,SAAS,EAAEuF,mBAFb;AAGE,IAAA,KAAK,EAAE;AACL1E,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsB4H,cADrC;AAEL/F,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsB4H;AAF3C;AAHT,KAQEhQ;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O;AAAK,IAAA,SAAS,YAAK0O,mBAAL,WAAd;AAAgD,IAAA,GAAG,EAAE7M;AAArD,KACE7B,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,SAAS,YAAKwE,mBAAL,iBADX;AAEE,QAAA,GAAG,EAAErF,cAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE,mBAAM;AACb5C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACpB,SARH;AASE,QAAA,MAAM,EAAE,kBAAM;AACZC,UAAAA,kBAAkB;AACnB;AAXH,SAaE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAbF,CADW;AAAA,KADf;AAuBE,IAAA,SAAS,EAAE,mBAACtI,aAAD;AAAA,aACT9B,6BAACsK,eAAD;AACE,QAAA,SAAS,EAAEjB,cADb;AAAA;AAGE,QAAA,gBAAgB,EAAExH,gBAHpB;AAAA;AAKE,QAAA,aAAa,EAAEC,aALjB;AAME,QAAA,QAAQ;AANV,SASIwH,aAAa,IACXtJ,6BAACuK,cAAD;AACE,QAAA,SAAS,YAAKmE,mBAAL,uBADX;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAElE,UAAAA,eAAe,CAAC7d,OAAO,CAACA,OAAT,CAAf;AAAkCmV,UAAAA,aAAa;AAAK;AAFvE,SAIG8D,SAAS,CAAC0K,2BAJb,CAVN,EAmBIhH,aAAa,IACXtJ,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBC,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACA5G,UAAAA,aAAa;AACd;AALH,SAOG8D,SAAS,CAAC2K,2BAPb,CApBN,EAgCK5jB,OAAO,IAAIA,OAAO,CAACkP,YAAnB,IAAmClP,OAAO,CAACkP,YAAR,EAApC,IACEmE,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb/B,UAAAA,aAAa,CAAC7b,OAAD,CAAb;AACAmV,UAAAA,aAAa;AACd;AAJH,SAMG8D,SAAS,CAACqG,6BANb,CAjCN,EA2CEjM,6BAACuK,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI9B,QAAJ,EAAc;AAAE;AAAS;;AACzBE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA7G,UAAAA,aAAa;AACd;AALH,SAOG8D,SAAS,CAACsG,6BAPb,CA3CF,CADS;AAAA;AAvBb,IADF,EAiFK5C,aAAa,IAAItP,WAAjB,IAAiCmL,WAAW,CAACoB,IAAZ,GAAmB,CAArD,IAEEvG,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,SAAS,YAAKwE,mBAAL,yBADX;AAEE,QAAA,GAAG,EAAEtF,kBAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE3C;AALX,SAOEzG,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAPF,CADW;AAAA,KADf;AAiBE,IAAA,SAAS,EAAE,mBAACtI,aAAD;AAAA,aACT9B,6BAAC,sBAAD;AACE,QAAA,OAAO,EAAErT,OADX;AAEE,QAAA,SAAS,EAAEyc,kBAFb;AAGE,QAAA,gBAAgB,EAAEvH,gBAHpB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,gBAAgB,EAAE;AAAE8E,UAAAA,CAAC,EAAE;AAAL;AALpB,QADS;AAAA;AAjBb,IAnFN,CADF,EAmHI,CAACiC,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAhB,CAAhB,IACE1J;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O,6BAAC,aAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW;AAFV,IADF,CApHN,CADF,EA8HE/C;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O,6BAAC,mBAAD,OADF,CADF,EAIEA;AACE,IAAA,SAAS,YAAK0O,mBAAL,yBAAuCkB,gBAAgB,CAACjjB,OAAD,CAAhB,GAA4B,EAA5B,aAAoC+hB,mBAApC,0BAAvC,CADX;AAEE,IAAA,OAAO,EAAEwB,QAFX;AAGE,IAAA,SAAS,EAAEA,QAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAQIG,YAAY,IACVrQ,6BAACuC,qBAAD;AACE,IAAA,GAAG,EAAE8N,YAAY,CAACthB,GAAb,IAAoB,EAD3B;AAEE,IAAA,GAAG,EAAEshB,YAAY,CAACG,GAFpB;AAGE,IAAA,SAAS,YAAK9B,mBAAL,uBAHX;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACd1O;AAAK,MAAA,SAAS,YAAK0O,mBAAL;AAAd,OACE1O,6BAACwC,YAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,IAAI,EAAEC,iBAAS,CAACgO;AAHlB,MADF;AAPJ,IATN,CAJF,EAgCEzQ;AACE,IAAA,SAAS,YAAK0O,mBAAL,sBAAoCkB,gBAAgB,CAACjjB,OAAD,CAAhB,GAA4B,EAA5B,aAAoC+hB,mBAApC,uBAApC,CADX;AAEE,IAAA,OAAO,EAAEwB,QAFX;AAGE,IAAA,SAAS,EAAEA,QAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAQIpjB,UAAU,CAAC4jB,KAAX,IACE1Q;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O,6BAACiD,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACyN,UAA7B;AAAyC,IAAA,KAAK,EAAEvN,mBAAW,CAACiB;AAA5D,KACGvX,UAAU,CAAC4jB,KADd,CADF,CATN,EAiBI5jB,UAAU,CAAC8jB,WAAX,IACE5Q;AAAK,IAAA,SAAS,YAAK0O,mBAAL;AAAd,KACE1O,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAAC2N,MADxB;AAEE,IAAA,KAAK,EAAEzN,mBAAW,CAACiB,cAFrB;AAGE,IAAA,SAAS,YAAKqK,mBAAL;AAHX,KAKG5hB,UAAU,CAAC8jB,WALd,CADF,CAlBN,EA8BI9jB,UAAU,CAACiC,GAAX,IACEiR,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACC,SADxB;AAEE,IAAA,KAAK,EAAEC,mBAAW,CAACC,cAFrB;AAGE,IAAA,SAAS,YAAKqL,mBAAL;AAHX,KAKG5hB,UAAU,CAACiC,GALd,CA/BN,EAyCIic,kBAAkB,IAEhBhL;AACE,IAAA,SAAS,YAAK0O,mBAAL,uCADX;AAEE,IAAA,OAAO,EAAE,iBAACoC,KAAD;AAAA,aAAWA,KAAK,CAACC,eAAN,EAAX;AAAA,KAFX;AAGE,IAAA,SAAS,EAAE,mBAACD,KAAD;AAAA,aAAWA,KAAK,CAACC,eAAN,EAAX;AAAA,KAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAOE/Q,6BAAC,cAAD;AACE,IAAA,SAAS,YAAK0O,mBAAL,8BADX;AAEE,IAAA,MAAM,EAAE9c,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,UAAU,EAAEyY,UAJd;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,cAAc,EAAE1D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IAPF,CA3CN,CAhCF,CA9HF,CARF,CADF;AA0OD;;AAED,SAAS2L,iBAAT,CAA2B9Q,KAA3B,EAAkC;AAAA,MAE9BtO,MAF8B,GAa5BsO,KAb4B,CAE9BtO,MAF8B;AAAA,MAG9BjF,OAH8B,GAa5BuT,KAb4B,CAG9BvT,OAH8B;AAAA,MAI9BujB,QAJ8B,GAa5BhQ,KAb4B,CAI9BgQ,QAJ8B;AAAA,MAK9BtH,QAL8B,GAa5B1I,KAb4B,CAK9B0I,QAL8B;AAAA,MAM9BxD,UAN8B,GAa5BlF,KAb4B,CAM9BkF,UAN8B;AAAA,MAO9ByD,WAP8B,GAa5B3I,KAb4B,CAO9B2I,WAP8B;AAAA,MAQ9B7O,WAR8B,GAa5BkG,KAb4B,CAQ9BlG,WAR8B;AAAA,MAS9BmL,WAT8B,GAa5BjF,KAb4B,CAS9BiF,WAT8B;AAAA,MAU9B1D,cAV8B,GAa5BvB,KAb4B,CAU9BuB,cAV8B;AAAA,MAW9BwH,mBAX8B,GAa5B/I,KAb4B,CAW9B+I,mBAX8B;AAAA,MAY9B5D,sBAZ8B,GAa5BnF,KAb4B,CAY9BmF,sBAZ8B;AAAA,MAe9BvY,UAf8B,GAgB5BH,OAhB4B,CAe9BG,UAf8B;AAAA,MAkB9BujB,YAlB8B,GAmB5BvjB,UAnB4B,CAkB9BujB,YAlB8B;;AAAA,qBAoBV3K,gBAAU,CAACC,uCAAD,CApBA;AAAA,MAoBxBC,SApBwB,gBAoBxBA,SApBwB;;AAqBhC,MAAMsD,mBAAmB,GAAGD,mBAA5B;AACA,MAAM3D,sBAAsB,GAAGD,sBAA/B;AAEA,MAAM8D,UAAU,GAAG/M,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMuO,SAAS,GAAGvO,YAAM,CAAC,IAAD,CAAxB;AACA,MAAMgN,kBAAkB,GAAGhN,YAAM,CAAC,IAAD,CAAjC;AACA,MAAMiN,cAAc,GAAGjN,YAAM,CAAC,IAAD,CAA7B;AACA,MAAMyF,gBAAgB,GAAGzF,YAAM,CAAC,IAAD,CAA/B;;AA5BgC,0BAiC5B4D,cAAK,CAAC0F,UAAN,CAAiBkF,wBAAjB,CAjC4B;AAAA,MA+B9BC,kBA/B8B,qBA+B9BA,kBA/B8B;AAAA,MAgC9BC,iBAhC8B,qBAgC9BA,iBAhC8B;;AAAA,mBAmCInG,cAAQ,CAAC,KAAD,CAnCZ;AAAA;AAAA,MAmCzB6E,UAnCyB;AAAA,MAmCbC,aAnCa;;AAAA,mBAoCI9E,cAAQ,CAAC,KAAD,CApCZ;AAAA;AAAA,MAoCzB+E,UApCyB;AAAA,MAoCbC,aApCa;;AAsChC,MAAMqB,kBAAkB,GAAIhR,WAAW,IAAIrN,OAAO,CAACwV,SAAvB,IAAoCxV,OAAO,CAACwV,SAAR,CAAkBvR,MAAlB,GAA2B,CAA3F;AACA,MAAMma,qBAAqB,GAAG/Q,WAAW,IAAImL,WAAf,IAA+BA,WAAW,CAACoB,IAAZ,GAAmB,CAAhF;;AAEA,MAAMuD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA9B,EAAAA,aAAa,CAAC;AACZ1H,IAAAA,GAAG,EAAEgJ,UADO;AAEZrB,IAAAA,QAAQ,EAAE2B;AAFE,GAAD,CAAb;AAKA,SACEzJ;AACE,IAAA,GAAG,EAAEmJ,UADP;AAEE,IAAA,SAAS,EAAEwF,mBAFb;AAGE,IAAA,KAAK,EAAE;AACL3E,MAAAA,UAAU,EAAEpB,QAAQ,GAAGR,kBAAH,GAAsB4H,cADrC;AAEL/F,MAAAA,aAAa,EAAEpB,WAAW,GAAGT,kBAAH,GAAsB4H;AAF3C;AAHT,KAQEhQ;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KACE3O;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KAEI,CAAC9F,WAAD,IACE7I,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACiL,cAAD;AACE,QAAA,GAAG,EAAEN,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACE,kBAAL,EAAyB;AACvBpE,YAAAA,cAAc;AACf;AACF,SANH;AAOE,QAAA,SAAS,YAAKkI,mBAAL,aAPX;AAQE,QAAA,GAAG,EAAEzD,mBAAmB,CAACve,OAAD,CAR1B;AASE,QAAA,KAAK,EAAC,MATR;AAUE,QAAA,MAAM,EAAC,MAVT;AAWE,QAAA,GAAG,EAAC;AAXN,QADW;AAAA,KADf;AAgBE,IAAA,SAAS,EAAE,mBAACmV,aAAD;AAAA,aACT9B,6BAACsK,eAAD;AACE,QAAA,SAAS,EAAEK,SADb;AAAA;AAGE,QAAA,gBAAgB,EAAEA,SAHpB;AAAA;AAKE,QAAA,aAAa,EAAE7I,aALjB;AAME,QAAA,KAAK,EAAE;AAAEkI,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AANT,SASIa,iBAAiB,GACbA,iBAAiB,CAAC;AAClBK,QAAAA,IAAI,EAAExe,OAAO,CAACwF,MADI;AAElBkY,QAAAA,KAAK,EAAEvI;AAFW,OAAD,CADJ,GAMb9B,6BAACoL,iBAAD;AACE,QAAA,IAAI,EAAEze,OAAO,CAACwF,MADhB;AAEE,QAAA,SAAS,EAAE2P;AAFb,QAfR,CADS;AAAA;AAhBb,IAHN,EA+CI,CAAC8G,QAAD,IACE5I,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK0L,mBAAL,kBADX;AAEE,IAAA,IAAI,EAAEzL,uBAAe,CAACmI,SAFxB;AAGE,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAHrB,KAKGiI,aAAa,CAAC3e,OAAD,CALhB,CAhDN,EAyDEqT;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KACE3O,6BAAC,mBAAD,OADF,CAzDF,EA4DEA;AACE,IAAA,SAAS,YAAK2O,mBAAL,yBAAuCiB,gBAAgB,CAACjjB,OAAD,CAAhB,GAA4B,EAA5B,aAAoCgiB,mBAApC,0BAAvC,CADX;AAEE,IAAA,OAAO,EAAEuB,QAFX;AAGE,IAAA,SAAS,EAAEA,QAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAQIG,YAAY,IACVrQ,6BAACuC,qBAAD;AACE,IAAA,GAAG,EAAE8N,YAAY,CAACthB,GAAb,IAAoB,EAD3B;AAEE,IAAA,GAAG,EAAEshB,YAAY,CAACG,GAAb,IAAoB,EAF3B;AAGE,IAAA,SAAS,YAAK7B,mBAAL,uBAHX;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,gBAAgB,EACd3O;AAAK,MAAA,SAAS,YAAK2O,mBAAL;AAAd,OACE3O,6BAACwC,YAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,IAAI,EAAEC,iBAAS,CAACgO;AAHlB,MADF;AAPJ,IATN,CA5DF,EAwFEzQ;AACE,IAAA,SAAS,YAAK2O,mBAAL,sBAAoCiB,gBAAgB,CAACjjB,OAAD,CAAhB,GAA4B,EAA5B,aAAoCgiB,mBAApC,uBAApC,CADX;AAEE,IAAA,OAAO,EAAEuB,QAFX;AAGE,IAAA,SAAS,EAAEA,QAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAQIpjB,UAAU,CAAC4jB,KAAX,IACE1Q;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KAEE3O,6BAACiD,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACyN,UAA7B;AAAyC,IAAA,KAAK,EAAEvN,mBAAW,CAACiB;AAA5D,KACGvX,UAAU,CAAC4jB,KADd,CAFF,CATN,EAkBI5jB,UAAU,CAAC8jB,WAAX,IACE5Q;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KACE3O,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAAC2N,MADxB;AAEE,IAAA,KAAK,EAAEzN,mBAAW,CAACiB,cAFrB;AAGE,IAAA,SAAS,YAAKsK,mBAAL;AAHX,KAKG7hB,UAAU,CAAC8jB,WALd,CADF,CAnBN,EA+BI9jB,UAAU,CAACiC,GAAX,IACEiR;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KACE3O,6BAACiD,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACC,SADxB;AAEE,IAAA,KAAK,EAAEC,mBAAW,CAACC,cAFrB;AAGE,IAAA,SAAS,YAAKsL,mBAAL;AAHX,KAKG7hB,UAAU,CAACiC,GALd,CADF,CAhCN,EA4CIic,kBAAkB,IAEhBhL;AACE,IAAA,SAAS,YAAK2O,mBAAL,uCADX;AAEE,IAAA,OAAO,EAAE,iBAACmC,KAAD;AAAA,aAAWA,KAAK,CAACC,eAAN,EAAX;AAAA,KAFX;AAGE,IAAA,SAAS,EAAE,mBAACD,KAAD;AAAA,aAAWA,KAAK,CAACC,eAAN,EAAX;AAAA,KAHb;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE;AALZ,KAOE/Q,6BAAC,cAAD;AACE,IAAA,SAAS,YAAK2O,mBAAL,8BADX;AAEE,IAAA,MAAM,EAAE/c,MAFV;AAGE,IAAA,OAAO,EAAEjF,OAHX;AAIE,IAAA,UAAU,EAAEyY,UAJd;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,cAAc,EAAE1D,cANlB;AAOE,IAAA,sBAAsB,EAAE4D;AAP1B,IAPF,CA9CN,CAxFF,CADF,EA4JErF;AAAK,IAAA,SAAS,YAAK2O,mBAAL;AAAd,KAEI,CAAC9F,WAAD,IAAgB,EAAEW,UAAU,IAAIE,UAAhB,CAAhB,IACE1J,6BAACiD,aAAD;AACE,IAAA,SAAS,YAAK0L,mBAAL,cADX;AAEE,IAAA,IAAI,EAAEzL,uBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,mBAAW,CAACC;AAHrB,KAKGvR,qBAAmB,CAACnF,OAAD,CALtB,CAHN,EAYEqT;AAAK,IAAA,SAAS,YAAK2O,mBAAL,WAAd;AAAgD,IAAA,GAAG,EAAE9M;AAArD,KAEIkJ,qBAAqB,IAEnB/K,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEd,kBADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb3C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACpB,SAPH;AAQE,QAAA,MAAM,EAAE,kBAAM;AACZC,UAAAA,kBAAkB;AACnB;AAVH,SAYE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACkE,UAHlB;AAIE,QAAA,SAAS,EAAElD,kBAAU,CAAC2G;AAJxB,QAZF,CADW;AAAA,KADf;AAsBE,IAAA,SAAS,EAAE,mBAACtI,aAAD;AAAA,aACT9B,6BAAC,sBAAD;AACE,QAAA,SAAS,EAAEoJ,kBADb;AAEE,QAAA,gBAAgB,EAAEvH,gBAFpB;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,OAAO,EAAEnV,OAJX;AAKE,QAAA,gBAAgB,EAAE;AAAEia,UAAAA,CAAC,EAAE;AAAL;AALpB,QADS;AAAA;AAtBb,IAJN,EAsCE5G,6BAACwG,iBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACXzG,6BAACkK,gBAAD;AACE,QAAA,GAAG,EAAEb,cADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb5C,UAAAA,cAAc;AACdqD,UAAAA,mBAAmB;AACpB,SAPH;AAQE,QAAA,MAAM,EAAE,kBAAM;AACZC,UAAAA,kBAAkB;AACnB;AAVH,SAYE/J,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC0H,IAHlB;AAIE,QAAA,SAAS,EAAE1G,kBAAU,CAAC2G;AAJxB,QAZF,CADW;AAAA,KADf;AAsBE,IAAA,SAAS,EAAE,mBAACtI,aAAD;AAAA,aACT9B,6BAACsK,eAAD;AACE,QAAA,SAAS,EAAEjB,cADb;AAEE,QAAA,gBAAgB,EAAExH,gBAFpB;AAGE,QAAA,aAAa,EAAEC;AAHjB,SAKE9B,6BAACuK,cAAD;AACE,QAAA,SAAS,YAAKoE,mBAAL,uBADX;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAEnE,UAAAA,eAAe,CAAC7d,OAAO,CAACA,OAAT,CAAf;AAAkCmV,UAAAA,aAAa;AAAK;AAFvE,SAIG8D,SAAS,CAAC0K,2BAJb,CALF,CADS;AAAA;AAtBb,IAtCF,CAZF,CA5JF,CARF,CADF;AAiQD;;AAID,IAAMnI,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEA8H,eAAe,CAACpP,SAAhB,GAA4B;AAC1B0H,EAAAA,MAAM,EAAEzH,SAAS,CAACI,IAAV,CAAeF,UADG;AAE1BpP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UAFC;AAG1BrU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvBla,IAAAA,OAAO,EAAEmU,SAAS,CAACO,MADI;AAEvBlP,IAAAA,MAAM,EAAE2O,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAFe;AAGvB/Z,IAAAA,UAAU,EAAEgU,SAAS,CAAC+F,KAAV,CAAgB;AAC1B6J,MAAAA,KAAK,EAAE5P,SAAS,CAACO,MADS;AAE1BuP,MAAAA,WAAW,EAAE9P,SAAS,CAACO,MAFG;AAG1BtS,MAAAA,GAAG,EAAE+R,SAAS,CAACO,MAHW;AAI1BgP,MAAAA,YAAY,EAAEvP,SAAS,CAAC+F,KAAV,CAAgB;AAC5B9X,QAAAA,GAAG,EAAE+R,SAAS,CAACO,MADa;AAE5BmP,QAAAA,GAAG,EAAE1P,SAAS,CAACO;AAFa,OAAhB;AAJY,KAAhB,CAHW;AAYvBc,IAAAA,SAAS,EAAErB,SAAS,CAACiD,KAZE;AAavBiD,IAAAA,SAAS,EAAElG,SAAS,CAACM;AAbE,GAAhB,EAcNJ,UAjBuB;AAkB1BhH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAlBF;AAmB1BT,EAAAA,SAAS,EAAEO,SAAS,CAACK,SAAV,CAAoB,CAC7BL,SAAS,CAACO,MADmB,EAE7BP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B,CAF6B,CAApB,CAnBe;AAuB1B0B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MAvBQ;AAwB1BoH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAxBM;AAyB1BwH,EAAAA,QAAQ,EAAE5H,SAAS,CAACG,IAzBM;AA0B1B0H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IA1BI;AA2B1BuH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IA3BC;AA4B1BQ,EAAAA,cAAc,EAAEX,SAAS,CAACG,IA5BA;AA6B1BmE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CA7Bc;AA8B1B0W,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CA9Ba;AA+B1B4W,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IA/BR;AAgC1B2H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAhCM;AAiC1B2H,EAAAA,WAAW,EAAE/H,SAAS,CAACI;AAjCG,CAA5B;AAoCA+O,eAAe,CAAC1O,YAAhB,GAA+B;AAC7BhB,EAAAA,SAAS,EAAE,EADkB;AAE7BwC,EAAAA,MAAM,EAAE,EAFqB;AAG7B0F,EAAAA,QAAQ,EAAE,KAHmB;AAI7BC,EAAAA,QAAQ,EAAEP,MAJmB;AAK7BQ,EAAAA,UAAU,EAAER,MALiB;AAM7BK,EAAAA,aAAa,EAAEL,MANc;AAO7B1G,EAAAA,cAAc,EAAE0G,MAPa;AAQ7B/C,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EARiB;AAS7B0W,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EATgB;AAU7B4W,EAAAA,sBAAsB,EAAE8C,MAVK;AAW7BS,EAAAA,QAAQ,EAAE,KAXmB;AAY7BC,EAAAA,WAAW,EAAE;AAZgB,CAA/B;AAeAuH,iBAAiB,CAACvP,SAAlB,GAA8B;AAC5BkC,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MADU;AAE5BzP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UAFG;AAG5BrU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvBla,IAAAA,OAAO,EAAEmU,SAAS,CAACO,MADI;AAEvBvU,IAAAA,UAAU,EAAEgU,SAAS,CAAC+F,KAAV,CAAgB;AAC1B6J,MAAAA,KAAK,EAAE5P,SAAS,CAACO,MADS;AAE1BuP,MAAAA,WAAW,EAAE9P,SAAS,CAACO,MAFG;AAG1BtS,MAAAA,GAAG,EAAE+R,SAAS,CAACO,MAHW;AAI1BgP,MAAAA,YAAY,EAAEvP,SAAS,CAAC+F,KAAV,CAAgB;AAC5B9X,QAAAA,GAAG,EAAE+R,SAAS,CAACO,MADa;AAE5BmP,QAAAA,GAAG,EAAE1P,SAAS,CAACO;AAFa,OAAhB;AAJY,KAAhB,CAFW;AAWvBc,IAAAA,SAAS,EAAErB,SAAS,CAACiD,KAXE;AAYvBiD,IAAAA,SAAS,EAAElG,SAAS,CAACM,MAZE;AAavBvF,IAAAA,YAAY,EAAEiF,SAAS,CAACG,IAbD;AAcvBgQ,IAAAA,SAAS,EAAEnQ,SAAS,CAACM;AAdE,GAAhB,EAeNJ,UAlByB;AAmB5ByH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAAV,CAAeF,UAnBG;AAoB5BkP,EAAAA,QAAQ,EAAEpP,SAAS,CAACG,IAAV,CAAeD,UApBG;AAqB5B0H,EAAAA,QAAQ,EAAE5H,SAAS,CAACG,IAAV,CAAeD,UArBG;AAsB5B2H,EAAAA,UAAU,EAAE7H,SAAS,CAACG,IAAV,CAAeD,UAtBC;AAuB5BoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAvBV;AAwB5BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAxBX;AAyB5BhH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UAzBA;AA0B5BwH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAAV,CAAeD,UA1BF;AA2B5BS,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAAV,CAAeD,UA3BH;AA4B5BiI,EAAAA,mBAAmB,EAAEnI,SAAS,CAACG,IAAV,CAAeD,UA5BR;AA6B5BqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAAV,CAAeD,UA7BX;AA8B5B4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UA9BG;AA+B5B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AA/BA,CAA9B;AAkCAoP,iBAAiB,CAAC7O,YAAlB,GAAiC;AAC/BwB,EAAAA,MAAM,EAAE;AADuB,CAAjC;AAIAiO,iBAAiB,CAACnQ,SAAlB,GAA8B;AAC5BjP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UADG;AAE5BrU,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvBla,IAAAA,OAAO,EAAEmU,SAAS,CAACO,MADI;AAEvBlP,IAAAA,MAAM,EAAE2O,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAFe;AAGvB/Z,IAAAA,UAAU,EAAEgU,SAAS,CAAC+F,KAAV,CAAgB;AAC1B6J,MAAAA,KAAK,EAAE5P,SAAS,CAACO,MADS;AAE1BuP,MAAAA,WAAW,EAAE9P,SAAS,CAACO,MAFG;AAG1BtS,MAAAA,GAAG,EAAE+R,SAAS,CAACO,MAHW;AAI1BgP,MAAAA,YAAY,EAAEvP,SAAS,CAAC+F,KAAV,CAAgB;AAC5B9X,QAAAA,GAAG,EAAE+R,SAAS,CAACO,MADa;AAE5BmP,QAAAA,GAAG,EAAE1P,SAAS,CAACO;AAFa,OAAhB;AAJY,KAAhB,CAHW;AAYvBc,IAAAA,SAAS,EAAErB,SAAS,CAACiD,KAZE;AAavBiD,IAAAA,SAAS,EAAElG,SAAS,CAACM;AAbE,GAAhB,EAcNJ,UAhByB;AAiB5BkP,EAAAA,QAAQ,EAAEpP,SAAS,CAACG,IAAV,CAAeD,UAjBG;AAkB5BoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAlBV;AAmB5BmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAnBX;AAoB5BhH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UApBA;AAqB5BS,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAAV,CAAeD,UArBH;AAsB5BiI,EAAAA,mBAAmB,EAAEnI,SAAS,CAACG,IAAV,CAAeD,UAtBR;AAuB5BqE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG,IAAV,CAAeD,UAvBX;AAwB5B4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UAxBG;AAyB5B6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF;AAzBA,CAA9B;;ACrxBe,SAASkQ,UAAT,OAoBZ;AAAA;;AAAA,MAnBDvkB,OAmBC,QAnBDA,OAmBC;AAAA,MAlBDiF,MAkBC,QAlBDA,MAkBC;AAAA,MAjBD6W,QAiBC,QAjBDA,QAiBC;AAAA,MAhBD0I,YAgBC,QAhBDA,YAgBC;AAAA,MAfDC,YAeC,QAfDA,YAeC;AAAA,MAdDxW,aAcC,QAdDA,aAcC;AAAA,MAbDyW,aAaC,QAbDA,aAaC;AAAA,MAZDtO,MAYC,QAZDA,MAYC;AAAA,MAXDyF,aAWC,QAXDA,aAWC;AAAA,MAVDxO,WAUC,QAVDA,WAUC;AAAA,MATD4O,QASC,QATDA,QASC;AAAA,MARDC,WAQC,QARDA,WAQC;AAAA,MAPD1D,WAOC,QAPDA,WAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDkM,oBAKC,QALDA,oBAKC;AAAA,MAJD7P,cAIC,QAJDA,cAIC;AAAA,MAHD4D,sBAGC,QAHDA,sBAGC;AAAA,MAFDkM,mBAEC,QAFDA,mBAEC;AAAA,MADDliB,mBACC,QADDA,mBACC;AAAA,wBACuB1C,OADvB,CACOwF,MADP;AAAA,MACOA,MADP,gCACgB,EADhB;;AAAA,kBAE+BwS,cAAQ,CAAC,KAAD,CAFvC;AAAA;AAAA,MAEM+D,QAFN;AAAA,MAEgB8I,WAFhB;;AAAA,mBAGmC7M,cAAQ,CAAC,KAAD,CAH3C;AAAA;AAAA,MAGMgE,UAHN;AAAA,MAGkB8I,aAHlB;;AAAA,mBAI2C9M,cAAQ,CAAC,KAAD,CAJnD;AAAA;AAAA,MAIM+M,cAJN;AAAA,MAIsBC,iBAJtB;;AAAA,mBAKmChN,cAAQ,CAAC,KAAD,CAL3C;AAAA;AAAA,MAKMiN,UALN;AAAA,MAKkBC,aALlB;;AAMD,MAAMC,mBAAmB,GAAG1V,YAAM,CAAC,IAAD,CAAlC;AACA,MAAM2V,mBAAmB,GAAG3V,YAAM,CAAC,IAAD,CAAlC;AAEA4V,EAAAA,qBAAe,CAAC,YAAM;AACpB,QAAIV,oBAAoB,KAAK3kB,OAAO,CAACwC,SAArC,EAAgD;AAC9C,UAAI4iB,mBAAmB,IAAIA,mBAAmB,CAACvb,OAA/C,EAAwD;AACtDub,QAAAA,mBAAmB,CAACvb,OAApB,CAA4Byb,cAA5B,CAA2C;AACzCC,UAAAA,KAAK,EAAE,QADkC;AAEzCC,UAAAA,MAAM,EAAE;AAFiC,SAA3C;AAIApkB,QAAAA,UAAU,CAAC,YAAM;AACf8jB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAFS,EAEP,GAFO,CAAV;AAGD;AACF,KAVD,MAUO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAdc,EAcZ,CAACP,oBAAD,EAAuBS,mBAAmB,CAACvb,OAA3C,EAAoD7J,OAAO,CAACwC,SAA5D,CAdY,CAAf;AAeA,MAAMijB,eAAe,GAAGzQ,aAAO,CAAC,YAAM;AACpC,QAAI4P,mBAAJ,EAAyB;AACvB,aAAOA,mBAAmB,CAAC5kB,OAAD,EAAU0C,mBAAV,EAA+BuZ,QAA/B,EAAyCC,WAAzC,CAA1B,CADuB;AAGxB;;AACD,WAAO,IAAP;AACD,GAN8B,EAM5B,CAAClc,OAAD,EAAUA,OAAO,CAACA,OAAlB,EAA2B4kB,mBAA3B,CAN4B,CAA/B;AAQA,MAAMhJ,MAAM,GAAI3W,MAAM,KAAKO,MAAM,CAACP,MAAnB,IACTjF,OAAO,CAAC2C,YAAR,KAAyB,SADhB,IAET3C,OAAO,CAAC2C,YAAR,KAAyB,QAF/B;;AAIA,MAAI8iB,eAAJ,EAAqB;AACnB,WACEpS;AACE,MAAA,GAAG,EAAE+R,mBADP;AAEE,MAAA,SAAS,6EAELH,UAAU,GAAG,+BAAH,GAAqC,EAF1C;AAFX,OASIR,YAAY,IACVpR,6BAACqS,qBAAD,QACErS,6BAACiD,aAAD;AAAO,MAAA,IAAI,EAAEC,uBAAe,CAACmI,SAA7B;AAAwC,MAAA,KAAK,EAAEjI,mBAAW,CAACC;AAA3D,OACGtR,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,eAApB,CADT,CADF,CAVN,EAiBEgO,6BAAC,eAAD;AAAiB,MAAA,OAAO,EAAErT;AAA1B,MAjBF,CADF;AAqBD;;AAED,MAAI+b,QAAJ,EAAc;AACZ,WACE1I,6BAACsS,oBAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,QAAQ,EAAEnB,YAFZ;AAGE,MAAA,GAAG,EAAEW,mBAHP;AAIE,MAAA,IAAI,EAAEnlB,OAAO,CAACwC,SAJhB;AAKE,MAAA,aAAa,EAAEkiB,aALjB;AAME,MAAA,YAAY,EAAE,wBAAM;AAAEG,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAqB,OAN7C;AAOE,MAAA,KAAK,EAAE7kB,OAAO,CAACA;AAPjB,MADF;AAWD;;AAED,SACEqT;AACE,IAAA,GAAG,EAAE+R,mBADP;AAEE,IAAA,SAAS,yEAELH,UAAU,GAAG,4BAAH,GAAkC,EAFvC;AAFX,KASIR,YAAY,IACVpR,6BAACqS,qBAAD,QACErS,6BAACiD,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACmI,SAA7B;AAAwC,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAA3D,KACGtR,MAAM,CAACpF,OAAO,CAACqF,SAAT,EAAoB,eAApB,CADT,CADF,CAVN,EAmBI,wFACGjG,YAAY,CAACC,KADhB,EACwBgU,6BAAC,YAAD;AAAc,IAAA,OAAO,EAAErT;AAAvB,IADxB,8DAEGZ,YAAY,CAACG,IAFhB,EAGI8T,6BAACuS,aAAD;AACE,IAAA,OAAO,EAAE5lB,OADX;AAEE,IAAA,MAAM,EAAEiF,MAFV;AAGE,IAAA,QAAQ,EAAE6W,QAHZ;AAIE,IAAA,MAAM,EAAEF,MAJV;AAKE,IAAA,UAAU,EAAEkJ,aALd;AAME,IAAA,aAAa,EAAEjJ,aANjB;AAOE,IAAA,MAAM,EAAEzF,MAPV;AAQE,IAAA,WAAW,EAAE/I,WARf;AASE,IAAA,WAAW,EAAEmL,WATf;AAUE,IAAA,UAAU,EAAEC,UAVd;AAWE,IAAA,cAAc,EAAE3D,cAXlB;AAYE,IAAA,sBAAsB,EAAE4D,sBAZ1B;AAaE,IAAA,QAAQ,EAAEuD,QAbZ;AAcE,IAAA,WAAW,EAAEC;AAdf,IAHJ,8DAoBG9c,YAAY,CAACK,EApBhB,EAqBI4T,6BAACwS,eAAD;AACE,IAAA,OAAO,EAAE7lB,OADX;AAEE,IAAA,MAAM,EAAEoW,MAFV;AAGE,IAAA,MAAM,EAAEwF,MAHV;AAIE,IAAA,MAAM,EAAE3W,MAJV;AAKE,IAAA,QAAQ,EAAE4f,WALZ;AAME,IAAA,QAAQ,EAAE/I,QANZ;AAOE,IAAA,UAAU,EAAEgJ,aAPd;AAQE,IAAA,aAAa,EAAEjJ,aARjB;AASE,IAAA,WAAW,EAAExO,WATf;AAUE,IAAA,WAAW,EAAEmL,WAVf;AAWE,IAAA,UAAU,EAAEC,UAXd;AAYE,IAAA,cAAc,EAAE3D,cAZlB;AAaE,IAAA,sBAAsB,EAAE4D,sBAb1B;AAcE,IAAA,QAAQ,EAAEuD,QAdZ;AAeE,IAAA,WAAW,EAAEC;AAff,IArBJ,8DAuCG9c,YAAY,CAACI,SAvChB,EAwCI6T,6BAAC,gBAAD;AACE,IAAA,QAAQ,EAAEyI,QADZ;AAEE,IAAA,OAAO,EAAE9b,OAFX;AAGE,IAAA,MAAM,EAAEiF,MAHV;AAIE,IAAA,MAAM,EAAE2W,MAJV;AAKE,IAAA,UAAU,EAAEkJ,aALd;AAME,IAAA,aAAa,EAAEjJ,aANjB;AAOE,IAAA,OAAO,EAAEmJ,iBAPX;AAQE,IAAA,MAAM,EAAE5O,MARV;AASE,IAAA,WAAW,EAAE/I,WATf;AAUE,IAAA,WAAW,EAAEmL,WAVf;AAWE,IAAA,UAAU,EAAEC,UAXd;AAYE,IAAA,cAAc,EAAE3D,cAZlB;AAaE,IAAA,sBAAsB,EAAE4D,sBAb1B;AAcE,IAAA,QAAQ,EAAEuD,QAdZ;AAeE,IAAA,WAAW,EAAEC;AAff,IAxCJ,8DA0DG9c,YAAY,CAACE,IA1DhB,EA2DI+T,6BAAC,OAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,QAAQ,EAAE8b,QAFZ;AAGE,IAAA,MAAM,EAAEF,MAHV;AAIE,IAAA,MAAM,EAAE3W,MAJV;AAKE,IAAA,QAAQ,EAAE4f,WALZ;AAME,IAAA,UAAU,EAAEC,aANd;AAOE,IAAA,aAAa,EAAEjJ,aAPjB;AAQE,IAAA,MAAM,EAAEzF,MARV;AASE,IAAA,WAAW,EAAE/I,WATf;AAUE,IAAA,WAAW,EAAEmL,WAVf;AAWE,IAAA,UAAU,EAAEC,UAXd;AAYE,IAAA,cAAc,EAAE3D,cAZlB;AAaE,IAAA,sBAAsB,EAAE4D,sBAb1B;AAcE,IAAA,QAAQ,EAAEuD,QAdZ;AAeE,IAAA,WAAW,EAAEC;AAff,IA3DJ,0BA6EEnc,cAAc,CAACC,OAAD,CA7EhB,CAnBJ,EAoGIgc,UAAU,IACR3I,6BAACyS,aAAD;AACE,IAAA,YAAY,EAAE;AAAA,aAAMhB,aAAa,CAAC,KAAD,CAAnB;AAAA,KADhB;AAEE,IAAA,eAAe,EAAE,2BAAM;AACrB7W,MAAAA,aAAa,CAACjO,OAAD,CAAb;AACD;AAJH,IArGN,EA8GI+kB,cAAc,IACZ1R,6BAAC0S,kBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMf,iBAAiB,CAAC,KAAD,CAAvB;AAAA,KADX;AAEE,IAAA,OAAO,EAAEhlB,OAFX;AAGE,IAAA,QAAQ,EAAE,oBAAM;AACdiO,MAAAA,aAAa,CAACjO,OAAD,EAAU,YAAM;AAC3BglB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAFY,CAAb;AAGD,KAPH;AAQE,IAAA,MAAM,EAAEpJ;AARV,IA/GN,EA4HI,EAAG5b,OAAO,CAACK,aAAR,IAAyBL,OAAO,CAACK,aAAR,EAA1B,IAAsDL,OAAO,CAACE,WAAR,KAAwB,MAAhF,KACG,EAAEF,OAAO,CAACI,cAAR,IAA0BJ,OAAO,CAACI,cAAR,EAA5B,CADH,IAEG,EAAIJ,OAAO,CAACC,aAAR,IAAyBD,OAAO,CAACC,aAAR,EAA1B,IAAsDD,OAAO,CAACE,WAAR,KAAwB,MAAjF,CAFH,IAGG,CAAE6kB,cAHL,IAKE1R,6BAAC,cAAD;AACE,IAAA,OAAO,EAAErT,OADX;AAEE,IAAA,MAAM,EAAEoW,MAFV;AAGE,IAAA,MAAM,EAAEwF,MAHV;AAIE,IAAA,UAAU,EAAEkJ,aAJd;AAKE,IAAA,QAAQ,EAAE7I,QALZ;AAME,IAAA,WAAW,EAAEC;AANf,IAjIN,CADF;AA8ID;AAEDqI,UAAU,CAACrQ,SAAX,GAAuB;AACrBjP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MADG;AAErB1U,EAAAA,OAAO,EAAEmU,SAAS,CAAC+F,KAAV,CAAgB;AACvB7Z,IAAAA,aAAa,EAAE8T,SAAS,CAACG,IADF;AAEvBlU,IAAAA,cAAc,EAAE+T,SAAS,CAACG,IAFH;AAGvBrU,IAAAA,aAAa,EAAEkU,SAAS,CAACG,IAHF;AAIvB0R,IAAAA,eAAe,EAAE7R,SAAS,CAACG,IAJJ;AAKvB;AACA9R,IAAAA,SAAS,EAAE2R,SAAS,CAACM,MANE;AAOvBlU,IAAAA,IAAI,EAAE4T,SAAS,CAACO,MAPO;AAQvBrP,IAAAA,SAAS,EAAE8O,SAAS,CAACM,MARE;AASvBzU,IAAAA,OAAO,EAAEmU,SAAS,CAACO,MATI;AAUvB/R,IAAAA,YAAY,EAAEwR,SAAS,CAACO,MAVD;AAWvBxU,IAAAA,WAAW,EAAEiU,SAAS,CAACO,MAXA;AAYvBlP,IAAAA,MAAM,EAAE2O,SAAS,CAAC+F,KAAV,CAAgB;AAAEjV,MAAAA,MAAM,EAAEkP,SAAS,CAACO;AAApB,KAAhB,CAZe;AAavBvU,IAAAA,UAAU,EAAEgU,SAAS,CAAC+F,KAAV,CAAgB,EAAhB;AAbW,GAAhB,CAFY;AAiBrByK,EAAAA,oBAAoB,EAAExQ,SAAS,CAACK,SAAV,CAAoB,CACxCL,SAAS,CAACO,MAD8B,EAExCP,SAAS,CAACM,MAF8B,CAApB,CAjBD;AAqBrBmQ,EAAAA,mBAAmB,EAAEzQ,SAAS,CAACG,IArBV;AAsBrB5R,EAAAA,mBAAmB,EAAEyR,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAtBA;AAuBrBuK,EAAAA,YAAY,EAAEtQ,SAAS,CAACI,IAvBH;AAwBrBuH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAxBC;AAyBrBiQ,EAAAA,YAAY,EAAErQ,SAAS,CAACI,IAzBH;AA0BrBtG,EAAAA,aAAa,EAAEkG,SAAS,CAACG,IAAV,CAAeD,UA1BT;AA2BrBqQ,EAAAA,aAAa,EAAEvQ,SAAS,CAACG,IAAV,CAAeD,UA3BT;AA4BrBwH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAAV,CAAeD,UA5BT;AA6BrB+B,EAAAA,MAAM,EAAEjC,SAAS,CAACO,MA7BG;AA8BrBrH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAAV,CAAeF,UA9BP;AA+BrB4H,EAAAA,QAAQ,EAAE9H,SAAS,CAACI,IAAV,CAAeF,UA/BJ;AAgCrB6H,EAAAA,WAAW,EAAE/H,SAAS,CAACI,IAAV,CAAeF,UAhCP;AAiCrBmE,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAjClB;AAkCrBoE,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,EAA0BuS,UAlCjB;AAmCrBS,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAnCL;AAoCrBoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG;AApCb,CAAvB;AAuCAiQ,UAAU,CAAC3P,YAAX,GAA0B;AACxB3P,EAAAA,MAAM,EAAE,EADgB;AAExBuf,EAAAA,YAAY,EAAE,KAFU;AAGxBI,EAAAA,mBAAmB,EAAE,IAHG;AAIxBliB,EAAAA,mBAAmB,EAAE,EAJG;AAKxB1C,EAAAA,OAAO,EAAE,EALe;AAMxBykB,EAAAA,YAAY,EAAE,KANU;AAOxB3I,EAAAA,QAAQ,EAAE,KAPc;AAQxB6I,EAAAA,oBAAoB,EAAE,IARE;AASxBvO,EAAAA,MAAM,EAAE,EATgB;AAUxBtB,EAAAA,cAAc,EAAE,0BAAM,EAVE;AAWxB4D,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AAXA,CAA1B;;IC7RqBuN;;;;;;;;;;;;;;;;;;uGACR,UAAC3a,CAAD,EAAO;AAAA,wBAQZ,MAAKiI,KARO;AAAA,UAEdjK,SAFc,eAEdA,SAFc;AAAA,UAGdtC,OAHc,eAGdA,OAHc;AAAA,UAIdmC,kBAJc,eAIdA,kBAJc;AAAA,UAKd+c,QALc,eAKdA,QALc;AAAA,UAMdC,YANc,eAMdA,YANc;AAAA,UAOdzjB,mBAPc,eAOdA,mBAPc;AAUhB,UAAM0R,OAAO,GAAG9I,CAAC,CAAC8a,MAAlB;AAVgB,UAYdnlB,SAZc,GAeZmT,OAfY,CAYdnT,SAZc;AAAA,UAadolB,YAbc,GAeZjS,OAfY,CAadiS,YAbc;AAAA,UAcdnlB,YAdc,GAeZkT,OAfY,CAcdlT,YAdc;;AAgBhB,UAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,YAAI,CAAC+F,OAAL,EAAc;AACZ;AACD;;AACD,YAAMsf,KAAK,GAAGhd,SAAS,CAACO,OAAV,CAAkB0c,gBAAlB,CAAmC,2BAAnC,CAAd;AACA,YAAMC,KAAK,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAD,CAA5B;AACAJ,QAAAA,QAAQ,CAAC,gBAAgB;AAAA;AAAA,cAAd5f,QAAc;;AACvB,cAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI;AACFkgB,cAAAA,KAAK,CAAClB,cAAN;AACD,aAFD,CAEE,OAAOnkB,KAAP,EAAc;AAEf;AACF;AACF,SATO,CAAR;AAUD;;AAED,UAAIklB,YAAY,GAAGplB,SAAf,KAA6BC,YAAjC,EAA+C;AAC7C,YAAMolB,MAAK,GAAGhd,SAAS,CAACO,OAAV,CAAkB0c,gBAAlB,CAAmC,2BAAnC,CAAd;;AACA,YAAME,IAAI,GAAGH,MAAK,IAAIA,MAAK,CAACA,MAAK,CAACriB,MAAN,GAAe,CAAhB,CAA3B;AACAkiB,QAAAA,YAAY,CAAC,iBAAgB;AAAA;AAAA,cAAd7f,QAAc;;AAC3B,cAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI;AACFmgB,cAAAA,IAAI,CAACnB,cAAL;AACD,aAFD,CAEE,OAAOnkB,KAAP,EAAc;AAEf;AACF;AACF,SATW,CAAZ;AAUD,OA/Ce;;;AAkDhBC,MAAAA,UAAU,CAAC,YAAM;AACf;AACA,YAAIilB,YAAY,GAAGplB,SAAf,KAA6BC,YAAjC,EAA+C;AAC7CiI,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K;AADW,WAAD,CAAlB;AAGA1I,UAAAA,mBAAmB,CAACsH,UAApB;AACD;AACF,OARS,EAQP,GARO,CAAV;AASD;;;;;;;6BAEQ;AAAA,yBAwBH,KAAKuJ,KAxBF;AAAA,UAELtO,MAFK,gBAELA,MAFK;AAAA,UAGL6W,QAHK,gBAGLA,QAHK;AAAA,UAILxS,SAJK,gBAILA,SAJK;AAAA,UAKLlC,UALK,gBAKLA,UALK;AAAA,UAMLqR,UANK,gBAMLA,UANK;AAAA,UAOLxS,WAPK,gBAOLA,WAPK;AAAA,UAQLoH,WARK,gBAQLA,WARK;AAAA,UASLmL,WATK,gBASLA,WATK;AAAA,UAULgM,YAVK,gBAULA,YAVK;AAAA,UAWLvW,aAXK,gBAWLA,aAXK;AAAA,UAYLyW,aAZK,gBAYLA,aAZK;AAAA,UAaL7I,aAbK,gBAaLA,aAbK;AAAA,UAcL+I,mBAdK,gBAcLA,mBAdK;AAAA,UAeL8B,cAfK,gBAeLA,cAfK;AAAA,UAgBL/B,oBAhBK,gBAgBLA,oBAhBK;AAAA,UAiBL/gB,cAjBK,gBAiBLA,cAjBK;AAAA,UAkBLkR,cAlBK,gBAkBLA,cAlBK;AAAA,UAmBL6R,kBAnBK,gBAmBLA,kBAnBK;AAAA,UAoBLjkB,mBApBK,gBAoBLA,mBApBK;AAAA,UAqBLgW,sBArBK,gBAqBLA,sBArBK;AAAA,UAsBLkO,aAtBK,gBAsBLA,aAtBK;AAAA,UAuBLC,gBAvBK,gBAuBLA,gBAvBK;;AA0BP,UAAI5gB,WAAW,CAAChC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,eACEoP,6BAACyT,mBAAD;AACE,UAAA,SAAS,EAAC,oCADZ;AAEE,UAAA,IAAI,EAAEC,0BAAgB,CAACC;AAFzB,UADF;AAMD;;AAED,aACE3T;AAAK,QAAA,SAAS,EAAC;AAAf,SACEA;AACE,QAAA,GAAG,EAAE/J,SADP;AAEE,QAAA,SAAS,EAAC,yCAFZ;AAGE,QAAA,QAAQ,EAAE,KAAK4c;AAHjB,SAKE7S;AAAK,QAAA,SAAS,EAAC;AAAf,QALF,EAaEA;AAAK,QAAA,SAAS,EAAC;AAAf,SAEIpN,WAAW,CAACG,GAAZ,CACE,UAACwB,CAAD,EAAIqf,GAAJ,EAAY;AACV,YAAMC,eAAe,GAAGjhB,WAAW,CAACghB,GAAG,GAAG,CAAP,CAAnC;AACA,YAAMphB,WAAW,GAAGI,WAAW,CAACghB,GAAG,GAAG,CAAP,CAA/B;;AAFU,oBAGsBN,kBAAkB,GAC9CjhB,0BAA0B,CAACwhB,eAAD,EAAkBtf,CAAlB,EAAqB/B,WAArB,CADoB,GAE9C,CAAC,KAAD,EAAQ,KAAR,CALM;AAAA;AAAA,YAGHoW,QAHG;AAAA,YAGOC,WAHP;;AAMV,YAAMiL,wBAAwB,GAAGD,eAAe,IAAIA,eAAe,CAAC7hB,SAApE;AACA,YAAM+hB,gBAAgB,GAAGxf,CAAC,CAACvC,SAA3B,CAPU;;AASV,YAAMof,YAAY,GAAG,EAAE0C,wBAAwB,IAC7CE,SAAS,CAACD,gBAAD,EAAmBD,wBAAnB,CADU,CAArB;;AAGA,YAAIT,cAAJ,EAAoB;AAClB,iBACErT;AACE,YAAA,GAAG,EAAEzL,CAAC,CAACpF,SAAF,IAAeoF,CAAC,CAACW,KADxB;AAEE,YAAA,SAAS,EAAC;AAFZ,aAKIme,cAAc,CAAC;AACb1mB,YAAAA,OAAO,EAAE4H,CADI;AAEb+c,YAAAA,oBAAoB,EAApBA,oBAFa;AAGbxiB,YAAAA,OAAO,EAAEO,mBAHI;AAIb0e,YAAAA,eAAe,EAAEnT,aAJJ;AAKbqZ,YAAAA,eAAe,EAAE5C,aALJ;AAMb6C,YAAAA,eAAe,EAAE1L,aANJ;AAObjY,YAAAA,cAAc,EAAdA,cAPa;AAQbqY,YAAAA,QAAQ,EAARA,QARa;AASbC,YAAAA,WAAW,EAAXA;AATa,WAAD,CALlB,CADF;AAoBD;;AAED,eACE7I,6BAACmU,UAAD;AACE,UAAA,oBAAoB,EAAE7C,oBADxB;AAEE,UAAA,mBAAmB,EAAEC,mBAFvB;AAGE,UAAA,GAAG,EAAEhd,CAAC,CAACpF,SAAF,IAAeoF,CAAC,CAACW,KAHxB;AAIE,UAAA,MAAM,EAAEtD,MAJV;AAKE,UAAA,MAAM,EAAEmC,UAAU,CAACQ,CAAC,CAACpF,SAAH,CAAV,IAA2BC,eAAe,CAACmF,CAAD,EAAIlF,mBAAJ,CALpD;AAAA;AAOE,UAAA,OAAO,EAAEkF,CAPX;AAQE,UAAA,mBAAmB,EAAElF,mBARvB;AASE,UAAA,QAAQ,EAAEoZ,QATZ;AAUE,UAAA,UAAU,EAAErD,UAVd;AAWE,UAAA,QAAQ,EAAEwD,QAXZ;AAYE,UAAA,WAAW,EAAE5O,WAZf;AAaE,UAAA,WAAW,EAAEmL,WAbf;AAcE,UAAA,YAAY,EAAEgM,YAdhB;AAeE,UAAA,YAAY,EAAEC,YAfhB;AAgBE,UAAA,WAAW,EAAEvI,WAhBf;AAiBE,UAAA,aAAa,EAAEwI,aAjBjB;AAkBE,UAAA,aAAa,EAAEzW,aAlBjB;AAmBE,UAAA,aAAa,EAAE4N,aAnBjB;AAoBE,UAAA,cAAc,EAAE/G,cApBlB;AAqBE,UAAA,sBAAsB,EAAE4D;AArB1B,UADF;AAyBD,OA7DH,CAFJ,CAbF,CADF,EAmFIkO,aAAa,IACXvT;AACE,QAAA,SAAS,EAAC,6CADZ;AAEE,QAAA,OAAO,EAAEwT,gBAFX;AAGE,QAAA,SAAS,EAAEA,gBAHb;AAIE,QAAA,QAAQ,EAAE,CAJZ;AAKE,QAAA,IAAI,EAAC;AALP,SAOExT,6BAACwC,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAAC2R,YAHlB;AAIE,QAAA,SAAS,EAAE3Q,kBAAU,CAAC4Q;AAJxB,QAPF,CApFN,CADF;AAuGD;;;;EAxM6CC;AA2MhD1B,kBAAkB,CAAC/R,SAAnB,GAA+B;AAC7B;AACA5K,EAAAA,SAAS,EAAE6K,SAAS,CAAC+F,KAAV,CAAgB;AACzBrQ,IAAAA,OAAO,EAAEsK,SAAS,CAACK,SAAV,CAAoB,CAC3BL,SAAS,CAACC,OADiB,EAE3BD,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAF2B,CAApB;AADgB,GAAhB,EAKR7F,UAP0B;AAQ7BrN,EAAAA,OAAO,EAAEmN,SAAS,CAACI,IARU;AAS7BpL,EAAAA,kBAAkB,EAAEgL,SAAS,CAACG,IAAV,CAAeD,UATN;AAU7B6R,EAAAA,QAAQ,EAAE/R,SAAS,CAACG,IAVS;AAW7B6R,EAAAA,YAAY,EAAEhS,SAAS,CAACG,IAXK;AAY7BkQ,EAAAA,YAAY,EAAErQ,SAAS,CAACI,IAZK;AAa7BuH,EAAAA,QAAQ,EAAE3H,SAAS,CAACI,IAbS;AAc7BtP,EAAAA,MAAM,EAAEkP,SAAS,CAACO,MAdW;AAe7BzO,EAAAA,WAAW,EAAEkO,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAAC+F,KAAV,CAAgB;AAC7C7U,IAAAA,SAAS,EAAE8O,SAAS,CAACM;AADwB,GAAhB,CAAlB,EAETJ,UAjByB;AAkB7BpG,EAAAA,aAAa,EAAEkG,SAAS,CAACG,IAAV,CAAeD,UAlBD;AAmB7BwH,EAAAA,aAAa,EAAE1H,SAAS,CAACG,IAAV,CAAeD,UAnBD;AAoB7BqQ,EAAAA,aAAa,EAAEvQ,SAAS,CAACG,IAAV,CAAeD,UApBD;AAqB7BjN,EAAAA,UAAU,EAAE+M,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,EAAoB7F,UArBH;AAsB7B3R,EAAAA,mBAAmB,EAAEyR,SAAS,CAAC+F,KAAV,CAAgB;AACnClQ,IAAAA,UAAU,EAAEmK,SAAS,CAACG,IADa;AAEnCxP,IAAAA,OAAO,EAAEqP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAAlB;AAF0B,GAAhB,EAGlB7F,UAzB0B;AA0B7BsQ,EAAAA,oBAAoB,EAAExQ,SAAS,CAACK,SAAV,CAAoB,CACxCL,SAAS,CAACO,MAD8B,EAExCP,SAAS,CAACM,MAF8B,CAApB,CA1BO;AA8B7BiS,EAAAA,cAAc,EAAEvS,SAAS,CAACC,OA9BG;AA+B7BwQ,EAAAA,mBAAmB,EAAEzQ,SAAS,CAACG,IA/BF;AAgC7BjH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAhCM;AAiC7BqS,EAAAA,aAAa,EAAEzS,SAAS,CAACI,IAjCI;AAkC7BsS,EAAAA,gBAAgB,EAAE1S,SAAS,CAACG,IAlCC;AAmC7B1Q,EAAAA,cAAc,EAAEuQ,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAnCa;AAoC7B1B,EAAAA,WAAW,EAAErE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CApCgB;AAqC7B2W,EAAAA,UAAU,EAAEtE,SAAS,CAACgG,UAAV,CAAqBrY,GAArB,CArCiB;AAsC7B6kB,EAAAA,kBAAkB,EAAExS,SAAS,CAACI,IAtCD;AAuC7BO,EAAAA,cAAc,EAAEX,SAAS,CAACG,IAvCG;AAwC7BoE,EAAAA,sBAAsB,EAAEvE,SAAS,CAACG;AAxCL,CAA/B;AA2CA2R,kBAAkB,CAACrR,YAAnB,GAAkC;AAChC5N,EAAAA,OAAO,EAAE,KADuB;AAEhCwd,EAAAA,YAAY,EAAE,KAFkB;AAGhC1I,EAAAA,QAAQ,EAAE,KAHsB;AAIhC7W,EAAAA,MAAM,EAAE,EAJwB;AAKhC2f,EAAAA,mBAAmB,EAAE,IALW;AAMhC8B,EAAAA,cAAc,EAAE,IANgB;AAOhC/B,EAAAA,oBAAoB,EAAE,IAPU;AAQhCuB,EAAAA,QAAQ,EAAE,IARsB;AAShCC,EAAAA,YAAY,EAAE,IATkB;AAUhC9Y,EAAAA,WAAW,EAAE,IAVmB;AAWhCzJ,EAAAA,cAAc,EAAE,EAXgB;AAYhCgjB,EAAAA,aAAa,EAAE,KAZiB;AAahCC,EAAAA,gBAAgB,EAAE,4BAAM,EAbQ;AAchCrO,EAAAA,WAAW,EAAE,IAAI1W,GAAJ,EAdmB;AAehC2W,EAAAA,UAAU,EAAE,IAAI3W,GAAJ,EAfoB;AAgBhC6kB,EAAAA,kBAAkB,EAAE,IAhBY;AAiBhC7R,EAAAA,cAAc,EAAE,0BAAM,EAjBU;AAkBhC4D,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AAlBQ,CAAlC;;AC7Pe,SAASkP,YAAT,OAIZ;AAAA,MAHDrQ,KAGC,QAHDA,KAGC;AAAA,MAFDsQ,IAEC,QAFDA,IAEC;AAAA,MADDnU,OACC,QADDA,OACC;;AAAA,oBACqBqF,gBAAU,CAACC,uCAAD,CAD/B;AAAA,MACOC,SADP,eACOA,SADP;;AAED,MAAM6O,SAAS,GAAGD,IAAI,CAACjN,KAAL,CAAW,GAAX,CAAlB;AACAkN,EAAAA,SAAS,CAACvhB,MAAV,CAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwB0S,SAAS,CAAC8O,uCAAlC;AACA;AAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,OAAO,EAAErU;AAAhD,OACEL,6BAACiD,aAAD;AAAO,MAAA,SAAS,EAAC,6BAAjB;AAA+C,MAAA,KAAK,EAAEG,mBAAW,CAACqH,WAAlE;AAA+E,MAAA,IAAI,EAAEvH,uBAAe,CAACmI;AAArG,iBACMnH,KADN,QAEG0B,SAAS,CAAC+O,gDAFb,aAGOF,SAAS,CAAC9T,IAAV,CAAe,GAAf,CAHP,EADF,EAMEX,6BAACwC,YAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,IAAI,EAAEC,iBAAS,CAAC2R,YAHlB;AAIE,MAAA,SAAS,EAAE3Q,kBAAU,CAAC4Q;AAJxB,MANF;AAFF;AAgBD;AAEDE,YAAY,CAAC1T,SAAb,GAAyB;AACvBqD,EAAAA,KAAK,EAAEpD,SAAS,CAACK,SAAV,CAAoB,CACzBL,SAAS,CAACO,MADe,EAEzBP,SAAS,CAACM,MAFe,CAApB,CADgB;AAKvBoT,EAAAA,IAAI,EAAE1T,SAAS,CAACO,MALO;AAMvBhB,EAAAA,OAAO,EAAES,SAAS,CAACG,IAAV,CAAeD;AAND,CAAzB;AASAuT,YAAY,CAAChT,YAAb,GAA4B;AAC1B2C,EAAAA,KAAK,EAAE,CADmB;AAE1BsQ,EAAAA,IAAI,EAAE;AAFoB,CAA5B;;ACpCA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB;AACjB,MAAAhP,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;AACR,SACE3F;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACmI;AAFxB,KAIGzF,SAAS,CAACiP,cAJb,CADF,CADF;AAUD,CAZD;;ACAA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAiB;AAAA,MAAdrjB,OAAc,QAAdA,OAAc;;AAAA,oBACrBiU,gBAAU,CAACC,uCAAD,CADW;AAAA,MACnCC,SADmC,eACnCA,SADmC;;AAE3C,MAAI,CAACnU,OAAD,IAAYA,OAAO,CAACb,MAAR,KAAmB,CAAnC,EAAsC;AACpC,WAAO,EAAP;AACD;;AAED,MAAIa,OAAO,IAAIA,OAAO,CAACb,MAAR,KAAmB,CAAlC,EAAqC;AACnC,qBAAUa,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB,cAAiC+T,SAAS,CAACmP,2BAA3C;AACD;;AAED,MAAItjB,OAAO,IAAIA,OAAO,CAACb,MAAR,KAAmB,CAAlC,EAAqC;AACnC,qBAAUa,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB,cAAiC+T,SAAS,CAACoP,qBAA3C,cAAoEvjB,OAAO,CAAC,CAAD,CAAP,CAAWI,QAA/E,cAA2F+T,SAAS,CAACqP,4BAArG;AACD;;AAED,SAAOrP,SAAS,CAACsP,iCAAjB;AACD,CAfD;;AAiBA,SAASC,eAAT,QAAqD;AAAA,MAA1B7mB,UAA0B,SAA1BA,UAA0B;AAAA,MAAd8mB,EAAc,SAAdA,EAAc;AAAA,MAAVpf,MAAU,SAAVA,MAAU;;AAAA,kBACjB2O,cAAQ,CAACvO,4BAAM,EAAP,CADS;AAAA;AAAA,MAC5C0J,SAD4C;AAAA,MACjCuV,YADiC;;AAAA,mBAET1Q,cAAQ,CAAC,EAAD,CAFC;AAAA;AAAA,MAE5C2Q,aAF4C;AAAA,MAE7BC,gBAF6B;;AAInDrf,EAAAA,eAAS,CAAC,YAAM;AACd,QAAIkf,EAAE,IAAIA,EAAE,CAAC/e,cAAb,EAA6B;AAC3B+e,MAAAA,EAAE,CAAC1d,oBAAH,CAAwBoI,SAAxB;AACA,UAAM0V,YAAY,GAAGpf,4BAAM,EAA3B;AACA,UAAMqJ,OAAO,GAAG,IAAI2V,EAAE,CAAC/e,cAAP,EAAhB,CAH2B;;AAK3BoJ,MAAAA,OAAO,CAACgW,qBAAR,GAAgC,UAACzlB,YAAD,EAAkB;AAChDgG,QAAAA,MAAM,CAACM,IAAP,CAAY,mDAAZ,EAAiEtG,YAAjE;AACA,YAAMyB,OAAO,GAAGzB,YAAY,CAAC0lB,gBAAb,EAAhB;;AACA,YAAI1lB,YAAY,CAACjB,GAAb,KAAqBT,UAAzB,EAAqC;AACnCinB,UAAAA,gBAAgB,CAAC9jB,OAAD,CAAhB;AACD;AACF,OAND;;AAOA2jB,MAAAA,EAAE,CAAC3d,iBAAH,CAAqB+d,YAArB,EAAmC/V,OAAnC;AACA4V,MAAAA,YAAY,CAACG,YAAD,CAAZ;AACD;;AAED,WAAO,YAAM;AACXD,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;;AACA,UAAIH,EAAE,IAAIA,EAAE,CAAC1d,oBAAb,EAAmC;AACjC0d,QAAAA,EAAE,CAAC1d,oBAAH,CAAwBoI,SAAxB;AACD;AACF,KALD;AAMD,GAvBQ,EAuBN,CAACxR,UAAD,CAvBM,CAAT;AAyBA,SACE0R,6BAACiD,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACmI,SAA7B;AAAwC,IAAA,KAAK,EAAEjI,mBAAW,CAACC;AAA3D,KACErD,6BAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEsV;AAA9B,IADF,CADF;AAKD;;AAEDH,eAAe,CAACtU,SAAhB,GAA4B;AAC1BvS,EAAAA,UAAU,EAAEwS,SAAS,CAACO,MAAV,CAAiBL,UADH;AAE1BoU,EAAAA,EAAE,EAAEtU,SAAS,CAAC+F,KAAV,CAAgB;AAClBxQ,IAAAA,cAAc,EAAEyK,SAAS,CAACG,IADR;AAElBvJ,IAAAA,oBAAoB,EAAEoJ,SAAS,CAACG,IAFd;AAGlBxJ,IAAAA,iBAAiB,EAAEqJ,SAAS,CAACG;AAHX,GAAhB,EAIDD,UANuB;AAO1BhL,EAAAA,MAAM,EAAE8K,SAAS,CAAC+F,KAAV,CAAgB;AACtBvQ,IAAAA,IAAI,EAAEwK,SAAS,CAACG;AADM,GAAhB,EAELD;AATuB,CAA5B;;AC5DA;AAEA;AAmBA,IAAM2U,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAQlBzV,GARkB;MAC1BrR,OAAO;MACPqc,IAAI;MACJ0K,aAAa;MACbC,YAAY;MACZC,kBAAkB;MAClBlc,QAAQ;MACRpG,WAAW;AAEH,MAAAmS,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;AACR,MAAM8C,QAAQ,GAAG,CAAChV,WAAD,IACZkG,uBAAA,CAA8B7K,OAA9B,CADY,IAEZ6K,sBAAA,CAA6B7K,OAA7B,CAFY,IAGZ,CAAC+K,QAHN;AAKA,MAAM9J,YAAU,GAAG4J,UAAA,CAAiB7K,OAAjB,CAAnB;AACQ,MAAAknB,WAAW,GAAKlnB,OAAO,YAAvB;;AAGR,MAAIinB,kBAAJ,EAAwB;AACtB,WAAOA,kBAAkB,CAAC;AAAEjnB,MAAAA,OAAO,SAAT;AAAWqc,MAAAA,IAAI,MAAf;AAAiB1C,MAAAA,QAAQ;AAAzB,KAAD,CAAzB;AACD;;;AAGD,MAAIuN,WAAW,IAAI,CAACjmB,YAApB,EAAgC;AAC9B,WAAO,IAAP;AACD;;;AAGD,SACEiQ,6BAACsS,oBAAD;AACE,IAAA,WAAW,EAAG3Y,uBAAA,CAA8B7K,OAA9B,KACT8W,SAAS,CAACqQ,8CADF,IAEPtc,sBAAA,CAA6B7K,OAA7B,KACC8W,SAAS,CAACsQ,2CAJnB;AAOE,IAAA,GAAG,EAAE/V,GAPP;AAQE,IAAA,QAAQ,EAAEsI,QARZ;AASE,IAAA,aAAa,EAAE;AACb3Z,MAAAA,OAAO,CAACqnB,WAAR;AACD,KAXH;AAYE,IAAA,aAAa,EAAEN,aAZjB;AAaE,IAAA,YAAY,EAAEC;AAbhB,IADF;AAiBD,CA9CD;;AAgDA,4BAAe9V,cAAK,CAACC,UAAN,CAAiB0V,mBAAjB,CAAf;;AC1DA,SAASS,gBAAT,GAA4B;AAAA,oBACJ1Q,gBAAU,CAACC,uCAAD,CADN;AAAA,MAClBC,SADkB,eAClBA,SADkB;;AAE1B,SACE5F;AACE,IAAA,SAAS,EAAC;AADZ,KAGEA,6BAACiD,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAAC2N,MAA7B;AAAqC,IAAA,KAAK,EAAEzN,mBAAW,CAACC;AAAxD,KACIuC,SAAS,CAACyQ,iBADd,CAHF,EAMErW,6BAACwC,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAAC6T,YADlB;AAEE,IAAA,SAAS,EAAE7S,kBAAU,CAACjU,IAFxB;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,KAAK,EAAC;AAJR,IANF,CADF;AAeD;;ACzBM,IAAM+mB,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAUC,yBAAyB,CAACD,IAAD,EAAO;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAAP,CAAnC;AAAA,CAAnB;AAEP,AAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC7nB,OAAD,EAAa;AAC9C,MAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAAC8nB,aAArB,IAAsC,CAAC9nB,OAAO,CAAC2C,OAA/C,IAA0D3C,OAAO,CAAC2C,OAAR,CAAgBb,MAAhB,KAA2B,CAAzF,EAA4F;AAC1F,WAAO,EAAP;AACD;;AACD,MAAMimB,YAAY,0CAAO1d,MAAM,CAAC2d,MAAP,CAAchoB,OAAO,CAAC8nB,aAAR,EAAd,CAAP,CAAlB;;AACA,MAAMG,UAAU,GAAGF,YAAY,CAACjmB,MAAb,GAAsB,CAAtB,GACfimB,YAAY,CAAC,CAAD,CAAZ,CAAgBG,YADD,GAEf,CAFJ;;AAGA,MAAID,UAAU,KAAK,CAAnB,EAAsB;AACpB,WAAO,EAAP;AACD;;AACD,SAAOR,UAAU,CAACQ,UAAD,CAAjB;AACD,CAZM;AAcP,AAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAA6D;AAAA,MAA5DnoB,OAA4D,uEAAlD,EAAkD;AAAA,MAA9CoX,aAA8C;AAAA,MAA/BN,SAA+B,uEAAnBsR,sBAAmB;;AAC1F,MAAI,CAACpoB,OAAD,IAAa,CAACA,OAAO,CAACiQ,IAAT,IAAiB,CAACjQ,OAAO,CAAC2C,OAA3C,EAAqD;AACnD,WAAOmU,SAAS,CAACuR,QAAjB;AACD;;AACD,MAAIroB,OAAO,CAACiQ,IAAR,IAAgBjQ,OAAO,CAACiQ,IAAR,KAAiB,eAArC,EAAsD;AACpD,WAAOjQ,OAAO,CAACiQ,IAAf;AACD;;AAED,MAAIjQ,OAAO,CAAC2C,OAAR,CAAgBb,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,WAAOgV,SAAS,CAACwR,UAAjB;AACD;;AAED,SAAOtoB,OAAO,CAAC2C,OAAR,CACJP,MADI,CACG;AAAA,QAAGU,MAAH,QAAGA,MAAH;AAAA,WAAgBA,MAAM,KAAKsU,aAA3B;AAAA,GADH,EAEJnT,GAFI,CAEA;AAAA,QAAGlB,QAAH,SAAGA,QAAH;AAAA,WAAmBA,QAAQ,IAAI+T,SAAS,CAAC2I,OAAzC;AAAA,GAFA,EAGJ5N,IAHI,CAGC,IAHD,CAAP;AAID,CAhBM;;AChBQ,SAAS0W,WAAT,OAEZ;AAAA,MADDC,UACC,QADDA,UACC;;AAAA,kBACyB3S,cAAQ,CAAC2S,UAAU,EAAX,CADjC;AAAA;AAAA,MACMtU,KADN;AAAA,MACauU,QADb;;AAGDrhB,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMshB,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,UAAIzU,KAAK,KAAKsU,UAAU,EAAxB,EAA4B;AAC1BC,QAAAA,QAAQ,CAACD,UAAU,EAAX,CAAR;AACD;AACF,KAJ2B,EAIzB,KAJyB,CAA5B;AAKA,WAAO,YAAM;AACXI,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,SAAQxX;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCgD,KAAvC,CAAR;AACD;AAEDqU,WAAW,CAACxW,SAAZ,GAAwB;AACtByW,EAAAA,UAAU,EAAExW,SAAS,CAACG,IAAV,CAAeD;AADL,CAAxB;;ACTA,IAAMmH,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AACA,AAAe,SAASwP,UAAT,CAAoBzX,KAApB,EAA2B;AAAA,MAEtC7Q,mBAFsC,GAYpC6Q,KAZoC,CAEtC7Q,mBAFsC;AAAA,MAGtCuoB,WAHsC,GAYpC1X,KAZoC,CAGtC0X,WAHsC;AAAA,MAItClH,KAJsC,GAYpCxQ,KAZoC,CAItCwQ,KAJsC;AAAA,MAKtCmH,QALsC,GAYpC3X,KAZoC,CAKtC2X,QALsC;AAAA,MAMtCC,QANsC,GAYpC5X,KAZoC,CAMtC4X,QANsC;AAAA,MAOtCC,OAPsC,GAYpC7X,KAZoC,CAOtC6X,OAPsC;AAAA,MAQtCC,cARsC,GAYpC9X,KAZoC,CAQtC8X,cARsC;AAAA,MAStCC,aATsC,GAYpC/X,KAZoC,CAStC+X,aATsC;AAAA,MAUtCC,aAVsC,GAYpChY,KAZoC,CAUtCgY,aAVsC;AAAA,MAWtCC,KAXsC,GAYpCjY,KAZoC,CAWtCiY,KAXsC;AAAA,MAahCvmB,MAbgC,GAarBgmB,WAbqB,CAahChmB,MAbgC;;AAAA,oBAclB8T,gBAAU,CAACC,uCAAD,CAdQ;AAAA,MAchCC,SAdgC,eAchCA,SAdgC;;AAexC,SACE5F;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACoY,qBAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,OAAO,EAAE9oB,mBAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,MAAM,EAAE,EAJV;AAKE,IAAA,KAAK,EAAE;AALT,IADF,EAQEoO,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACmV,GAFxB;AAGE,IAAA,KAAK,EAAEjV,mBAAW,CAACiB;AAHrB,KAKGqM,KAAK,IAAI/W,eAAA,CAAsBtK,mBAAtB,EAA2CuC,MAA3C,EAAmDgU,SAAnD,CALZ,CARF,EAgBK,OAAOkS,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,MAA9C,IAA0D,OAAOA,QAAP,KAAoB,SAApB,IAAiCA,QAA3F,GACI9X;AAAK,IAAA,SAAS,EAAC;AAAf,IADJ,GAEI,IAlBR,EAoBEA,6BAACiD,aAAD;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACiE,MAFxB;AAGE,IAAA,KAAK,EAAE/D,mBAAW,CAACC;AAHrB,KAMIwU,QAAQ,IACL7X,6BAAC,WAAD;AAAa,IAAA,UAAU,EAAE;AAAA,aAAMrG,mBAAA,CAA0BtK,mBAA1B,CAAN;AAAA;AAAzB,IAPP,CApBF,CADF,EAgCE2Q;AAAK,IAAA,SAAS,EAAC;AAAf,KAEK,OAAO+X,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,MAA5C,IAAwD,OAAOA,OAAP,KAAmB,SAAnB,IAAgCA,OAAxF,GACI/X,6BAACwC,YAAD;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAA6C,IAAA,IAAI,EAAEC,iBAAS,CAAC6V,wBAA7D;AAAuF,IAAA,KAAK,EAAC,MAA7F;AAAoG,IAAA,MAAM,EAAC;AAA3G,IADJ,GAEI,IAJR,EAOIN,cAAc,IACZhY,6BAACkK,gBAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,OAAO,EAAE+N;AAJX,KAMEjY,6BAACwC,YAAD;AAAM,IAAA,IAAI,EAAEC,iBAAS,CAAC8V,MAAtB;AAA8B,IAAA,SAAS,EAAE9U,kBAAU,CAACC,OAApD;AAA6D,IAAA,KAAK,EAAC,MAAnE;AAA0E,IAAA,MAAM,EAAC;AAAjF,IANF,CARN,EAkBE1D,6BAACkK,gBAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,OAAO,EAAEgO;AAJX,KAMElY,6BAACwC,YAAD;AAAM,IAAA,IAAI,EAAEC,iBAAS,CAAC+V,IAAtB;AAA4B,IAAA,SAAS,EAAE/U,kBAAU,CAACC,OAAlD;AAA2D,IAAA,KAAK,EAAC,MAAjE;AAAwE,IAAA,MAAM,EAAC;AAA/E,IANF,CAlBF,CAhCF,CADF;AA8DD;AAEDiU,UAAU,CAAC9W,SAAX,GAAuB;AACrBxR,EAAAA,mBAAmB,EAAEyR,SAAS,CAAC+F,KAAV,CAAgB;AACnCpV,IAAAA,OAAO,EAAEqP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAAC+F,KAAV,CAAgB,EAAhB,CAAlB,CAD0B;AAEnC4R,IAAAA,QAAQ,EAAE3X,SAAS,CAACO;AAFe,GAAhB,CADA;AAKrB8W,EAAAA,KAAK,EAAErX,SAAS,CAACO,MALI;AAMrBuW,EAAAA,WAAW,EAAE9W,SAAS,CAAC+F,KAAV,CAAgB;AAC3BjV,IAAAA,MAAM,EAAEkP,SAAS,CAACO;AADS,GAAhB,CANQ;AASrB4W,EAAAA,aAAa,EAAEnX,SAAS,CAACG,IATJ;AAUrB+W,EAAAA,cAAc,EAAElX,SAAS,CAACI,IAVL;AAWrBwP,EAAAA,KAAK,EAAE5P,SAAS,CAACO,MAXI;AAYrBwW,EAAAA,QAAQ,EAAE/W,SAAS,CAACK,SAAV,CAAoB,CAC5BL,SAAS,CAACI,IADkB,EAE5BJ,SAAS,CAACO,MAFkB,CAApB,CAZW;AAgBrByW,EAAAA,QAAQ,EAAEhX,SAAS,CAACK,SAAV,CAAoB,CAC5BL,SAAS,CAACO,MADkB,EAE5BP,SAAS,CAACI,IAFkB,CAApB,CAhBW;AAoBrB6W,EAAAA,OAAO,EAAEjX,SAAS,CAACK,SAAV,CAAoB,CAC3BL,SAAS,CAACO,MADiB,EAE3BP,SAAS,CAACI,IAFiB,CAApB,CApBY;AAwBrBgX,EAAAA,aAAa,EAAEpX,SAAS,CAACG;AAxBJ,CAAvB;AA2BA0W,UAAU,CAACpW,YAAX,GAA0B;AACxBlS,EAAAA,mBAAmB,EAAE,EADG;AAExBqhB,EAAAA,KAAK,EAAE,EAFiB;AAGxByH,EAAAA,KAAK,EAAE,OAHiB;AAIxBN,EAAAA,QAAQ,EAAE,EAJc;AAKxBC,EAAAA,QAAQ,EAAE,KALc;AAMxBG,EAAAA,aAAa,EAAE9P,MANS;AAOxB6P,EAAAA,cAAc,EAAE,KAPQ;AAQxBD,EAAAA,OAAO,EAAE,KARe;AASxBH,EAAAA,WAAW,EAAE,EATW;AAUxBM,EAAAA,aAAa,EAAE,yBAAM;AAVG,CAA1B;;AC9EA,IAAM/P,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEA,IAAauQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxY,KAAD,EAAW;AAAA,MAExC5R,UAFwC,GAgCtC4R,KAhCsC,CAExC5R,UAFwC;AAAA,sBAgCtC4R,KAhCsC,CAGxCyY,MAHwC;AAAA,MAG9BC,QAH8B,iBAG9BA,QAH8B;AAAA,MAGpBC,SAHoB,iBAGpBA,SAHoB;AAAA,sBAgCtC3Y,KAhCsC,CAIxC4Y,MAJwC;AAAA,MAKtClnB,MALsC,iBAKtCA,MALsC;AAAA,MAMtCoE,MANsC,iBAMtCA,MANsC;AAAA,MAOtCzH,MAPsC,iBAOtCA,MAPsC;AAAA,MAQtCsL,QARsC,iBAQtCA,QARsC;AAAA,MAStCse,KATsC,iBAStCA,KATsC;AAAA,MAUtCtb,gBAVsC,iBAUtCA,gBAVsC;AAAA,MAatCkc,SAbsC,GAgCtC7Y,KAhCsC,CAYxC8Y,WAZwC,CAatCD,SAbsC;AAAA,uBAgCtC7Y,KAhCsC,CAexC+Y,OAfwC;AAAA,MAexCA,OAfwC,+BAe9B,EAf8B;AAAA,MAgBxCC,aAhBwC,GAgCtChZ,KAhCsC,CAgBxCgZ,aAhBwC;AAAA,MAiBxCC,kBAjBwC,GAgCtCjZ,KAhCsC,CAiBxCiZ,kBAjBwC;AAAA,MAkBxCnf,WAlBwC,GAgCtCkG,KAhCsC,CAkBxClG,WAlBwC;AAAA,MAmBxCge,cAnBwC,GAgCtC9X,KAhCsC,CAmBxC8X,cAnBwC;AAAA,MAoBxCC,aApBwC,GAgCtC/X,KAhCsC,CAoBxC+X,aApBwC;AAAA,MAqBxC5E,cArBwC,GAgCtCnT,KAhCsC,CAqBxCmT,cArBwC;AAAA,MAsBxC+F,gBAtBwC,GAgCtClZ,KAhCsC,CAsBxCkZ,gBAtBwC;AAAA,MAuBxC7H,mBAvBwC,GAgCtCrR,KAhCsC,CAuBxCqR,mBAvBwC;AAAA,MAwBxCzG,iBAxBwC,GAgCtC5K,KAhCsC,CAwBxC4K,iBAxBwC;AAAA,MAyBxCD,kBAzBwC,GAgCtC3K,KAhCsC,CAyBxC2K,kBAzBwC;AAAA,MA0BxCkL,kBA1BwC,GAgCtC7V,KAhCsC,CA0BxC6V,kBA1BwC;AAAA,MA2BxCzC,kBA3BwC,GAgCtCpT,KAhCsC,CA2BxCoT,kBA3BwC;AAAA,MA4BxC+F,uBA5BwC,GAgCtCnZ,KAhCsC,CA4BxCmZ,uBA5BwC;AAAA,MA6BxCnd,uBA7BwC,GAgCtCgE,KAhCsC,CA6BxChE,uBA7BwC;AAAA,MA8BxCU,uBA9BwC,GAgCtCsD,KAhCsC,CA8BxCtD,uBA9BwC;AAAA,MA+BxC9B,yBA/BwC,GAgCtCoF,KAhCsC,CA+BxCpF,yBA/BwC;AAAA,MAkClC/E,GAlCkC,GAkC1B6iB,QAlC0B,CAkClC7iB,GAlCkC;AAAA,MAmClC+iB,MAnCkC,GAmCvB5Y,KAnCuB,CAmClC4Y,MAnCkC;AAoC1C,MAAMQ,QAAQ,GAAGV,QAAQ,CAAC9qB,KAA1B;AACA,MAAM+H,OAAO,GAAG+iB,QAAQ,CAACnlB,WAAzB;AArC0C,MAsClC0X,IAtCkC,GAsCzB0N,SAtCyB,CAsClC1N,IAtCkC;;AAuC1C,MAAI8N,OAAO,CAACM,gBAAZ,EAA8B;AAC5B;AACAvd,IAAAA,OAAO,CAACwd,IAAR,CAAa,4EAAb;AACD;;AA1CyC,kBA4CI7U,cAAQ,CAACuU,aAAD,CA5CZ;AAAA;AAAA,MA4CnCvgB,eA5CmC;AAAA,MA4ClB8gB,kBA5CkB;;AA6C1CvjB,EAAAA,eAAS,CAAC,YAAM;AACdujB,IAAAA,kBAAkB,CAACP,aAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,aAAD,EAAgB5qB,UAAhB,CAFM,CAAT;;AA7C0C,mBAgDcqW,cAAQ,CAACwU,kBAAD,CAhDtB;AAAA;AAAA,MAgDnC7H,oBAhDmC;AAAA,MAgDboI,uBAhDa;;AAiD1CxjB,EAAAA,eAAS,CAAC,YAAM;AACdwjB,IAAAA,uBAAuB,CAACP,kBAAD,CAAvB;AACD,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAGA,MAAMzgB,0BAA0B,GAAGugB,OAAO,CAACngB,iBAA3C;;AApD0C,oBAsDE6gB,gBAAU,CAACC,OAAD,EAAkBC,oBAAlB,CAtDZ;AAAA;AAAA,MAsDnCC,aAtDmC;AAAA,MAsDpBhkB,kBAtDoB;;AAuD1C,MAAMG,SAAS,GAAGmG,YAAM,CAAC,IAAD,CAAxB;AAvD0C,MA0DxCxJ,WA1DwC,GAuEtCknB,aAvEsC,CA0DxClnB,WA1DwC;AAAA,MA2DxCc,OA3DwC,GAuEtComB,aAvEsC,CA2DxCpmB,OA3DwC;AAAA,MA4DxCD,WA5DwC,GAuEtCqmB,aAvEsC,CA4DxCrmB,WA5DwC;AAAA,MA6DxChE,WA7DwC,GAuEtCqqB,aAvEsC,CA6DxCrqB,WA7DwC;AAAA,MA8DxCuE,WA9DwC,GAuEtC8lB,aAvEsC,CA8DxC9lB,WA9DwC;AAAA,MA+DxCC,SA/DwC,GAuEtC6lB,aAvEsC,CA+DxC7lB,SA/DwC;AAAA,8BAuEtC6lB,aAvEsC,CAgExCzqB,mBAhEwC;AAAA,MAgExCA,mBAhEwC,sCAgElB,EAhEkB;AAAA,MAiExCsE,OAjEwC,GAuEtCmmB,aAvEsC,CAiExCnmB,OAjEwC;AAAA,MAkExCC,oBAlEwC,GAuEtCkmB,aAvEsC,CAkExClmB,oBAlEwC;AAAA,MAmExCC,eAnEwC,GAuEtCimB,aAvEsC,CAmExCjmB,eAnEwC;AAAA,MAoExCC,6BApEwC,GAuEtCgmB,aAvEsC,CAoExChmB,6BApEwC;AAAA,MAqExCvD,cArEwC,GAuEtCupB,aAvEsC,CAqExCvpB,cArEwC;AAAA,MAsExCwD,UAtEwC,GAuEtC+lB,aAvEsC,CAsExC/lB,UAtEwC;AAAA,MAwElC5D,QAxEkC,GAwECd,mBAxED,CAwElCc,QAxEkC;AAAA,MAwExB6lB,WAxEwB,GAwEC3mB,mBAxED,CAwExB2mB,WAxEwB;AAAA,MAwEX+D,OAxEW,GAwEC1qB,mBAxED,CAwEX0qB,OAxEW;AAAA,qBAyEjBhkB,GAzEiB,CAyElCgE,OAzEkC;AAAA,MAyElCA,OAzEkC,6BAyExB,EAzEwB;AA0E1C,MAAMigB,aAAa,GACjBjgB,OAAO,CAACE,eAAR,IAA2B,CAAC+b,WAA5B,IAA2C,CAAC+D,OAA5C,IAAuD/f,WADzD;AAIA,MAAMigB,6BAA6B,GAAGpP,kBAAkB,IAAIiO,MAAM,CAACjO,kBAAnE;AACA,MAAMqP,wBAAwB,GAAGpP,iBAAiB,IAAIgO,MAAM,CAAChO,iBAA7D;AACA,MAAMyI,aAAa,GAAG1f,eAAtB;AACA,MAAMsR,WAAW,GAAGxD,aAAO,CAAC;AAAA,WAC1BqY,aAAa,GACTrgB,iCAAA,CAAwCpJ,cAAxC,CADS,GAET,IAAI9B,GAAJ,EAHsB;AAAA,GAAD,EAIxB,CAAC8B,cAAD,CAJwB,CAA3B;AAMA,MAAMmR,YAAY,GAAGC,aAAO,CAAC;AAAA,WAC3BqY,aAAa,GACTrgB,8BAAA,CAAqCpJ,cAArC,CADS,GAET,EAHuB;AAAA,GAAD,EAIzB,CAACA,cAAD,CAJyB,CAA5B;AAMA,MAAMmB,YAAY,GAAGiQ,aAAO,CAAC;AAAA,WAC3BqY,aAAa,GACTrgB,0BAAA,CAAiCtK,mBAAmB,CAACoC,OAArD,CADS,GAET,IAAIhD,GAAJ,EAHuB;AAAA,GAAD,EAIzB,CAACY,mBAAmB,CAACoC,OAArB,CAJyB,CAA5B;AAMA,MAAM0oB,gBAAgB,GAAGhgB,iBAAiB,CAAC;AACzC9K,IAAAA,mBAAmB,EAAnBA,mBADyC;AACpBuE,IAAAA,oBAAoB,EAApBA,oBADoB;AACE8E,IAAAA,0BAA0B,EAA1BA;AADF,GAAD,EAEvC;AACD/E,IAAAA,OAAO,EAAPA,OADC;AAEDqC,IAAAA,MAAM,EAANA,MAFC;AAGDF,IAAAA,kBAAkB,EAAlBA,kBAHC;AAIDC,IAAAA,GAAG,EAAHA;AAJC,GAFuC,CAA1C;AASA,MAAMqkB,oBAAoB,GAAG3f,qBAAqB,CAAC;AACjDpL,IAAAA,mBAAmB,EAAnBA,mBADiD;AAEjDyE,IAAAA,6BAA6B,EAA7BA,6BAFiD;AAGjD4E,IAAAA,0BAA0B,EAA1BA,0BAHiD;AAIjD7E,IAAAA,eAAe,EAAfA;AAJiD,GAAD,EAK/C;AACDmC,IAAAA,MAAM,EAANA,MADC;AAEDF,IAAAA,kBAAkB,EAAlBA,kBAFC;AAGDC,IAAAA,GAAG,EAAHA;AAHC,GAL+C,CAAlD;AAWA,MAAM0L,cAAc,GAAGkB,yBAAyB,CAAC;AAAEtT,IAAAA,mBAAmB,EAAnBA;AAAF,GAAD,EAA0B;AAAE2G,IAAAA,MAAM,EAANA;AAAF,GAA1B,CAAhD;AAEA,MAAMqP,sBAAsB,GAAG7D,yBAAyB,CAAC;AACvDjR,IAAAA,cAAc,EAAdA,cADuD;AACvCkR,IAAAA,cAAc,EAAdA;AADuC,GAAD,EAErD;AACDzH,IAAAA,WAAW,EAAEggB,aADZ;AAEDhkB,IAAAA,MAAM,EAANA,MAFC;AAGDpE,IAAAA,MAAM,EAANA,MAHC;AAID8P,IAAAA,YAAY,EAAZA;AAJC,GAFqD,CAAxD,CAzH0C;;AAmI1C2Y,EAAAA,aAAa,CACX;AAAE/rB,IAAAA,UAAU,EAAVA,UAAF;AAAcuH,IAAAA,OAAO,EAAPA;AAAd,GADW,EAEX;AAAEC,IAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBC,IAAAA,GAAG,EAAHA,GAAtB;AAA2BC,IAAAA,MAAM,EAANA;AAA3B,GAFW,CAAb,CAnI0C;;AAyI1CJ,EAAAA,sBAAsB,CACpB;AAAEvG,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBwG,IAAAA,OAAO,EAAPA,OAAvB;AAAgChC,IAAAA,eAAe,EAAfA;AAAhC,GADoB,EAEpB;AACEiC,IAAAA,kBAAkB,EAAlBA,kBADF;AAEEC,IAAAA,GAAG,EAAHA,GAFF;AAGEC,IAAAA,MAAM,EAANA,MAHF;AAIEC,IAAAA,SAAS,EAATA;AAJF,GAFoB,CAAtB;AAUAwC,EAAAA,uBAAuB,CAAC;AACtBpJ,IAAAA,mBAAmB,EAAnBA,mBADsB;AAEtBqJ,IAAAA,0BAA0B,EAA1BA,0BAFsB;AAGtBC,IAAAA,eAAe,EAAfA;AAHsB,GAAD,EAIpB;AACD5C,IAAAA,GAAG,EAAHA,GADC;AAEDC,IAAAA,MAAM,EAANA,MAFC;AAGDF,IAAAA,kBAAkB,EAAlBA;AAHC,GAJoB,CAAvB,CAnJ0C;;AA8J1CI,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMokB,UAAU,GAAG3gB,aAAA,CAAoBrL,UAApB,EAAgCC,MAAhC,EAAwCuH,kBAAxC,CAAnB;AACA,WAAO,YAAM;AACX6D,MAAAA,mBAAA,CAA0B2gB,UAA1B;AACD,KAFD;AAGD,GALQ,EAKN,CAAChsB,UAAD,EAAauH,OAAb,CALM,CAAT,CA9J0C;;AAsK1CuJ,EAAAA,gBAAgB,CACd;AAAExM,IAAAA,WAAW,EAAXA,WAAF;AAAevD,IAAAA,mBAAmB,EAAnBA;AAAf,GADc,EAEd;AAAEyG,IAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBC,IAAAA,GAAG,EAAHA,GAAtB;AAA2BC,IAAAA,MAAM,EAANA;AAA3B,GAFc,CAAhB,CAtK0C;;AA4K1C4D,EAAAA,kBAAkB,CAAC;AAAEC,IAAAA,QAAQ,EAARA;AAAF,GAAD,EAAe;AAC/B7D,IAAAA,MAAM,EAANA,MAD+B;AAE/BD,IAAAA,GAAG,EAAHA,GAF+B;AAG/B1G,IAAAA,mBAAmB,EAAnBA,mBAH+B;AAI/ByG,IAAAA,kBAAkB,EAAlBA,kBAJ+B;AAK/B4C,IAAAA,0BAA0B,EAA1BA;AAL+B,GAAf,CAAlB;AAQA,MAAMkC,aAAa,GAAGD,wBAAwB,CAAC;AAAEtL,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuByG,IAAAA,kBAAkB,EAAlBA;AAAvB,GAAD,EAC5C;AAAEE,IAAAA,MAAM,EAANA;AAAF,GAD4C,CAA9C;AAEA,MAAMqb,aAAa,GAAGxW,wBAAwB,CAC5C;AAAExL,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuByG,IAAAA,kBAAkB,EAAlBA,kBAAvB;AAA2CgF,IAAAA,yBAAyB,EAAzBA;AAA3C,GAD4C,EAE5C;AAAE9E,IAAAA,MAAM,EAANA,MAAF;AAAUD,IAAAA,GAAG,EAAHA,GAAV;AAAexH,IAAAA,MAAM,EAANA;AAAf,GAF4C,CAA9C;AAIA,MAAMia,aAAa,GAAG9M,wBAAwB,CAC5C;AAAErM,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuByG,IAAAA,kBAAkB,EAAlBA;AAAvB,GAD4C,EAE5C;AAAEE,IAAAA,MAAM,EAANA;AAAF,GAF4C,CAA9C;;AA1L0C,8BA8LDiG,sBAAsB,CAC7D;AAAE5M,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuB6M,IAAAA,uBAAuB,EAAvBA;AAAvB,GAD6D,EAE7D;AACEnG,IAAAA,GAAG,EAAHA,GADF;AAEEC,IAAAA,MAAM,EAANA,MAFF;AAGEzH,IAAAA,MAAM,EAANA,MAHF;AAIEuH,IAAAA,kBAAkB,EAAlBA;AAJF,GAF6D,CA9LrB;AAAA;AAAA,MA8LnCqG,eA9LmC;AAAA,MA8LlB0Z,aA9LkB;;AAAA,8BAuMdlZ,0BAA0B,CACpD;AAAEtN,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBuN,IAAAA,uBAAuB,EAAvBA,uBAAvB;AAAgDC,IAAAA,gBAAgB,EAAhBA;AAAhD,GADoD,EAEpD;AACE9G,IAAAA,GAAG,EAAHA,GADF;AAEEC,IAAAA,MAAM,EAANA,MAFF;AAGEzH,IAAAA,MAAM,EAANA,MAHF;AAIEuH,IAAAA,kBAAkB,EAAlBA;AAJF,GAFoD,CAvMZ;AAAA;AAAA,MAuMnCykB,iBAvMmC;;AAiN1C,MAAI,CAACjsB,UAAL,EAAiB;AACf,WAAQ0R;AAAK,MAAA,SAAS,EAAC;AAAf,OAAuCA,6BAACyT,mBAAD;AAAa,MAAA,IAAI,EAAEC,0BAAgB,CAAC8G;AAApC,MAAvC,CAAR;AACD;;AACD,MAAIvmB,SAAJ,EAAe;AACb,WAAQ+L;AAAK,MAAA,SAAS,EAAC;AAAf,OAAuCA,6BAACyT,mBAAD;AAAa,MAAA,IAAI,EAAEC,0BAAgB,CAAC+G;AAApC,MAAvC,CAAR;AACD;;AACD,MAAInB,QAAJ,EAAc;AACZ,WACEtZ;AAAK,MAAA,SAAS,EAAC;AAAf,OACEA,6BAACyT,mBAAD;AACE,MAAA,IAAI,EAAEC,0BAAgB,CAAC+G,KADzB;AAEE,MAAA,cAAc,EAAE,0BAAM;AACpBzkB,QAAAA,MAAM,CAACM,IAAP,CAAY,uBAAZ;AACAyiB,QAAAA,SAAS;AACV;AALH,MADF,CADF;AAWD;;AACD,SACE/Y,6BAAC0a,yBAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,kBAAkB,EAAET,6BAFtB;AAGE,IAAA,iBAAiB,EAAEC;AAHrB,KAMId,gBAAgB,GACZA,gBAAgB,CAAC;AAAEtqB,IAAAA,OAAO,EAAEO,mBAAX;AAAgC8b,IAAAA,IAAI,EAAJA;AAAhC,GAAD,CADJ,GAGZnL,6BAAC,UAAD;AACE,IAAA,KAAK,EAAEmY,KADT;AAEE,IAAA,mBAAmB,EAAE9oB,mBAFvB;AAGE,IAAA,WAAW,EAAE8b,IAHf;AAIE,IAAA,cAAc,EAAE6M,cAJlB;AAKE,IAAA,aAAa,EAAEC,aALjB;AAME,IAAA,aAAa,EAAEoB,uBANjB;AAOE,IAAA,QAAQ,EAAEhqB,mBAAmB,CAACoC,OAApB,IAA+BpC,mBAAmB,CAACoC,OAApB,CAA4Bb,MAA5B,KAAuC,CAPlF;AAQE,IAAA,QAAQ,EAAE,KARZ;AASE,IAAA,OAAO,EAAE;AATX,IATR,EAuBIT,QAAQ,IACN6P,6BAAC,kBAAD,OAxBN,EA4BIvQ,WAAW,GAAG,CAAd,IACEuQ,6BAAC,YAAD;AACE,IAAA,KAAK,EAAEvQ,WADT;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIkJ,eAAJ,EAAqB;AACnB8gB,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,OAHD,MAGO;AACL/f,QAAAA,cAAA,GADK;;AAGL,YAAI1D,SAAS,CAACO,OAAV,CAAkB5I,SAAlB,KAAgC,CAApC,EAAuC;AACrCyB,UAAAA,mBAAmB,CAACsH,UAApB;AACAb,UAAAA,kBAAkB,CAAC;AACjB5I,YAAAA,IAAI,EAAE6K;AADW,WAAD,CAAlB;AAGD;AACF;AACF,KAhBH;AAiBE,IAAA,IAAI,EAAE/D;AAjBR,IA7BN,EAmDIN,OAAO,GAEHsM;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCA,6BAACyT,mBAAD;AAAa,IAAA,IAAI,EAAEC,0BAAgB,CAACiH;AAApC,IAAvC,CAFG,GAIH3a,6BAAC,kBAAD;AACE,IAAA,UAAU,EACRjK,GAAG,IAAIA,GAAG,CAACyF,qBAAX,IAAoCzF,GAAG,CAACyF,qBAAJ,EAFxC;AAIE,IAAA,oBAAoB,EAAE8V,oBAJxB;AAKE,IAAA,MAAM,EAAE1f,MALV;AAME,IAAA,OAAO,EAAE+B,OANX;AAOE,IAAA,QAAQ,EAAE,CAACkG,QAPb;AAQE,IAAA,QAAQ,EAAEsgB,gBARZ;AASE,IAAA,YAAY,EAAEC,oBAThB;AAUE,IAAA,SAAS,EAAEnkB,SAVb;AAWE,IAAA,UAAU,EAAElC,UAXd;AAYE,IAAA,WAAW,EAAEimB,aAZf;AAaE,IAAA,WAAW,EAAEpnB,WAbf;AAcE,IAAA,WAAW,EAAEuS,WAdf;AAeE,IAAA,UAAU,EAAEzT,YAfd;AAgBE,IAAA,YAAY,EAAEiI,uBAAA,CAA8BtK,mBAA9B,CAhBhB;AAiBE,IAAA,aAAa,EAAEuL,aAjBjB;AAkBE,IAAA,aAAa,EAAEyW,aAlBjB;AAmBE,IAAA,aAAa,EAAE7I,aAnBjB;AAoBE,IAAA,cAAc,EAAE/G,cApBlB;AAqBE,IAAA,cAAc,EAAElR,cArBlB;AAsBE,IAAA,cAAc,EAAE8iB,cAtBlB;AAuBE,IAAA,aAAa,EAAEE,aAvBjB;AAwBE,IAAA,gBAAgB,EAAE,4BAAM;AACtBkG,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,KA3BH;AA4BE,IAAA,mBAAmB,EAAEnI,mBA5BvB;AA6BE,IAAA,kBAAkB,EAAE+B,kBA7BtB;AA8BE,IAAA,kBAAkB,EAAExd,kBA9BtB;AA+BE,IAAA,mBAAmB,EAAEzG,mBA/BvB;AAgCE,IAAA,sBAAsB,EAAEgW;AAhC1B,IAvDR,EA2FErF;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC2V,qBAAD;AACE,IAAA,OAAO,EAAEtmB,mBADX;AAEE,IAAA,IAAI,EAAE8b,IAFR;AAGE,IAAA,GAAG,EAAEhP,eAHP;AAIE,IAAA,aAAa,EAAE0Z,aAJjB;AAKE,IAAA,YAAY,EAAE0E,iBALhB;AAME,IAAA,kBAAkB,EAAExE,kBANtB;AAOE,IAAA,QAAQ,EAAElc,QAPZ;AAQE,IAAA,WAAW,EAAEpG;AARf,IADF,EAWEuM;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC,eAAD;AAAiB,IAAA,UAAU,EAAE1R,UAA7B;AAAyC,IAAA,EAAE,EAAEyH,GAA7C;AAAkD,IAAA,MAAM,EAAEC;AAA1D,IADF,CAXF,EAeI,CAAC6D,QAAD,IACEmG,6BAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEnK,OAA3B;AAAoC,IAAA,EAAE,EAAEE,GAAxC;AAA6C,IAAA,MAAM,EAAEC;AAArD,IAhBN,CA3FF,CADF;AAkHD,CAtVM;AAwVP0iB,iBAAiB,CAAC7X,SAAlB,GAA8B;AAC5BvS,EAAAA,UAAU,EAAEwS,SAAS,CAACO,MADM;AAE5BsX,EAAAA,MAAM,EAAE7X,SAAS,CAAC+F,KAAV,CAAgB;AACtB+R,IAAAA,QAAQ,EAAE9X,SAAS,CAAC+F,KAAV,CAAgB;AACxBpT,MAAAA,WAAW,EAAEqN,SAAS,CAACI,IADC;AAExBnL,MAAAA,GAAG,EAAE+K,SAAS,CAAC+F,KAAV,CAAgB;AACnBrL,QAAAA,qBAAqB,EAAEsF,SAAS,CAACG,IADd;AAEnBvJ,QAAAA,oBAAoB,EAAEoJ,SAAS,CAACG,IAFb;AAGnBrJ,QAAAA,YAAY,EAAEkJ,SAAS,CAAC8Z,GAHL;AAInBvkB,QAAAA,cAAc,EAAEyK,SAAS,CAAC8Z,GAJP;AAKnBnjB,QAAAA,iBAAiB,EAAEqJ,SAAS,CAACG,IALV;AAMnB9F,QAAAA,iBAAiB,EAAE2F,SAAS,CAAC8Z,GANV;AAOnBrd,QAAAA,iBAAiB,EAAEuD,SAAS,CAAC8Z,GAPV;AAQnB1iB,QAAAA,WAAW,EAAE4I,SAAS,CAACG,IARJ;AASnBlH,QAAAA,OAAO,EAAE+G,SAAS,CAAC+F,KAAV,CAAgB,EAAhB;AATU,OAAhB,CAFmB;AAaxB/Y,MAAAA,KAAK,EAAEgT,SAAS,CAACI;AAbO,KAAhB,CADY;AAgBtB2X,IAAAA,SAAS,EAAE/X,SAAS,CAAC+F,KAAV,CAAgB;AACzBsE,MAAAA,IAAI,EAAErK,SAAS,CAAC+F,KAAV,CAAgB,EAAhB;AADmB,KAAhB;AAhBW,GAAhB,EAmBL7F,UArByB;AAsB5BgY,EAAAA,WAAW,EAAElY,SAAS,CAAC+F,KAAV,CAAgB;AAC3BkS,IAAAA,SAAS,EAAEjY,SAAS,CAACG;AADM,GAAhB,EAEVD,UAxByB;AAyB5B8X,EAAAA,MAAM,EAAEhY,SAAS,CAAC+F,KAAV,CAAgB;AACtBgE,IAAAA,kBAAkB,EAAE/J,SAAS,CAACI,IADR;AAEtB4J,IAAAA,iBAAiB,EAAEhK,SAAS,CAACG,IAFP;AAGtBrP,IAAAA,MAAM,EAAEkP,SAAS,CAACO,MAAV,CAAiBL,UAHH;AAItBnH,IAAAA,QAAQ,EAAEiH,SAAS,CAACI,IAAV,CAAeF,UAJH;AAKtBmX,IAAAA,KAAK,EAAErX,SAAS,CAACO,MALK;AAMtBrL,IAAAA,MAAM,EAAE8K,SAAS,CAAC+F,KAAV,CAAgB;AACtBvQ,MAAAA,IAAI,EAAEwK,SAAS,CAACG,IADM;AAEtBnT,MAAAA,KAAK,EAAEgT,SAAS,CAACG,IAFK;AAGtBrK,MAAAA,OAAO,EAAEkK,SAAS,CAACG;AAHG,KAAhB,CANc;AAWtB1S,IAAAA,MAAM,EAAEuS,SAAS,CAAC+F,KAAV,CAAgB;AACtBnY,MAAAA,SAAS,EAAEoS,SAAS,CAACG,IADC;AAEtBxF,MAAAA,OAAO,EAAEqF,SAAS,CAACG;AAFG,KAAhB,CAXc;AAetBpE,IAAAA,gBAAgB,EAAEiE,SAAS,CAAC+F,KAAV,CAAgB;AAChC/J,MAAAA,eAAe,EAAEgE,SAAS,CAACM,MADK;AAEhCrE,MAAAA,aAAa,EAAE+D,SAAS,CAACK,SAAV,CAAoB,CACjCL,SAAS,CAACM,MADuB,EAEjCN,SAAS,CAACO,MAFuB,CAApB,CAFiB;AAMhCrE,MAAAA,cAAc,EAAE8D,SAAS,CAACK,SAAV,CAAoB,CAClCL,SAAS,CAACM,MADwB,EAElCN,SAAS,CAACO,MAFwB,CAApB;AANgB,KAAhB;AAfI,GAAhB,EA0BLL,UAnDyB;AAoD5BiY,EAAAA,OAAO,EAAEnY,SAAS,CAAC+F,KAAV,CAAgB;AACvB/N,IAAAA,iBAAiB,EAAEgI,SAAS,CAAC+F,KAAV,CAAgB;AACjCgU,MAAAA,gBAAgB,EAAE/Z,SAAS,CAACI,IADK;AAEjC4Z,MAAAA,wBAAwB,EAAEha,SAAS,CAACI,IAFH;AAGjChI,MAAAA,eAAe,EAAE4H,SAAS,CAACI,IAHM;AAIjCjI,MAAAA,cAAc,EAAE6H,SAAS,CAACI,IAJO;AAKjC6Z,MAAAA,iBAAiB,EAAEja,SAAS,CAACI,IALI;AAMjC8Z,MAAAA,KAAK,EAAEla,SAAS,CAACM,MANgB;AAOjC6Z,MAAAA,OAAO,EAAEna,SAAS,CAACI,IAPc;AAQjCga,MAAAA,mBAAmB,EAAEpa,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACO,MAA5B;AARY,KAAhB;AADI,GAAhB,CApDmB;AAgE5B6X,EAAAA,aAAa,EAAEpY,SAAS,CAACM,MAhEG;AAiE5B+X,EAAAA,kBAAkB,EAAErY,SAAS,CAACK,SAAV,CAAoB,CACtCL,SAAS,CAACO,MAD4B,EAEtCP,SAAS,CAACM,MAF4B,CAApB,CAjEQ;AAqE5BlF,EAAAA,uBAAuB,EAAE4E,SAAS,CAACG,IArEP;AAqEa;AACzCrE,EAAAA,uBAAuB,EAAEkE,SAAS,CAACG,IAtEP;AAsEa;AACzCnG,EAAAA,yBAAyB,EAAEgG,SAAS,CAACG,IAvET;AAwE5BoS,EAAAA,cAAc,EAAEvS,SAAS,CAACK,SAAV,CAAoB,CAClCL,SAAS,CAACC,OADwB,EAElCD,SAAS,CAACG,IAFwB,CAApB,CAxEY;AA4E5BsQ,EAAAA,mBAAmB,EAAEzQ,SAAS,CAACG,IA5EH;AA6E5B8U,EAAAA,kBAAkB,EAAEjV,SAAS,CAACK,SAAV,CAAoB,CACtCL,SAAS,CAACC,OAD4B,EAEtCD,SAAS,CAACG,IAF4B,CAApB,CA7EQ;AAiF5BmY,EAAAA,gBAAgB,EAAEtY,SAAS,CAACK,SAAV,CAAoB,CACpCL,SAAS,CAACC,OAD0B,EAEpCD,SAAS,CAACG,IAF0B,CAApB,CAjFU;AAqF5B+W,EAAAA,cAAc,EAAElX,SAAS,CAACI,IArFE;AAsF5B+W,EAAAA,aAAa,EAAEnX,SAAS,CAACG,IAtFG;AAuF5BoY,EAAAA,uBAAuB,EAAEvY,SAAS,CAACG,IAvFP;AAwF5BjH,EAAAA,WAAW,EAAE8G,SAAS,CAACI,IAxFK;AAyF5B2J,EAAAA,kBAAkB,EAAE/J,SAAS,CAACI,IAzFF;AA0F5B4J,EAAAA,iBAAiB,EAAEhK,SAAS,CAACG,IA1FD;AA2F5BqS,EAAAA,kBAAkB,EAAExS,SAAS,CAACI;AA3FF,CAA9B;AA8FAwX,iBAAiB,CAACnX,YAAlB,GAAiC;AAC/BjT,EAAAA,UAAU,EAAE,IADmB;AAE/B2qB,EAAAA,OAAO,EAAE,EAFsB;AAG/B/c,EAAAA,uBAAuB,EAAE,IAHM;AAI/BU,EAAAA,uBAAuB,EAAE,IAJM;AAK/B9B,EAAAA,yBAAyB,EAAE,IALI;AAM/Boe,EAAAA,aAAa,EAAE,IANgB;AAO/BC,EAAAA,kBAAkB,EAAE,IAPW;AAQ/B9F,EAAAA,cAAc,EAAE,IARe;AAS/B9B,EAAAA,mBAAmB,EAAE,IATU;AAU/BwE,EAAAA,kBAAkB,EAAE,IAVW;AAW/BqD,EAAAA,gBAAgB,EAAE,IAXa;AAY/Bpf,EAAAA,WAAW,EAAE,IAZkB;AAa/Bge,EAAAA,cAAc,EAAE,KAbe;AAc/BC,EAAAA,aAAa,EAAE9P,MAdgB;AAe/B0C,EAAAA,kBAAkB,EAAE,KAfW;AAgB/BC,EAAAA,iBAAiB,EAAE,IAhBY;AAiB/BwI,EAAAA,kBAAkB,EAAE,IAjBW;AAkB/B+F,EAAAA,uBAAuB,EAAElR;AAlBM,CAAjC;IAsBE7X,yCAGEqJ;IAFFlJ,mCAEEkJ;IADF3I,gCACE2I;AAEJ,mBAAewhB,uCAAmB,CAACzC,iBAAD,CAAlC;;;;;;;;"}