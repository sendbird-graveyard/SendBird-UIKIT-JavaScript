{"version":3,"file":"ChannelSettings.js","sources":["../../../src/smart-components/ChannelSettings/components/EditDetails.jsx","../../../src/smart-components/ChannelSettings/components/ChannelProfile.jsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MembersModal.tsx","../../../src/smart-components/ChannelSettings/components/MemebersAccordion.jsx","../../../src/smart-components/ChannelSettings/components/UserListItem.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorsModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/AddOperatorsModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/InviteMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/index.tsx","../../../src/smart-components/ChannelSettings/index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const title = channel.name;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n          />\n        </div>\n        <Label\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n          className=\"sendbird-channel-profile__title\"\n        >\n          {title}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button from '../../../ui/Button';\nimport {\n  Type as ButtonTypes,\n  Size as ButtonSizes,\n} from '../../../ui/Button/type';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MemebersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMemebers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMemebers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMemebersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMemebers: PropTypes.func.isRequired,\n};\n\nMemebersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MemebersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: string[]): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport {\n  Type as ButtonTypes,\n  Size as ButtonSizes,\n} from '../../../../ui/Button/type';\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: string[]): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport {\n  Type as ButtonTypes,\n  Size as ButtonSizes,\n} from '../../../../ui/Button/type';\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport const MemberList = ({ sdk, channel, userQueryCreator }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (<ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <IconButton\n                    className=\"sendbird-user-message__more__menu\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={toggleDropdown}\n                  >\n                    <Icon\n                      width=\"24px\"\n                      height=\"24px\"\n                      type={IconTypes.MORE}\n                      fillColor={IconColors.CONTENT_INVERSE}\n                    />\n                  </IconButton>\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentContainRef={parentRef}\n                    parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    <MenuItem\n                      onClick={() => {\n                        if ((member.role !== 'operator')) {\n                          channel.addOperators([member.userId], () => {\n                            refershList();\n                            closeDropdown();\n                          });\n                        } else {\n                          channel.removeOperators([member.userId], () => {\n                            refershList();\n                            closeDropdown();\n                          });\n                        }\n                      }}\n                    >\n                      { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                    </MenuItem>\n                    {\n                      // No muted members in broadcast channel\n                      !channel.isBroadcast && (\n                        <MenuItem\n                          onClick={() => {\n                            if (member.isMuted) {\n                              channel.unmuteUser(member, () => {\n                                refershList();\n                                closeDropdown();\n                              })\n                            } else {\n                              channel.muteUser(member, () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          { member.isMuted ? 'Unmute' : 'Mute' }\n                        </MenuItem>\n                      )\n                    }\n                    <MenuItem\n                      onClick={() => {\n                        channel.banUser(member, -1, '', () => {\n                          refershList();\n                          closeDropdown();\n                        });\n                      }}\n                    >\n                      Ban\n                    </MenuItem>\n                  </MenuItems>\n                )}\n              />)}\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMemebers: string[]) => {\n              channel.inviteWithUserIds(selectedMemebers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport {\n  Type as ButtonTypes,\n  Size as ButtonSizes,\n} from '../../../../ui/Button/type';\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport {\n  Type as ButtonTypes,\n  Size as ButtonSizes,\n} from '../../../../ui/Button/type';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function index({\n  userQueryCreator,\n  channel,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.ICON_OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList userQueryCreator={userQueryCreator} channel={channel} />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.ICON_MUTED}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.ICON_BANNED}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FROZEN_LIGHT}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MemebersAccordion from './components/MemebersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className=\"sendbird-channel-settings\">\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            type={IconTypes.CLOSE}\n            className=\"sendbird-channel-settings__close-icon\"\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n      className=\"sendbird-channel-settings\"\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              type={IconTypes.CLOSE}\n              className=\"sendbird-channel-settings__close-icon\"\n              height=\"24px\"\n              width=\"24px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  tabIndex={0}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  className={`\n                    sendbird-channel-settings__panel-item\n                    sendbird-channel-settings__members\n                  `}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                >\n                  <Icon\n                    type={IconTypes.MEMBERS}\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    height=\"24px\"\n                    width=\"24px\"\n                    fillColor={IconColors.PRIMARY}\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {`${stringSet.CHANNEL_SETTING__MEMBERS__TITLE}`}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    type={IconTypes.SHEVRON}\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MemebersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMemebers={(selectedMemebers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMemebers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={\n            `sendbird-channel-settings__panel-item\n              sendbird-channel-settings__leave-channel\n              ${!isOnline ? 'sendbird-channel-settings__panel-item__disabled' : ''}`\n          }\n          role=\"button\"\n          tabIndex={0}\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n        >\n          <Icon\n            type={IconTypes.LEAVE}\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"],"names":["EditDetails","props","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","useState","currentImg","setCurrentImg","newFile","setNewFile","useContext","LocalizationContext","stringSet","title","name","React","Modal","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","ChannelAvatar","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","bool","defaultProps","MembersModal","_a","hideModal","currentUser","_b","members","setMembers","_c","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","noop","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","profileUrl","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","nickname","NO_NAME","YOU","MemebersAccordion","userQueryCreator","onInviteMemebers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","slice","length","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER","InviteMembers","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","arrayOf","COMPONENT_NAME","className","action","injectingClassNames","Array","isArray","__spreadArrays","join","MutedAvatarOverlay","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","_d","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","event","modifiedSelectedMembers","id","checked","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps","store","getSdk","withSendbirdContext","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","selectedMemebers","inviteWithUserIds","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","MutedMembersModal","mutedMemberFilter","MutedMemberList","kFormatter","num","Math","abs","toFixed","index","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","ICON_OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","memberCount","ICON_MUTED","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","ICON_BANNED","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FROZEN_LIGHT","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","ChannelSettings","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","sdkStore","stores","config","logger","isOnline","queries","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","uuidv4","channelUpdateId","setChannelUpdateId","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolder","PlaceHolderTypes","WRONG","UserProfileProvider","currentTitle","getErrorFirstCallback","params","data","updateChannel","AdminPanel","createDefaultUserListQuery","SHEVRON","then","res","LEAVE","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any"],"mappings":";;;;;;;;;;;;;;;;;AAYA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MAE3BC,SAF2B,GAOzBD,KAPyB,CAE3BC,QAF2B;AAAA,MAG3BC,QAH2B,GAOzBF,KAPyB,CAG3BE,QAH2B;AAAA,MAI3BC,OAJ2B,GAOzBH,KAPyB,CAI3BG,OAJ2B;AAAA,MAK3BC,MAL2B,GAOzBJ,KAPyB,CAK3BI,MAL2B;AAAA,MAM3BC,KAN2B,GAOzBL,KAPyB,CAM3BK,KAN2B;AAQ7B,MAAMC,QAAQ,GAAGC,YAAM,CAAC,IAAD,CAAvB;AACA,MAAMC,OAAO,GAAGD,YAAM,CAAC,IAAD,CAAtB;AACA,MAAME,cAAc,GAAGF,YAAM,CAAC,IAAD,CAA7B;;AAV6B,kBAWOG,cAAQ,CAAC,IAAD,CAXf;AAAA;AAAA,MAWtBC,UAXsB;AAAA,MAWVC,aAXU;;AAAA,mBAYCF,cAAQ,CAAC,IAAD,CAZT;AAAA;AAAA,MAYtBG,OAZsB;AAAA,MAYbC,UAZa;;AAAA,oBAaPC,gBAAU,CAACC,uCAAD,CAbH;AAAA,MAarBC,SAbqB,eAarBA,SAbqB;;AAc7B,MAAMC,KAAK,GAAGf,OAAO,CAACgB,IAAtB;AACA,SACEC,6BAACC,aAAD;AACE,IAAA,SAAS,EAAEJ,SAAS,CAACK,iCADvB;AAEE,IAAA,UAAU,EAAEL,SAAS,CAACM,YAFxB;AAGE,IAAA,QAAQ,EAAErB,QAHZ;AAIE,IAAA,QAAQ,EAAE,oBAAM;AACd,UAAIgB,KAAK,KAAK,EAAV,IAAgB,CAACZ,QAAQ,CAACkB,OAAT,CAAiBC,KAAtC,EAA6C;AAC3C,YAAIjB,OAAO,CAACgB,OAAR,CAAgBE,cAApB,EAAoC;AAAE;AACpClB,UAAAA,OAAO,CAACgB,OAAR,CAAgBE,cAAhB;AACD;;AACD;AACD;;AACDzB,MAAAA,SAAQ,CAACY,OAAD,EAAUP,QAAQ,CAACkB,OAAT,CAAiBC,KAA3B,CAAR;;AACAvB,MAAAA,QAAQ;AACT,KAbH;AAcE,IAAA,IAAI,EAAEyB,YAAU,CAACC;AAdnB,KAgBER;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,GAAG,EAAEZ,OAFP;AAGE,IAAA,QAAQ,EAAE,kBAACqB,CAAD,EAAO;AAAEA,MAAAA,CAAC,CAACC,cAAF;AAAqB;AAH1C,KAKEV;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACW,kBAAD,QACGd,SAAS,CAACe,yCADb,CADF,EAIEZ;AAAK,IAAA,SAAS,EAAC;AAAf,KAEIT,UAAU,GAENS,6BAACa,cAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,GAAG,EAAEtB;AAHP,IAFM,GAQNS,6BAACc,uBAAD;AACE,IAAA,MAAM,EAAE,EADV;AAEE,IAAA,KAAK,EAAE,EAFT;AAGE,IAAA,OAAO,EAAE/B,OAHX;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,KAAK,EAAEC;AALT,IAVR,CAJF,EAwBEe;AACE,IAAA,GAAG,EAAEX,cADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,kCAHT;AAIE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,OAAO,EAAE;AAAX,KAJT;AAKE,IAAA,QAAQ,EAAE,kBAACN,CAAD,EAAO;AACfjB,MAAAA,aAAa,CAACwB,GAAG,CAACC,eAAJ,CAAoBR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAb;AACAzB,MAAAA,UAAU,CAACe,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAV;AACA9B,MAAAA,cAAc,CAACe,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;AACD;AATH,IAxBF,EAmCEL,6BAACoB,kBAAD;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM/B,cAAc,CAACe,OAAf,CAAuBiB,KAAvB,EAAN;AAAA,KAFX;AAGE,IAAA,YAAY;AAHd,KAKErB,6BAACsB,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACC,QAA7B;AAAuC,IAAA,KAAK,EAAEC,mBAAW,CAACjB;AAA1D,KACGX,SAAS,CAAC6B,kCADb,CALF,CAnCF,CALF,EAkDE1B;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACW,kBAAD,QACGd,SAAS,CAAC8B,wCADb,CADF,EAIE3B,6BAAC4B,aAAD;AACE,IAAA,QAAQ,EAAE9B,KAAK,KAAK,EADtB;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,GAAG,EAAEZ,QAHP;AAIE,IAAA,KAAK,EAAEY,KAJT;AAKE,IAAA,WAAW,EAAED,SAAS,CAACgC;AALzB,IAJF,CAlDF,CAhBF,CADF;AAkFD,CAjGD;;AAmGAlD,WAAW,CAACmD,SAAZ,GAAwB;AACtBjD,EAAAA,QAAQ,EAAEkD,SAAS,CAACC,IAAV,CAAeC,UADH;AAEtBnD,EAAAA,QAAQ,EAAEiD,SAAS,CAACC,IAAV,CAAeC,UAFH;AAGtBlD,EAAAA,OAAO,EAAEgD,SAAS,CAACG,KAAV,CAAgB;AACvBnC,IAAAA,IAAI,EAAEgC,SAAS,CAACI;AADO,GAAhB,EAENF,UALmB;AAMtBjD,EAAAA,MAAM,EAAE+C,SAAS,CAACI,MAAV,CAAiBF,UANH;AAOtBhD,EAAAA,KAAK,EAAE8C,SAAS,CAACI,MAAV,CAAiBF;AAPF,CAAxB;;ACpGA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACxD,KAAD,EAAW;AAAA,MAE9ByD,QAF8B,GAO5BzD,KAP4B,CAE9ByD,QAF8B;AAAA,MAG9BtD,OAH8B,GAO5BH,KAP4B,CAG9BG,OAH8B;AAAA,MAI9BC,MAJ8B,GAO5BJ,KAP4B,CAI9BI,MAJ8B;AAAA,MAK9BC,KAL8B,GAO5BL,KAP4B,CAK9BK,KAL8B;AAAA,MAM9BqD,mBAN8B,GAO5B1D,KAP4B,CAM9B0D,mBAN8B;AAQhC,MAAMxC,KAAK,GAAGf,OAAO,CAACgB,IAAtB;;AARgC,kBASET,cAAQ,CAAC,KAAD,CATV;AAAA;AAAA,MASzBiD,SATyB;AAAA,MASdC,YATc;;AAAA,oBAUV7C,gBAAU,CAACC,uCAAD,CAVA;AAAA,MAUxBC,SAVwB,eAUxBA,SAVwB;;AAYhC,SACEG;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACc,uBAAD;AACE,IAAA,OAAO,EAAE/B,OADX;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,KAAK,EAAEC;AAHT,IADF,CADF,EAQEe,6BAACsB,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACkB,UADxB;AAEE,IAAA,KAAK,EAAEhB,mBAAW,CAACiB,cAFrB;AAGE,IAAA,SAAS,EAAC;AAHZ,KAKG5C,KALH,CARF,EAeEE,6BAACoB,kBAAD;AACE,IAAA,QAAQ,EAAEiB,QADZ;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIA,QAAJ,EAAc;AAAE;AAAS;;AACzBG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KANH;AAOE,IAAA,YAAY;AAPd,KASExC,6BAACsB,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACC,QADxB;AAEE,IAAA,KAAK,EAAEa,QAAQ,GAAGZ,mBAAW,CAACkB,cAAf,GAAgClB,mBAAW,CAACjB;AAF7D,KAIGX,SAAS,CAAC+C,8BAJb,CATF,CAfF,EAgCIL,SAAS,IACPvC,6BAAC6C,WAAD;AACE,IAAA,QAAQ,EAAE;AAAA,aAAML,YAAY,CAAC,KAAD,CAAlB;AAAA,KADZ;AAEE,IAAA,QAAQ,EAAEF,mBAFZ;AAGE,IAAA,OAAO,EAAEvD,OAHX;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,KAAK,EAAEC;AALT,IAjCN,CADF,CADF;AA+CD,CA3DD;;AA6DAmD,cAAc,CAACN,SAAf,GAA2B;AACzB/C,EAAAA,OAAO,EAAEgD,SAAS,CAACG,KAAV,CAAgB;AACvBnC,IAAAA,IAAI,EAAEgC,SAAS,CAACI;AADO,GAAhB,EAENF,UAHsB;AAIzBjD,EAAAA,MAAM,EAAE+C,SAAS,CAACI,MAAV,CAAiBF,UAJA;AAKzBhD,EAAAA,KAAK,EAAE8C,SAAS,CAACI,MALQ;AAMzBE,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IANK;AAOzBR,EAAAA,mBAAmB,EAAEP,SAAS,CAACC;AAPN,CAA3B;AAUAI,cAAc,CAACW,YAAf,GAA8B;AAC5B9D,EAAAA,KAAK,EAAE,OADqB;AAE5BoD,EAAAA,QAAQ,EAAE,KAFkB;AAG5BC,EAAAA,mBAAmB,EAAE,+BAAM;AAHC,CAA9B;;SC7DwBU,aAAaC;MACnCC,SAAS;MACTnE,OAAO;MACPoE,WAAW;;AAEL,MAAAC,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAgCjE,cAAQ,CAAC,IAAD,CAAxC;AAAA,MAACkE,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AAENC,EAAAA,eAAS,CAAC;AACR,QAAMC,eAAe,GAAG5E,OAAO,CAAC6E,qBAAR,EAAxB;AACAD,IAAAA,eAAe,CAACE,KAAhB,GAAwB,EAAxB;AACAF,IAAAA,eAAe,CAACG,IAAhB,CAAqB,UAACT,OAAD,EAAUU,KAAV;AACnB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALD;AAMAI,IAAAA,cAAc,CAACE,eAAD,CAAd;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE3D,0CACEA,6BAACC,aAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAE;AAAM,aAAAiD,SAAS,EAAT;AAAW,KAF7B;AAGE,IAAA,QAAQ,EAAEc,UAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,KAMEhE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKT,WAAW,QAAvB;AACR,UAAMtC,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBV,QAAAA,WAAW,CAACM,IAAZ,CAAiB,UAACQ,CAAD,EAAIP,KAAJ;AACf,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,UAAAA,UAAU,oCACLD,SACAiB,EAFK,CAAV;AAID,SARD;AASD;AACF;AApBH,KAsBIjB,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACxBxE,6BAACyE,oBAAD;AACE,MAAA,IAAI,EAAED,MADR;AAEE,MAAA,GAAG,EAAEA,MAAM,CAACxF,MAFd;AAGE,MAAA,WAAW,EAAEmE,WAHf;AAIE,MAAA,MAAM,EAAE,gBAACF,EAAD;YAAGyB,SAAS;YAAEC,SAAS;AAAO,eACpC3E,4DACGjB,OAAO,CAAC6F,MAAR,KAAmB,UAAnB,IACC5E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACP,oBAAKf,MAAM,CAACgB,IAAP,KAAgB,UAArB,EAAkC;AAChCzG,kBAAAA,OAAO,CAAC0G,YAAR,CAAqB,CAACjB,MAAM,CAACxF,MAAR,CAArB,EAAsC;AACpCsE,oBAAAA,UAAU,CAACD,OAAO,CAACkB,GAAR,CAAY,UAAAmB,CAAA;AACrB,0BAAGA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAAvB,EAA+B;AAC7B,6FACKwF;AACHgB,0BAAAA,IAAI,EAAE;0BAFR;AAID;;AACD,6BAAOE,CAAP;AACD,qBARU,CAAD,CAAV;AASAL,oBAAAA,aAAa;AACd,mBAXD;AAYD,iBAbD,MAaO;AACLtG,kBAAAA,OAAO,CAAC4G,eAAR,CAAwB,CAACnB,MAAM,CAACxF,MAAR,CAAxB,EAAyC;AACvCsE,oBAAAA,UAAU,CAACD,OAAO,CAACkB,GAAR,CAAY,UAAAmB,CAAA;AACrB,0BAAGA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAAvB,EAA+B;AAC7B,6FACKwF;AACHgB,0BAAAA,IAAI,EAAE;0BAFR;AAID;;AACD,6BAAOE,CAAP;AACD,qBARU,CAAD,CAAV;AASAL,oBAAAA,aAAa;AACd,mBAXD;AAYD;AACF;AA7BH,eA+BIb,MAAM,CAACgB,IAAP,KAAgB,UAAhB,GAA6B,qBAA7B,GAAqD,iBA/BzD,CANF;AAyCI,aAACzG,OAAO,CAAC6G,WAAT,IACE5F,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACP,oBAAIf,MAAM,CAACqB,OAAX,EAAoB;AAClB9G,kBAAAA,OAAO,CAAC+G,UAAR,CAAmBtB,MAAnB,EAA2B;AACzBlB,oBAAAA,UAAU,CAACD,OAAO,CAACkB,GAAR,CAAY,UAAAmB,CAAA;AACrB,0BAAGA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAAvB,EAA+B;AAC7B,6FACKwF;AACHqB,0BAAAA,OAAO,EAAE;0BAFX;AAID;;AACD,6BAAOH,CAAP;AACD,qBARU,CAAD,CAAV;AASAL,oBAAAA,aAAa;AACd,mBAXD;AAYD,iBAbD,MAaO;AACLtG,kBAAAA,OAAO,CAACgH,QAAR,CAAiBvB,MAAjB,EAAyB;AACvBlB,oBAAAA,UAAU,CAACD,OAAO,CAACkB,GAAR,CAAY,UAAAmB,CAAA;AACrB,0BAAGA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAAvB,EAA+B;AAC7B,6FACKwF;AACHqB,0BAAAA,OAAO,EAAE;0BAFX;AAID;;AACD,6BAAOH,CAAP;AACD,qBARU,CAAD,CAAV;AASAL,oBAAAA,aAAa;AACd,mBAXD;AAYD;AACF;AA7BH,eA+BIb,MAAM,CAACqB,OAAP,GAAiB,QAAjB,GAA4B,MA/BhC,CA1CN,EA6EE7F,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAACiH,OAAR,CAAgBxB,MAAhB,EAAwB,CAAC,CAAzB,EAA4B,EAA5B,EAAgC;AAC9BlB,kBAAAA,UAAU,CAACD,OAAO,CAAC4C,MAAR,CAAe,UAAChD,EAAD;wBAAGjE,MAAM;AACjC,2BAAOA,MAAM,KAAKwF,MAAM,CAACxF,MAAzB;AACD,mBAFU,CAAD,CAAV;AAGD,iBAJD;AAKD;AAPH,qBA7EF,CAD4B;AA0F7B;AA1GH,UAFJ,CADoC;AAiHrC;AArHH,MADwB;AAwHzB,GAxHC,CAtBJ,CANF,CADF,CADF;AA2JD;;AChLD,IAAMkH,gBAAgB,GAAG,EAAzB;;AAEA,IAAMzB,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA,yBAApCD,MAAoC;AAAA,MAApCA,MAAoC,4BAA3B,EAA2B;AAAA,8BAAvBrB,WAAuB;AAAA,MAAvBA,WAAuB,iCAAT,EAAS;AAC1D,MAAMgD,SAAS,GAAGhH,YAAM,CAAC,IAAD,CAAxB;;AAD0D,oBAKtDQ,gBAAU,CAACyG,0BAAD,CAL4C;AAAA,MAGxDC,kBAHwD,eAGxDA,kBAHwD;AAAA,MAIxDC,iBAJwD,eAIxDA,iBAJwD;;AAAA,qBAMpC3G,gBAAU,CAACC,uCAAD,CAN0B;AAAA,MAMlDC,SANkD,gBAMlDA,SANkD;;AAO1D,SACEG;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC6E,mBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAA,aACX9E,6BAACa,cAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACwF,kBAAL,EAAyB;AACvBvB,YAAAA,cAAc;AACf;AACF,SALH;AAME,QAAA,GAAG,EAAEqB,SANP;AAOE,QAAA,GAAG,EAAE3B,MAAM,CAAC+B,UAPd;AAQE,QAAA,KAAK,EAAE,EART;AASE,QAAA,MAAM,EAAE;AATV,QADW;AAAA,KADf;AAcE,IAAA,SAAS,EAAE,mBAAClB,aAAD;AAAA,aACTrF,6BAACsF,iBAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,EAAEa,SAFb;AAAA;AAIE,QAAA,gBAAgB,EAAEA,SAJpB;AAAA;AAME,QAAA,aAAa,EAAEd,aANjB;AAOE,QAAA,KAAK,EAAE;AAAEmB,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AAPT,SAUIH,iBAAiB,GACbA,iBAAiB,CAAC;AAClBI,QAAAA,IAAI,EAAElC,MADY;AAElBmC,QAAAA,aAAa,EAAExD,WAFG;AAGlByD,QAAAA,KAAK,EAAEvB;AAHW,OAAD,CADJ,GAObrF,6BAAC6G,mBAAD;AACE,QAAA,IAAI,EAAErC,MADR;AAEE,QAAA,aAAa,EAAErB,WAFjB;AAGE,QAAA,SAAS,EAAEkC;AAHb,QAjBR,CADS;AAAA;AAdb,IADF,CADF,EA6CErF,6BAACsB,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACkB,UAA7B;AAAyC,IAAA,KAAK,EAAEhB,mBAAW,CAACiB;AAA5D,KACG8B,MAAM,CAACsC,QAAP,IAAmBjH,SAAS,CAACkH,OADhC,EAGK5D,WAAW,KAAKqB,MAAM,CAACxF,MAAxB,IACEa,SAAS,CAACmH,GAJhB,CA7CF,CADF;AAwDD,CA/DD;;AAiEAvC,YAAY,CAAC3C,SAAb,GAAyB;AACvB0C,EAAAA,MAAM,EAAEzC,SAAS,CAACG,KAAV,CAAgB;AACtBlD,IAAAA,MAAM,EAAE+C,SAAS,CAACI,MADI;AAEtBoE,IAAAA,UAAU,EAAExE,SAAS,CAACI,MAFA;AAGtB2E,IAAAA,QAAQ,EAAE/E,SAAS,CAACI;AAHE,GAAhB,EAILF,UALoB;AAMvBkB,EAAAA,WAAW,EAAEpB,SAAS,CAACI,MAAV,CAAiBF;AANP,CAAzB;;AASA,IAAMgF,iBAAiB,GAAG,SAApBA,iBAAoB,QAOpB;AAAA,MANJlI,OAMI,SANJA,OAMI;AAAA,MALJsD,QAKI,SALJA,QAKI;AAAA,MAJJc,WAII,SAJJA,WAII;AAAA,MAHJ+D,gBAGI,SAHJA,gBAGI;AAAA,MAFJC,gBAEI,SAFJA,gBAEI;AAAA,MADJC,UACI,SADJA,UACI;AACJ,MAAM/D,OAAO,GAAGtE,OAAO,CAACsE,OAAR,IAAmB,EAAnC;;AADI,kBAEsC/D,cAAQ,CAAC,KAAD,CAF9C;AAAA;AAAA,MAEG+H,aAFH;AAAA,MAEkBC,gBAFlB;;AAAA,mBAG4ChI,cAAQ,CAAC,KAAD,CAHpD;AAAA;AAAA,MAGGiI,gBAHH;AAAA,MAGqBC,mBAHrB;;AAAA,qBAIkB7H,gBAAU,CAACC,uCAAD,CAJ5B;AAAA,MAIIC,SAJJ,gBAIIA,SAJJ;;AAKJ,SACEG;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEIqD,OAAO,CAACoE,KAAR,CAAc,CAAd,EAAiBvB,gBAAjB,EAAmC3B,GAAnC,CAAuC,UAACC,MAAD;AAAA,WACrCxE,6BAAC,YAAD;AACE,MAAA,MAAM,EAAEwE,MADV;AAEE,MAAA,WAAW,EAAErB,WAFf;AAGE,MAAA,GAAG,EAAEqB,MAAM,CAACxF;AAHd,MADqC;AAAA,GAAvC,CAFJ,CADF,EAYEgB;AAAK,IAAA,SAAS,EAAC;AAAf,KAEIqD,OAAO,CAACqE,MAAR,IAAkBxB,gBAAlB,IACElG,6BAAC2H,cAAD;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,SAFpB;AAGE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAHpB;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMT,gBAAgB,CAAC,IAAD,CAAtB;AAAA;AAJX,KAMGzH,SAAS,CAACmI,yCANb,CAHN,EAcI3E,OAAO,CAACqE,MAAR,IAAkBxB,gBAAlB,IAAsCmB,aAAtC,IACErH,6BAAC,YAAD;AACE,IAAA,WAAW,EAAEmD,WADf;AAEE,IAAA,SAAS,EAAE,qBAAM;AACfmE,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAJH;AAKE,IAAA,OAAO,EAAEvI;AALX,IAfN,EAwBEiB,6BAAC2H,cAAD;AACE,IAAA,SAAS,EAAC,kDADZ;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,SAFpB;AAGE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAHpB;AAIE,IAAA,QAAQ,EAAE1F,QAJZ;AAKE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIA,QAAJ,EAAc;AAAE;AAAS;;AACzBmF,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AARH,KAUG3H,SAAS,CAACoI,uCAVb,CAxBF,EAqCIV,gBAAgB,IACdvH,6BAACkI,0BAAD;AACE,IAAA,UAAU,EAAEd,UADd;AAEE,IAAA,SAAS,EAAEvH,SAAS,CAACsI,2BAFvB;AAGE,IAAA,UAAU,EAAEtI,SAAS,CAACuI,cAHxB;AAIE,IAAA,UAAU,EAAE;AAAA,aAAMZ,mBAAmB,CAAC,KAAD,CAAzB;AAAA,KAJd;AAKE,IAAA,WAAW,EAAEnE,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAA,aAAaA,MAAM,CAACxF,MAApB;AAAA,KAAZ,CALf;AAME,IAAA,gBAAgB,EAAEkI,gBANpB;AAOE,IAAA,QAAQ,EAAEC;AAPZ,IAtCN,CAZF,CADF;AAiED,CA7ED;;AA+EAF,iBAAiB,CAACnF,SAAlB,GAA8B;AAC5BsF,EAAAA,UAAU,EAAErF,SAAS,CAACe,IADM;AAE5BT,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAFQ;AAG5B/D,EAAAA,OAAO,EAAEgD,SAAS,CAACG,KAAV,CAAgB;AACvBmB,IAAAA,OAAO,EAAEtB,SAAS,CAACsG,OAAV,CAAkBtG,SAAS,CAACG,KAAV,CAAgB,EAAhB,CAAlB;AADc,GAAhB,CAHmB;AAM5BiB,EAAAA,WAAW,EAAEpB,SAAS,CAACI,MANK;AAO5B+E,EAAAA,gBAAgB,EAAEnF,SAAS,CAACC,IAAV,CAAeC,UAPL;AAQ5BkF,EAAAA,gBAAgB,EAAEpF,SAAS,CAACC,IAAV,CAAeC;AARL,CAA9B;AAWAgF,iBAAiB,CAAClE,YAAlB,GAAiC;AAC/BqE,EAAAA,UAAU,EAAE,KADmB;AAE/BjE,EAAAA,WAAW,EAAE,EAFkB;AAG/Bd,EAAAA,QAAQ,EAAE,KAHqB;AAI/BtD,EAAAA,OAAO,EAAE;AAJsB,CAAjC;;ACzLA;AAeA,IAAMuJ,cAAc,GAAG,gCAAvB;;AAmBA,IAAM7D,cAAY,GAAG,SAAfA,YAAe,CAACxB,EAAD;MACnByD,IAAI;MACJ6B,SAAS;MACTpF,WAAW;MACXqF,MAAM;AAEN,MAAM7D,SAAS,GAAGxF,YAAM,CAAC,IAAD,CAAxB;AACA,MAAMuF,SAAS,GAAGvF,YAAM,CAAC,IAAD,CAAxB;AACA,MAAMgH,SAAS,GAAGhH,YAAM,CAAC,IAAD,CAAxB;AACQ,MAAAU,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;;AACF,MAAAwD,KAGFzD,gBAAU,CAACyG,0BAAD,CAHR;AAAA,MACJC,kBAAkB,wBADd;AAAA,MAEJC,iBAAiB,uBAFb;;AAIN,MAAMmC,mBAAmB,GAAGC,KAAK,CAACC,OAAN,CAAcJ,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAnE;AACA,SACEvI;AACE,IAAA,GAAG,EAAE0E,SADP;AAEE,IAAA,SAAS,EAAEkE,oCACTN,iBAAmBG,oBADV,CAETI,IAFS,CAEJ,GAFI;AAFb,KAOInC,IAAI,CAACb,OAAL,IACE7F,6BAAC8I,0BAAD,OARN,EAWE9I,6BAAC6E,mBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,aAC/B9E,6BAACa,cAAD;AACE,QAAA,OAAO,EAAE;AACP,cAAI,CAACwF,kBAAL,EAAyB;AACvBvB,YAAAA,cAAc;AACf;AACF,SALH;AAME,QAAA,GAAG,EAAEqB,SANP;AAOE,QAAA,SAAS,EAAKmC,cAAc,aAP9B;AAQE,QAAA,GAAG,EAAE5B,IAAI,CAACH,UARZ;AASE,QAAA,KAAK,EAAE,EATT;AAUE,QAAA,MAAM,EAAE;AAVV,QAD+B;AAahC,KAdH;AAeE,IAAA,SAAS,EAAE,mBAAClB,aAAD;AAAmB,aAC5BrF,6BAACsF,iBAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,EAAEa,SAFb;AAAA;AAIE,QAAA,gBAAgB,EAAEA,SAJpB;AAAA;AAME,QAAA,aAAa,EAAEd,aANjB;AAOE,QAAA,KAAK,EAAE;AAAEmB,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AAPT,SAUIH,iBAAiB,GACbA,iBAAiB,CAAC;AAClBI,QAAAA,IAAI,MADc;AAElBC,QAAAA,aAAa,EAAExD,WAFG;AAGlByD,QAAAA,KAAK,EAAEvB;AAHW,OAAD,CADJ,GAObrF,6BAAC6G,mBAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,aAAa,EAAEvD,WAFjB;AAGE,QAAA,SAAS,EAAEkC;AAHb,QAjBR,CAD4B;AA0B7B;AAzCH,IAXF,EAsDErF,6BAACsB,aAAD;AACE,IAAA,SAAS,EAAKgH,cAAc,YAD9B;AAEE,IAAA,IAAI,EAAE/G,uBAAe,CAACwH,UAFxB;AAGE,IAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAHrB,KAKGgE,IAAI,CAACI,QAAL,IAAiBjH,SAAS,CAACkH,OAL9B,EAOK5D,WAAW,KAAKuD,IAAI,CAAC1H,MAAtB,IACE,QARN,CAtDF,EAmEI,CAAC0H,IAAI,CAACI,QAAN,IACE9G,6BAACsB,aAAD;AACE,IAAA,SAAS,EAAKgH,cAAc,eAD9B;AAEE,IAAA,IAAI,EAAE/G,uBAAe,CAACyH,SAFxB;AAGE,IAAA,KAAK,EAAEvH,mBAAW,CAACkB;AAHrB,KAKG+D,IAAI,CAAC1H,MALR,CApEN,EA8EI0H,IAAI,CAAClB,IAAL,KAAc,UAAd,IACExF,6BAACsB,aAAD;AACE,IAAA,SAAS,EAAKgH,cAAc,eAD9B;AAEE,IAAA,IAAI,EAAE/G,uBAAe,CAACkB,UAFxB;AAGE,IAAA,KAAK,EAAEhB,mBAAW,CAACkB;AAHrB,gBA/EN,EAyFI6F,MAAM,IACJxI;AAAK,IAAA,GAAG,EAAE2E,SAAV;AAAqB,IAAA,SAAS,EAAK2D,cAAc;AAAjD,KACIE,MAAM,CAAC;AAAE7D,IAAAA,SAAS,WAAX;AAAaD,IAAAA,SAAS;AAAtB,GAAD,CADV,CA1FN,CADF;AAkGD,CAjHD;;SCZwBuE,eAAehG;MACrCC,SAAS;MACTnE,OAAO;MACPoE,WAAW;;AAEL,MAAAC,KAA4B9D,cAAQ,CAAC,EAAD,CAApC;AAAA,MAAC4J,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AACA,MAAA5F,KAAoCjE,cAAQ,CAAC,IAAD,CAA5C;AAAA,MAAC8J,aAAa,QAAd;AAAA,MAAgBC,gBAAgB,QAAhC;;AAEN3F,EAAAA,eAAS,CAAC;AACR,QAAM4F,iBAAiB,GAAGvK,OAAO,CAACwK,uBAAR,EAA1B;AACAD,IAAAA,iBAAiB,CAACzF,KAAlB,GAA0B,EAA1B;AACAyF,IAAAA,iBAAiB,CAACxF,IAAlB,CAAuB,UAACoF,SAAD,EAAYnF,KAAZ;AACrB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KALD;AAMAG,IAAAA,gBAAgB,CAACC,iBAAD,CAAhB;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACEtJ,0CACEA,6BAACC,aAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAE;AAAM,aAAAiD,SAAS,EAAT;AAAW,KAF7B;AAGE,IAAA,QAAQ,EAAEc,UAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,KAMEhE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKmF,aAAa,QAAzB;AACR,UAAMlI,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBkF,QAAAA,aAAa,CAACtF,IAAd,CAAmB,UAACQ,CAAD,EAAIP,KAAJ;AACjB,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,UAAAA,YAAY,oCACPD,WACA5E,EAFO,CAAZ;AAID,SARD;AASD;AACF;AApBH,KAsBI4E,SAAS,CAAC3E,GAAV,CAAc,UAACC,MAAD;AAAY,WAC1BxE,6BAACyE,oBAAD;AACE,MAAA,WAAW,EAAEtB,WADf;AAEE,MAAA,IAAI,EAAEqB,MAFR;AAGE,MAAA,GAAG,EAAEA,MAAM,CAACxF,MAHd;AAIE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAGyB,SAAS;YAAEC,SAAS;AAAO,eACpC3E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAAC4G,eAAR,CAAwB,CAACnB,MAAM,CAACxF,MAAR,CAAxB,EAAyC,UAACwK,QAAD,EAAWzF,KAAX;AACvC,sBAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,kBAAAA,YAAY,CAACD,SAAS,CAACjD,MAAV,CAAiB,UAAChD,EAAD;wBAAGjE,MAAM;AACrC,2BAAOA,MAAM,KAAKwF,MAAM,CAACxF,MAAzB;AACD,mBAFY,CAAD,CAAZ;AAGD,iBAPD;AAQAqG,gBAAAA,aAAa;AACd;AAXH,kCANF,CAD4B;AAuB7B;AAvCH,UADoC;AA0CrC;AA9CH,MAD0B;AAiD3B,GAjDC,CAtBJ,CANF,CADF,CADF;AAoFD;;SCpGuBoE,kBAAkBxG;MACxCC,SAAS;MACTnE,OAAO;MACPF,SAAQ;;AAEF,MAAAuE,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwCjE,cAAQ,CAAC,EAAD,CAAhD;AAAA,MAACoK,eAAe,QAAhB;AAAA,MAAkBC,kBAAkB,QAApC;;AACA,MAAAC,KAAgCtK,cAAQ,CAAC,IAAD,CAAxC;AAAA,MAACkE,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AACE,MAAA5D,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;AAER8D,EAAAA,eAAS,CAAC;AACR,QAAMC,eAAe,GAAG5E,OAAO,CAAC6E,qBAAR,EAAxB;AACAD,IAAAA,eAAe,CAACE,KAAhB,GAAwB,EAAxB;AACAF,IAAAA,eAAe,CAACG,IAAhB,CAAqB,UAACT,OAAD,EAAUU,KAAV;AACnB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALD;AAMAI,IAAAA,cAAc,CAACE,eAAD,CAAd;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAMkG,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BzD,MAA7B,CAAoC,UAACP,CAAD;AAAO,WAAAgE,eAAe,CAAChE,CAAD,CAAf;AAAkB,GAA7D,EAA+DgC,MAArF;AACA,SACE1H,0CACEA,6BAACC,aAAD;AACE,IAAA,IAAI,EAAEM,YAAU,CAACC,OADnB;AAEE,IAAA,UAAU,EAAC,KAFb;AAGE,IAAA,QAAQ,EAAE;AAAM,aAAA0C,SAAS,EAAT;AAAW,KAH7B;AAIE,IAAA,QAAQ,EAAE;AACR,UAAMG,OAAO,GAAGyG,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BzD,MAA7B,CAAoC,UAACP,CAAD;AAAO,eAAAgE,eAAe,CAAChE,CAAD,CAAf;AAAkB,OAA7D,CAAhB;;AACA7G,MAAAA,SAAQ,CAACwE,OAAD,CAAR;AACD,KAPH;AAQE,IAAA,SAAS,EAAC;AARZ,KAUErD,6BAACsB,aAAD;AACE,IAAA,KAAK,EAAGuI,aAAa,GAAG,CAAjB,GAAsBpI,mBAAW,CAACjB,OAAlC,GAA4CiB,mBAAW,CAACuI,cADjE;AAEE,IAAA,IAAI,EAAEzI,uBAAe,CAAC0I;AAFxB,KAIMJ,aAAa,MAAb,GAAiBhK,SAAS,CAACqK,8BAJjC,CAVF,EAgBElK;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKT,WAAW,QAAvB;AACR,UAAMtC,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBV,QAAAA,WAAW,CAACM,IAAZ,CAAiB,UAACQ,CAAD,EAAIP,KAAJ;AACf,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,UAAAA,UAAU,oCACLD,SACAiB,EAFK,CAAV;AAID,SARD;AASD;AACF;AApBH,KAsBIjB,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACxBxE,6BAACyE,oBAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAEiF,eAAe,CAAClF,MAAM,CAACxF,MAAR,CAF1B;AAGE,MAAA,QAAQ,EACN,kBAACmL,KAAD;;;AACE,YAAMC,uBAAuB,iEACxBV,+BACFS,KAAK,CAACjJ,MAAN,CAAamJ,MAAKF,KAAK,CAACjJ,MAAN,CAAaoJ,aAFlC;;AAIA,YAAI,CAACH,KAAK,CAACjJ,MAAN,CAAaoJ,OAAlB,EAA2B;AACzB,iBAAOF,uBAAuB,CAACD,KAAK,CAACjJ,MAAN,CAAamJ,EAAd,CAA9B;AACD;;AACDV,QAAAA,kBAAkB,CAACS,uBAAD,CAAlB;AACD,OAbL;AAeE,MAAA,IAAI,EAAE5F,MAfR;AAgBE,MAAA,GAAG,EAAEA,MAAM,CAACxF;AAhBd,MADwB;AAmBzB,GAnBC,CAtBJ,CAhBF,CADF,CADF;AAgED;;ACjFM,IAAMuL,YAAY,GAAG,SAAfA,YAAe,CAACtH,EAAD;MAAGuH,GAAG;MAAEzL,OAAO;;AACnC,MAAAqE,KAA4B9D,cAAQ,CAAC,EAAD,CAApC;AAAA,MAAC4J,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AACA,MAAA5F,KAA0BjE,cAAQ,CAAC,KAAD,CAAlC;AAAA,MAACmL,QAAQ,QAAT;AAAA,MAAWC,WAAW,QAAtB;;AACA,MAAAd,KAAwBtK,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAACqL,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwBvL,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAAC2E,OAAO,QAAR;AAAA,MAAU6G,UAAU,QAApB;;AACE,MAAAjL,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;AAER8D,EAAAA,eAAS,CAAC;AACR,QAAI,CAAC3E,OAAL,EAAc;AACZoK,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AACD;;AAED,QAAMG,iBAAiB,GAAGvK,OAAO,CAACwK,uBAAR,EAA1B;AACAD,IAAAA,iBAAiB,CAACzF,KAAlB,GAA0B,EAA1B;AACAyF,IAAAA,iBAAiB,CAACxF,IAAlB,CAAuB,UAACoF,SAAD,EAAYnF,KAAZ;AACrB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACA4B,MAAAA,UAAU,CAACxB,iBAAiB,CAACrF,OAAnB,CAAV;AACD,KAND;AAOD,GAfQ,EAeN,CAAClF,OAAD,CAfM,CAAT;AAiBA,MAAMgM,WAAW,GAAGC,iBAAW,CAC7B;AACE,QAAI,CAACjM,OAAL,EAAc;AACZoK,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AACD;;AACD,QAAMG,iBAAiB,GAAGvK,OAAO,CAACwK,uBAAR,EAA1B;AACAD,IAAAA,iBAAiB,CAACzF,KAAlB,GAA0B,EAA1B;AACAyF,IAAAA,iBAAiB,CAACxF,IAAlB,CAAuB,UAACoF,SAAD,EAAYnF,KAAZ;AACrB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACA4B,MAAAA,UAAU,CAACxB,iBAAiB,CAACrF,OAAnB,CAAV;AACD,KAND;AAOD,GAf4B,EAgB7B,CAAClF,OAAD,CAhB6B,CAA/B;AAmBA,SACEiB,4DAEIkJ,SAAS,CAAC3E,GAAV,CAAc,UAAC0G,QAAD;AAAc,WAC1BjL,6BAACyE,cAAD;AACE,MAAA,GAAG,EAAEwG,QAAQ,CAACjM,MADhB;AAEE,MAAA,IAAI,EAAEiM,QAFR;AAGE,MAAA,WAAW,EAAET,GAAG,CAACrH,WAAJ,CAAgBnE,MAH/B;AAIE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAG0B,SAAS;YAAED,SAAS;AAC7B,eACE1E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAAC4G,eAAR,CAAwB,CAACsF,QAAQ,CAACjM,MAAV,CAAxB,EAA2C,UAACwK,QAAD,EAAWzF,KAAX;AACzC,sBAAIA,KAAJ,EAAW;AACT;AACD;;AACDoF,kBAAAA,YAAY,CAACD,SAAS,CAACjD,MAAV,CAAiB,UAAChD,EAAD;wBAAGjE,MAAM;AACrC,2BAAOA,MAAM,KAAKiM,QAAQ,CAACjM,MAA3B;AACD,mBAFY,CAAD,CAAZ;AAGD,iBAPD;AAQAqG,gBAAAA,aAAa;AACd;AAXH,kCANF,CAD4B;AAuB7B;AAvCH,UADF;AA2CD;AAhDH,MAD0B;AAmD3B,GAnDD,CAFJ,EAwDIpB,OAAO,IACLjE;AACE,IAAA,SAAS,EAAC;AADZ,KAGEA,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AACP2C,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AALH,KAOG7K,SAAS,CAACqL,qCAPb,CAHF,EAYElL,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AACP6C,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AALH,KAOG/K,SAAS,CAACsL,qCAPb,CAZF,CAzDN,EAkFIV,QAAQ,IACNzK,6BAAC,cAAD;AACE,IAAA,WAAW,EAAEwK,GAAG,CAACrH,WAAJ,CAAgBnE,MAD/B;AAEE,IAAA,SAAS,EAAE;AACT0L,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,MAAAA,WAAW;AACZ,KALH;AAME,IAAA,OAAO,EAAEhM;AANX,IAnFN,EA8FI4L,OAAO,IACL3K,6BAAC,iBAAD;AACE,IAAA,SAAS,EAAE;AAAM,aAAA4K,UAAU,CAAC,KAAD,CAAV;AAAiB,KADpC;AAEE,IAAA,OAAO,EAAE7L,OAFX;AAGE,IAAA,QAAQ,EAAE,kBAACsE,OAAD;AACRuH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA7L,MAAAA,OAAO,CAAC0G,YAAR,CAAqBpC,OAArB,EAA8B;AAC5B0H,QAAAA,WAAW;AACZ,OAFD;AAGD;AARH,IA/FN,CADF;AA8GD,CAzJM;;AA2JP,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAW,SAAC;AAClCb,IAAAA,GAAG,EAAEc,cAAM,CAACD,KAAD;AADuB,GAAD;AAEjC,CAFF;;AAIA,qBAAeE,uCAAmB,CAAChB,YAAD,EAAea,eAAf,CAAlC;;SC9KwBlD,cAAcjF;MACpCC,SAAS;MACTgE,gBAAgB;MAChBrI,SAAQ;;AAEF,MAAAuE,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwCjE,cAAQ,CAAC,EAAD,CAAhD;AAAA,MAACoK,eAAe,QAAhB;AAAA,MAAkBC,kBAAkB,QAApC;;AACA,MAAAC,KAA4BtK,cAAQ,CAAC,IAAD,CAApC;AAAA,MAACkM,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AAEN/H,EAAAA,eAAS,CAAC;AACR,QAAMgI,aAAa,GAAGxE,gBAAgB,EAAtC;AACAwE,IAAAA,aAAa,CAAC7H,KAAd,GAAsB,EAAtB;AACA6H,IAAAA,aAAa,CAAC5H,IAAd,CAAmB,UAACT,OAAD,EAAUU,KAAV;AACjB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALD;AAMAoI,IAAAA,YAAY,CAACC,aAAD,CAAZ;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE1L,0CACEA,6BAACC,aAAD;AACE,IAAA,QAAQ,EAAE6J,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BhC,MAA7B,KAAwC,CADpD;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,IAAI,EAAEnH,YAAU,CAACC,OAHnB;AAIE,IAAA,QAAQ,EAAE;AAAM,aAAA0C,SAAS,EAAT;AAAW,KAJ7B;AAKE,IAAA,QAAQ,EAAE;AACR,UAAMG,OAAO,GAAGyG,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BzD,MAA7B,CAAoC,UAACP,CAAD;AAAO,eAAAgE,eAAe,CAAChE,CAAD,CAAf;AAAkB,OAA7D,CAAhB;;AACA7G,MAAAA,SAAQ,CAACwE,OAAD,CAAR;AACD,KARH;AASE,IAAA,SAAS,EAAC;AATZ,KAWErD;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKuH,SAAS,QAArB;AACR,UAAMtK,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBsH,QAAAA,SAAS,CAAC1H,IAAV,CAAe,UAACQ,CAAD,EAAIP,KAAJ;AACb,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,UAAAA,UAAU,oCACLD,SACAiB,EAFK,CAAV;AAID,SARD;AASD;AACF;AApBH,KAsBIjB,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACxBxE,6BAACyE,oBAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAEiF,eAAe,CAAClF,MAAM,CAACxF,MAAR,CAF1B;AAGE,MAAA,QAAQ,EACN,kBAACmL,KAAD;;;AACE,YAAMC,uBAAuB,iEACxBV,+BACFS,KAAK,CAACjJ,MAAN,CAAamJ,MAAKF,KAAK,CAACjJ,MAAN,CAAaoJ,aAFlC;;AAIA,YAAI,CAACH,KAAK,CAACjJ,MAAN,CAAaoJ,OAAlB,EAA2B;AACzB,iBAAOF,uBAAuB,CAACD,KAAK,CAACjJ,MAAN,CAAamJ,EAAd,CAA9B;AACD;;AACDV,QAAAA,kBAAkB,CAACS,uBAAD,CAAlB;AACD,OAbL;AAeE,MAAA,IAAI,EAAE5F,MAfR;AAgBE,MAAA,GAAG,EAAEA,MAAM,CAACxF;AAhBd,MADwB;AAmBzB,GAnBC,CAtBJ,CAXF,CADF,CADF;AA2DD;;ACjEM,IAAM2M,UAAU,GAAG,SAAbA,UAAa,CAAC1I,EAAD;MAAGuH,GAAG;MAAEzL,OAAO;MAAEmI,gBAAgB;;AACnD,MAAA9D,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwBjE,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAAC2E,OAAO,QAAR;AAAA,MAAU6G,UAAU,QAApB;;AACA,MAAAlB,KAAsCtK,cAAQ,CAAC,KAAD,CAA9C;AAAA,MAACsM,cAAc,QAAf;AAAA,MAAiBC,iBAAiB,QAAlC;;AACA,MAAAhB,KAA4CvL,cAAQ,CAAC,KAAD,CAApD;AAAA,MAACwM,iBAAiB,QAAlB;AAAA,MAAoBC,oBAAoB,QAAxC;;AAENrI,EAAAA,eAAS,CAAC;AACR,QAAI,CAAC3E,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AAED,QAAM0I,mBAAmB,GAAGjN,OAAO,CAAC6E,qBAAR,EAA5B;AACAoI,IAAAA,mBAAmB,CAACnI,KAApB,GAA4B,EAA5B;AACAmI,IAAAA,mBAAmB,CAAClI,IAApB,CAAyB,UAACT,OAAD,EAAUU,KAAV;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAyH,MAAAA,UAAU,CAACkB,mBAAmB,CAAC/H,OAArB,CAAV;AACD,KAND;AAOD,GAfQ,EAeN,CAAClF,OAAD,CAfM,CAAT;AAiBA,MAAMgM,WAAW,GAAGC,iBAAW,CAC7B;AACE,QAAI,CAACjM,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AACD,QAAM0I,mBAAmB,GAAGjN,OAAO,CAAC6E,qBAAR,EAA5B;AACAoI,IAAAA,mBAAmB,CAACnI,KAApB,GAA4B,EAA5B;AACAmI,IAAAA,mBAAmB,CAAClI,IAApB,CAAyB,UAACT,OAAD,EAAUU,KAAV;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAyH,MAAAA,UAAU,CAACkB,mBAAmB,CAAC/H,OAArB,CAAV;AACD,KAND;AAOD,GAf4B,EAgB7B,CAAClF,OAAD,CAhB6B,CAA/B;AAmBA,SACEiB,4DAEIqD,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACtBxE,6BAACyE,cAAD;AACE,MAAA,GAAG,EAAED,MAAM,CAACxF,MADd;AAEE,MAAA,IAAI,EAAEwF,MAFR;AAGE,MAAA,WAAW,EAAEgG,GAAG,CAACrH,WAAJ,CAAgBnE,MAH/B;AAIE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAG0B,SAAS;YAAED,SAAS;AAC7B,eAAQ1E,6BAAC6E,mBAAD;AACN,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfK;AAgBN,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACP,oBAAKf,MAAM,CAACgB,IAAP,KAAgB,UAArB,EAAkC;AAChCzG,kBAAAA,OAAO,CAAC0G,YAAR,CAAqB,CAACjB,MAAM,CAACxF,MAAR,CAArB,EAAsC;AACpC+L,oBAAAA,WAAW;AACX1F,oBAAAA,aAAa;AACd,mBAHD;AAID,iBALD,MAKO;AACLtG,kBAAAA,OAAO,CAAC4G,eAAR,CAAwB,CAACnB,MAAM,CAACxF,MAAR,CAAxB,EAAyC;AACvC+L,oBAAAA,WAAW;AACX1F,oBAAAA,aAAa;AACd,mBAHD;AAID;AACF;AAbH,eAeIb,MAAM,CAACgB,IAAP,KAAgB,UAAhB,GAA6B,qBAA7B,GAAqD,iBAfzD,CANF;AAyBI,aAACzG,OAAO,CAAC6G,WAAT,IACE5F,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACP,oBAAIf,MAAM,CAACqB,OAAX,EAAoB;AAClB9G,kBAAAA,OAAO,CAAC+G,UAAR,CAAmBtB,MAAnB,EAA2B;AACzBuG,oBAAAA,WAAW;AACX1F,oBAAAA,aAAa;AACd,mBAHD;AAID,iBALD,MAKO;AACLtG,kBAAAA,OAAO,CAACgH,QAAR,CAAiBvB,MAAjB,EAAyB;AACvBuG,oBAAAA,WAAW;AACX1F,oBAAAA,aAAa;AACd,mBAHD;AAID;AACF;AAbH,eAeIb,MAAM,CAACqB,OAAP,GAAiB,QAAjB,GAA4B,MAfhC,CA1BN,EA6CE7F,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAACiH,OAAR,CAAgBxB,MAAhB,EAAwB,CAAC,CAAzB,EAA4B,EAA5B,EAAgC;AAC9BuG,kBAAAA,WAAW;AACX1F,kBAAAA,aAAa;AACd,iBAHD;AAID;AANH,qBA7CF,CAD4B;AAyD7B;AAzEK,UAAR;AA0EI;AA/ER,MADsB;AAmFvB,GAnFD,CAFJ,EAuFErF;AACE,IAAA,SAAS,EAAC;AADZ,KAIIiE,OAAO,IACLjE,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AAAM,aAAA8D,iBAAiB,CAAC,IAAD,CAAjB;AAAuB;AAHxC,mBALN,EAcE7L,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AAAM,aAAAgE,oBAAoB,CAAC,IAAD,CAApB;AAA0B;AAH3C,sBAdF,CAvFF,EA8GIH,cAAc,IACZ5L,6BAAC,YAAD;AACE,IAAA,WAAW,EAAEwK,GAAG,CAACrH,WAAJ,CAAgBnE,MAD/B;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,SAAS,EAAE;AACT8M,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAd,MAAAA,WAAW;AACZ;AANH,IA/GN,EA0HIe,iBAAiB,IACf9L,6BAAC,aAAD;AACE,IAAA,gBAAgB,EAAEkH,gBADpB;AAEE,IAAA,QAAQ,EAAE,kBAAC+E,gBAAD;AACRlN,MAAAA,OAAO,CAACmN,iBAAR,CAA0BD,gBAA1B,EAA4C;AAC1CF,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAhB,QAAAA,WAAW;AACZ,OAHD;AAID,KAPH;AAQE,IAAA,OAAO,EAAEhM,OARX;AASE,IAAA,SAAS,EAAE;AAAM,aAAAgN,oBAAoB,CAAC,KAAD,CAApB;AAA2B;AAT9C,IA3HN,CADF;AA2ID,CArLM;;AAuLP,IAAMX,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAW,SAAC;AAClCb,IAAAA,GAAG,EAAEc,cAAM,CAACD,KAAD;AADuB,GAAD;AAEjC,CAFF;;AAIA,mBAAeE,uCAAmB,CAACI,UAAD,EAAaP,iBAAb,CAAlC;;SCpMwBe,mBAAmBlJ;MACzCC,SAAS;MACTnE,OAAO;;AAED,MAAAqE,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAgCjE,cAAQ,CAAC,IAAD,CAAxC;AAAA,MAACkE,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AAENC,EAAAA,eAAS,CAAC;AACR,QAAM0I,mBAAmB,GAAGrN,OAAO,CAACsN,yBAAR,EAA5B;AACAD,IAAAA,mBAAmB,CAACtI,IAApB,CAAyB,UAACwI,KAAD,EAAQvI,KAAR;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACgJ,KAAD,CAAV;AACD,KALD;AAMA7I,IAAAA,cAAc,CAAC2I,mBAAD,CAAd;AACD,GATQ,EASN,EATM,CAAT;AAUA,SACEpM,0CACEA,6BAACC,aAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAE;AAAM,aAAAiD,SAAS,EAAT;AAAW,KAF7B;AAGE,IAAA,QAAQ,EAAEc,UAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,KAMEhE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKT,WAAW,QAAvB;AACR,UAAMtC,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBV,QAAAA,WAAW,CAACM,IAAZ,CAAiB,UAACQ,CAAD,EAAIP,KAAJ;AACf,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,UAAAA,UAAU,oCACLD,SACAiB,EAFK,CAAV;AAID,SARD;AASD;AACF;AApBH,KAsBIjB,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACxBxE,6BAACyE,oBAAD;AACE,MAAA,IAAI,EAAED,MADR;AAEE,MAAA,GAAG,EAAEA,MAAM,CAACxF,MAFd;AAGE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAGyB,SAAS;YAAEC,SAAS;AAAO,eACpC3E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAACwN,SAAR,CAAkB/H,MAAlB,EAA0B;AACxBa,kBAAAA,aAAa;AACb/B,kBAAAA,UAAU,CAACD,OAAO,CAAC4C,MAAR,CAAe,UAAAP,CAAA;AACxB,2BAAQA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAA5B;AACD,mBAFU,CAAD,CAAV;AAGD,iBALD;AAMD;AARH,uBANF,CAD4B;AAoB7B;AApCH,UADoC;AAuCrC;AA1CH,MADwB;AA8CzB,GA9CC,CAtBJ,CANF,CADF,CADF;AAiFD;;ACtFM,IAAMwN,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACvJ,EAAD;MAAGlE,OAAO;;AAClC,MAAAqE,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwBjE,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAAC2E,OAAO,QAAR;AAAA,MAAU6G,UAAU,QAApB;;AACA,MAAAlB,KAA4BtK,cAAQ,CAAC,KAAD,CAApC;AAAA,MAACiD,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AAENkB,EAAAA,eAAS,CAAC;AACR,QAAI,CAAC3E,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AAED,QAAM8I,mBAAmB,GAAGrN,OAAO,CAACsN,yBAAR,EAA5B;AACAD,IAAAA,mBAAmB,CAACtI,IAApB,CAAyB,UAACwI,KAAD,EAAQvI,KAAR;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACgJ,KAAD,CAAV;AACAxB,MAAAA,UAAU,CAACsB,mBAAmB,CAACnI,OAArB,CAAV;AACD,KAND;AAOD,GAdQ,EAcN,CAAClF,OAAD,CAdM,CAAT;AAgBA,MAAM0N,WAAW,GAAGzB,iBAAW,CAAC;AAC9B,QAAI,CAACjM,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AAED,QAAM8I,mBAAmB,GAAGrN,OAAO,CAACsN,yBAAR,EAA5B;AACAD,IAAAA,mBAAmB,CAACtI,IAApB,CAAyB,UAASwI,KAAT,EAAgBvI,KAAhB;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACgJ,KAAD,CAAV;AACAxB,MAAAA,UAAU,CAACsB,mBAAmB,CAACnI,OAArB,CAAV;AACD,KAND;AAOD,GAd8B,EAc5B,CAAClF,OAAD,CAd4B,CAA/B;AAeA,SACEiB,4DAEIqD,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACtBxE,6BAACyE,cAAD;AACE,MAAA,GAAG,EAAED,MAAM,CAACxF,MADd;AAEE,MAAA,IAAI,EAAEwF,MAFR;AAGE,MAAA,MAAM,EAAE,gBAACvB,EAAD;YAAG0B,SAAS;YAAED,SAAS;AAC7B,eACE1E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAACwN,SAAR,CAAkB/H,MAAlB,EAA0B;AACxBa,kBAAAA,aAAa;AACboH,kBAAAA,WAAW;AACZ,iBAHD;AAID;AANH,uBANF,CAD4B;AAkB7B;AAlCH,UADF;AAsCD;AA1CH,MADsB;AA6CvB,GA7CD,CAFJ,EAkDIpJ,OAAO,IAAIA,OAAO,CAACqE,MAAR,KAAmB,CAA9B,IACE1H,6BAACsB,aAAD;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACkB,UAFxB;AAGE,IAAA,KAAK,EAAEhB,mBAAW,CAACuI;AAHrB,6BAnDN,EA6DI/F,OAAO,IACLjE;AACE,IAAA,SAAS,EAAC;AADZ,KAGEA,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AACPvF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AALH,0BAHF,CA9DN,EA8EID,SAAS,IACPvC,6BAAC,kBAAD;AACE,IAAA,OAAO,EAAEjB,OADX;AAEE,IAAA,SAAS,EAAE;AACTyD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAiK,MAAAA,WAAW;AACZ;AALH,IA/EN,CADF;AA2FD,CA/HM;;AAiIP,IAAMrB,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAW,SAAC;AAClCb,IAAAA,GAAG,EAAEc,cAAM,CAACD,KAAD;AADuB,GAAD;AAEjC,CAFF;;AAIA,yBAAeE,uCAAmB,CAACiB,gBAAD,EAAmBpB,iBAAnB,CAAlC;;SChJwBsB,kBAAkBzJ;MACxCC,SAAS;MACTnE,OAAO;MACPoE,WAAW;;AAEL,MAAAC,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAgCjE,cAAQ,CAAC,IAAD,CAAxC;AAAA,MAACkE,WAAW,QAAZ;AAAA,MAAcC,cAAc,QAA5B;;AAENC,EAAAA,eAAS,CAAC;AACR,QAAMsI,mBAAmB,GAAGjN,OAAO,CAAC6E,qBAAR,EAA5B;AACAoI,IAAAA,mBAAmB,CAACnI,KAApB,GAA4B,EAA5B;AACAmI,IAAAA,mBAAmB,CAACW,iBAApB,GAAwC,OAAxC;AACAX,IAAAA,mBAAmB,CAAClI,IAApB,CAAyB,UAACT,OAAD,EAAUU,KAAV;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALD;AAMAI,IAAAA,cAAc,CAACuI,mBAAD,CAAd;AACD,GAXQ,EAWN,EAXM,CAAT;AAYA,SACEhM,0CACEA,6BAACC,aAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAE;AAAM,aAAAiD,SAAS,EAAT;AAAW,KAF7B;AAGE,IAAA,QAAQ,EAAEc,UAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,KAMEhE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AACA,UAAAwD,OAAO,GAAKT,WAAW,QAAvB;AACR,UAAMtC,MAAM,GAAGT,CAAC,CAACS,MAAjB;AACA,UAAMgD,SAAS,GACbhD,MAAM,CAACiD,YAAP,GAAsBjD,MAAM,CAACkD,SAA7B,KAA2ClD,MAAM,CAACmD,YADpD;;AAIA,UAAIJ,OAAO,IAAIC,SAAf,EAA0B;AACxBV,QAAAA,WAAW,CAACM,IAAZ,CAAiB,UAACQ,CAAD,EAAIP,KAAJ;AACf,cAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,UAAAA,UAAU,oCACLD,SACAiB,EAFK,CAAV;AAID,SARD;AASD;AACF;AApBH,KAsBIjB,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACxBxE,6BAACyE,oBAAD;AACE,MAAA,WAAW,EAAEtB,WADf;AAEE,MAAA,IAAI,EAAEqB,MAFR;AAGE,MAAA,GAAG,EAAEA,MAAM,CAACxF,MAHd;AAIE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAG0B,SAAS;YAAED,SAAS;AAAO,eACpC1E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,gBAAgB,EAAEZ,SADpB;AAEE,cAAA,SAAS,EAAEC,SAFb;AAAA;AAGE,cAAA,aAAa,EAAEU,aAHjB;AAIE,cAAA,QAAQ;AAJV,eAMErF,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAAC+G,UAAR,CAAmBtB,MAAnB,EAA2B;AACzBa,kBAAAA,aAAa;AACb/B,kBAAAA,UAAU,CAACD,OAAO,CAAC4C,MAAR,CAAe,UAAAP,CAAA;AACxB,2BAAQA,CAAC,CAAC1G,MAAF,KAAawF,MAAM,CAACxF,MAA5B;AACD,mBAFU,CAAD,CAAV;AAGD,iBALD;AAMD;AARH,wBANF,CAD4B;AAoB7B;AApCH,UADoC;AAuCrC;AA3CH,MADwB;AA8CzB,GA9CC,CAtBJ,CANF,CADF,CADF;AAiFD;;AC3FM,IAAM4N,eAAe,GAAG,SAAlBA,eAAkB,CAAC3J,EAAD;MAAGuH,GAAG;MAAEzL,OAAO;;AACtC,MAAAqE,KAAwB9D,cAAQ,CAAC,EAAD,CAAhC;AAAA,MAAC+D,OAAO,QAAR;AAAA,MAAUC,UAAU,QAApB;;AACA,MAAAC,KAAwBjE,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAAC2E,OAAO,QAAR;AAAA,MAAU6G,UAAU,QAApB;;AACA,MAAAlB,KAA4BtK,cAAQ,CAAC,KAAD,CAApC;AAAA,MAACiD,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AAENkB,EAAAA,eAAS,CAAC;AACR,QAAI,CAAC3E,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AAED,QAAM0I,mBAAmB,GAAGjN,OAAO,CAAC6E,qBAAR,EAA5B;AACAoI,IAAAA,mBAAmB,CAACnI,KAApB,GAA4B,EAA5B;AACAmI,IAAAA,mBAAmB,CAACW,iBAApB,GAAwC,OAAxC;AACAX,IAAAA,mBAAmB,CAAClI,IAApB,CAAyB,UAACT,OAAD,EAAUU,KAAV;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAyH,MAAAA,UAAU,CAACkB,mBAAmB,CAAC/H,OAArB,CAAV;AACD,KAND;AAOD,GAhBQ,EAgBN,CAAClF,OAAD,CAhBM,CAAT;AAkBA,MAAM0N,WAAW,GAAGzB,iBAAW,CAAC;AAC9B,QAAI,CAACjM,OAAL,EAAc;AACZuE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;;AAED,QAAM0I,mBAAmB,GAAGjN,OAAO,CAAC6E,qBAAR,EAA5B;AACAoI,IAAAA,mBAAmB,CAACnI,KAApB,GAA4B,EAA5B;AACAmI,IAAAA,mBAAmB,CAACW,iBAApB,GAAwC,OAAxC;AACAX,IAAAA,mBAAmB,CAAClI,IAApB,CAAyB,UAACT,OAAD,EAAUU,KAAV;AACvB,UAAIA,KAAJ,EAAW;AACT;AACD;;AACDT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAyH,MAAAA,UAAU,CAACkB,mBAAmB,CAAC/H,OAArB,CAAV;AACD,KAND;AAOD,GAhB8B,EAgB5B,CAAClF,OAAD,CAhB4B,CAA/B;AAiBA,SACEiB,4DAEIqD,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD;AAAY,WACtBxE,6BAACyE,cAAD;AACE,MAAA,GAAG,EAAED,MAAM,CAACxF,MADd;AAEE,MAAA,IAAI,EAAEwF,MAFR;AAGE,MAAA,WAAW,EAAEgG,GAAG,CAACrH,WAAJ,CAAgBnE,MAH/B;AAIE,MAAA,MAAM,EAAE,gBAACiE,EAAD;YAAG0B,SAAS;YAAED,SAAS;AAC7B,eACE1E,6BAAC6E,mBAAD;AACE,UAAA,WAAW,EAAE,qBAACC,cAAD;AAAoB,mBAC/B9E,6BAAC+E,kBAAD;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,OAAO,EAAED;AAJX,eAME9E,6BAACgF,YAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,IAAI,EAAEC,iBAAS,CAACC,IAHlB;AAIE,cAAA,SAAS,EAAEC,kBAAU,CAACC;AAJxB,cANF,CAD+B;AAchC,WAfH;AAgBE,UAAA,SAAS,EAAE,mBAACC,aAAD;AAAmB,mBAC5BrF,6BAACsF,iBAAD;AACE,cAAA,aAAa,EAAED,aADjB;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,gBAAgB,EAAEX,SAHpB;AAIE,cAAA,SAAS,EAAEC,SAJb;;AAAA,eAME3E,6BAACuF,gBAAD;AACE,cAAA,OAAO,EAAE;AACPxG,gBAAAA,OAAO,CAAC+G,UAAR,CAAmBtB,MAAnB,EAA2B;AACzBiI,kBAAAA,WAAW;AACXpH,kBAAAA,aAAa;AACd,iBAHD;AAID;AANH,wBANF,CAD4B;AAkB7B;AAlCH,UADF;AAsCD;AA3CH,MADsB;AA+CvB,GA/CD,CAFJ,EAoDIhC,OAAO,IAAIA,OAAO,CAACqE,MAAR,KAAmB,CAA9B,IACE1H,6BAACsB,aAAD;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,IAAI,EAAEC,uBAAe,CAACkB,UAFxB;AAGE,IAAA,KAAK,EAAEhB,mBAAW,CAACuI;AAHrB,4BArDN,EA+DI/F,OAAO,IACLjE;AACE,IAAA,SAAS,EAAC;AADZ,KAGEA,6BAAC2H,cAAD;AACE,IAAA,IAAI,EAAEC,YAAW,CAACC,SADpB;AAEE,IAAA,IAAI,EAAEC,YAAW,CAACC,KAFpB;AAGE,IAAA,OAAO,EAAE;AACPvF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AALH,yBAHF,CAhEN,EAgFID,SAAS,IACPvC,6BAAC,iBAAD;AACE,IAAA,WAAW,EAAEwK,GAAG,CAACrH,WAAJ,CAAgBnE,MAD/B;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,SAAS,EAAE;AACTyD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAiK,MAAAA,WAAW;AACZ;AANH,IAjFN,CADF;AA8FD,CAtIM;;AAwIP,IAAMrB,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAW,SAAC;AAClCb,IAAAA,GAAG,EAAEc,cAAM,CAACD,KAAD;AADuB,GAAD;AAEjC,CAFF;;AAIA,wBAAeE,uCAAmB,CAACqB,eAAD,EAAkBxB,iBAAlB,CAAlC;;ACpJA,IAAMyB,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;AACjB,SAAOC,IAAI,CAACC,GAAL,CAASF,GAAT,IAAgB,GAAhB,GACA,CAACC,IAAI,CAACC,GAAL,CAASF,GAAT,IAAc,IAAf,EAAqBG,OAArB,CAA6B,CAA7B,OADA,GAEHH,GAFJ;AAGD,CAJD;;AAWA,SAAwBI,MAAMjK;MAC5BiE,gBAAgB;MAChBnI,OAAO;;AAED,MAAAqE,KAAsB9D,cAAQ,CAAC,KAAD,CAA9B;AAAA,MAAC6N,MAAM,QAAP;AAAA,MAASC,SAAS,QAAlB;AAGN;AACA;;;AACA1J,EAAAA,eAAS,CAAC;AACR0J,IAAAA,SAAS,CAACrO,OAAO,CAACsO,QAAT,CAAT;AACD,GAFQ,EAEN,CAACtO,OAAD,CAFM,CAAT;AAGQ,MAAAc,SAAS,GAAKF,gBAAU,CAACC,uCAAD,CAAV,UAAd;AACR,SACEI,6BAACsN,sBAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,KACEtN,6BAACuN,iBAAD;AACE,IAAA,SAAS,EAAC,2CADZ;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,WAAW,EAAE;AAAM,aACjBvN,4DACEA,6BAACgF,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAACuI,aADlB;AAEE,QAAA,SAAS,EAAErI,kBAAU,CAAC3E,OAFxB;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,MAAM,EAAE,EAJV;AAKE,QAAA,SAAS,EAAC;AALZ,QADF,EAQER,6BAACsB,aAAD;AACE,QAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,QAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,SAIG7C,SAAS,CAAC4N,iCAJb,CARF,CADiB;AAgBlB,KAnBH;AAoBE,IAAA,aAAa,EAAE;AAAM,aACnBzN,4DACEA,6BAACuK,cAAD;AAAc,QAAA,OAAO,EAAExL;AAAvB,QADF,CADmB;AAIpB;AAxBH,IADF,EA2BEiB,6BAACuN,iBAAD;AACE,IAAA,SAAS,EAAC,yCADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,WAAW,EAAE;AAAM,aACjBvN,4DACEA,6BAACgF,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAACyI,OADlB;AAEE,QAAA,SAAS,EAAEvI,kBAAU,CAAC3E,OAFxB;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,MAAM,EAAE,EAJV;AAKE,QAAA,SAAS,EAAC;AALZ,QADF,EAQER,6BAACsB,aAAD;AACE,QAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,QAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,SAIG7C,SAAS,CAAC8N,+BAJb,CARF,EAcE3N,6BAAC4N,kBAAD;AAAO,QAAA,KAAK,EAAEf,UAAU,CAAC9N,OAAO,CAAC8O,WAAT;AAAxB,QAdF,CADiB;AAiBlB,KApBH;AAqBE,IAAA,aAAa,EAAE;AAAM,aACnB7N,4DACEA,6BAAC2L,YAAD;AAAY,QAAA,gBAAgB,EAAEzE,gBAA9B;AAAgD,QAAA,OAAO,EAAEnI;AAAzD,QADF,CADmB;AAIpB;AAzBH,IA3BF;AAwDI,GAACA,OAAO,CAAC6G,WAAT,IACE5F,6BAACuN,iBAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,SAAS,EAAC,+CAFZ;AAGE,IAAA,WAAW,EAAE;AAAM,aACjBvN,4DACEA,6BAACgF,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAAC6I,UADlB;AAEE,QAAA,SAAS,EAAE3I,kBAAU,CAAC3E,OAFxB;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,MAAM,EAAE,EAJV;AAKE,QAAA,SAAS,EAAC;AALZ,QADF,EAQER,6BAACsB,aAAD;AACE,QAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,QAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,SAIG7C,SAAS,CAACkO,qCAJb,CARF,CADiB;AAgBlB,KAnBH;AAoBE,IAAA,aAAa,EAAE;AAAM,aACnB/N,4DACEA,6BAAC4M,iBAAD;AAAiB,QAAA,OAAO,EAAE7N;AAA1B,QADF,CADmB;AAIpB;AAxBH,IAzDN,EAqFEiB,6BAACuN,iBAAD;AACE,IAAA,SAAS,EAAC,gDADZ;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,WAAW,EAAE;AAAM,aACjBvN,4DACEA,6BAACgF,YAAD;AACE,QAAA,IAAI,EAAEC,iBAAS,CAAC+I,WADlB;AAEE,QAAA,SAAS,EAAE7I,kBAAU,CAAC3E,OAFxB;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,MAAM,EAAE,EAJV;AAKE,QAAA,SAAS,EAAC;AALZ,QADF,EAQER,6BAACsB,aAAD;AACE,QAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,QAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,SAIG7C,SAAS,CAACoO,sCAJb,CARF,CADiB;AAgBlB,KAnBH;AAoBE,IAAA,aAAa,EAAE;AAAM,aACnBjO,4DACEA,6BAACwM,kBAAD;AAAkB,QAAA,OAAO,EAAEzN;AAA3B,QADF,CADmB;AAIpB;AAxBH,IArFF;AAiHI,GAACA,OAAO,CAAC6G,WAAT,IACE5F;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACgF,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAACiJ,YADlB;AAEE,IAAA,SAAS,EAAE/I,kBAAU,CAAC3E,OAFxB;AAGE,IAAA,KAAK,EAAE,EAHT;AAIE,IAAA,MAAM,EAAE,EAJV;AAKE,IAAA,SAAS,EAAC;AALZ,IADF,EAQER,6BAACsB,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,IAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,KAIG7C,SAAS,CAACsO,+BAJb,CARF,EAcEnO;AAAK,IAAA,SAAS,EAAC;AAAf,KAEImN,MAAM,GAEFnN,6BAACgF,YAAD;AACE,IAAA,OAAO,EAAE;AACPjG,MAAAA,OAAO,CAACqP,QAAR,CAAiB;AACfhB,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAFD;AAGD,KALH;AAME,IAAA,IAAI,EAAEnI,iBAAS,CAACoJ,SANlB;AAOE,IAAA,KAAK,EAAE,EAPT;AAQE,IAAA,MAAM,EAAE;AARV,IAFE,GAcFrO,6BAACgF,YAAD;AACE,IAAA,OAAO,EAAE;AACPjG,MAAAA,OAAO,CAACuP,MAAR,CAAe;AACblB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAFD;AAGD,KALH;AAME,IAAA,IAAI,EAAEnI,iBAAS,CAACsJ,UANlB;AAOE,IAAA,KAAK,EAAE,EAPT;AAQE,IAAA,MAAM,EAAE;AARV,IAhBR,CAdF,CAlHN,CADF;AAmKD;;AC5LD,IAAM1B,YAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;AAAA,SACjBC,IAAI,CAACC,GAAL,CAASF,GAAT,IAAgB,GAAhB,aACO,CAACC,IAAI,CAACC,GAAL,CAASF,GAAT,IAAgB,IAAjB,EAAuBG,OAAvB,CAA+B,CAA/B,CADP,SAEIH,GAHa;AAAA,CAAnB;;AAMA,SAAS0B,eAAT,CAAyB5P,KAAzB,EAAgC;AAAA,MAE5B6P,YAF4B,GAS1B7P,KAT0B,CAE5B6P,YAF4B;AAAA,MAG5BC,UAH4B,GAS1B9P,KAT0B,CAG5B8P,UAH4B;AAAA,MAI5BrI,kBAJ4B,GAS1BzH,KAT0B,CAI5ByH,kBAJ4B;AAAA,MAK5BC,iBAL4B,GAS1B1H,KAT0B,CAK5B0H,iBAL4B;AAAA,MAM5BqI,kBAN4B,GAS1B/P,KAT0B,CAM5B+P,iBAN4B;AAAA,MAO5BC,oBAP4B,GAS1BhQ,KAT0B,CAO5BgQ,oBAP4B;AAAA,MAQ5BC,qBAR4B,GAS1BjQ,KAT0B,CAQ5BiQ,qBAR4B;AAAA,MAYlBC,QAZkB,GAqB1BlQ,KArB0B,CAY5BmQ,MAZ4B,CAYlBD,QAZkB;AAAA,sBAqB1BlQ,KArB0B,CAa5BoQ,MAb4B;AAAA,MAc1BtD,aAd0B,iBAc1BA,aAd0B;AAAA,MAe1BzM,KAf0B,iBAe1BA,KAf0B;AAAA,MAgB1BD,MAhB0B,iBAgB1BA,MAhB0B;AAAA,MAiB1BiQ,MAjB0B,iBAiB1BA,MAjB0B;AAAA,MAkB1BC,QAlB0B,iBAkB1BA,QAlB0B;AAAA,uBAqB1BtQ,KArB0B,CAoB5BuQ,OApB4B;AAAA,MAoB5BA,OApB4B,+BAoBlB,EApBkB;AAAA,uBAuBNvQ,KAvBM,CAuBtBoQ,MAvBsB;AAAA,MAuBtBA,MAvBsB,+BAuBb,EAvBa;AAwB9B,MAAMI,6BAA6B,GAAG/I,kBAAkB,IAAI2I,MAAM,CAAC3I,kBAAnE;AACA,MAAMgJ,wBAAwB,GAAG/I,iBAAiB,IAAI0I,MAAM,CAAC1I,iBAA7D;AAEA,MAAMgJ,kCAAkC,GAAGH,OAAO,CAACI,wBAAnD;;AA3B8B,oBA4BR5P,gBAAU,CAACC,uCAAD,CA5BF;AAAA,MA4BtBC,SA5BsB,eA4BtBA,SA5BsB;;AAAA,MA8BtB2K,GA9BsB,GA8BDsE,QA9BC,CA8BtBtE,GA9BsB;AAAA,MA8BjBgF,WA9BiB,GA8BDV,QA9BC,CA8BjBU,WA9BiB;;AAAA,kBAiCgBlQ,cAAQ,CAACmQ,0BAAM,EAAP,CAjCxB;AAAA;AAAA,MAiCvBC,eAjCuB;AAAA,MAiCNC,kBAjCM;;AAAA,mBAkCArQ,cAAQ,CAAC,IAAD,CAlCR;AAAA;AAAA,MAkCvBP,OAlCuB;AAAA,MAkCd6Q,UAlCc;;AAAA,mBAmCctQ,cAAQ,CAAC,KAAD,CAnCtB;AAAA;AAAA,MAmCvBuQ,cAnCuB;AAAA,MAmCPC,iBAnCO;;AAAA,mBAoCYxQ,cAAQ,CAAC,KAAD,CApCpB;AAAA;AAAA,MAoCvByQ,aApCuB;AAAA,MAoCRC,gBApCQ;;AAAA,mBAqC4B1Q,cAAQ,CAAC,KAAD,CArCpC;AAAA;AAAA,MAqCvB2Q,qBArCuB;AAAA,MAqCAC,wBArCA;;AAuC9BxM,EAAAA,eAAS,CAAC,YAAM;AACduL,IAAAA,MAAM,CAACkB,IAAP,CAAY,6BAAZ;;AACA,QAAI,CAACzB,UAAD,IAAe,CAACc,WAAhB,IAA+B,CAAChF,GAApC,EAAyC;AACvCyE,MAAAA,MAAM,CAACmB,OAAP,CAAe,oCAAf,EAAqD,oCAArD;AACAN,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHD,MAGO;AACL,UAAI,CAACtF,GAAD,IAAQ,CAACA,GAAG,CAAC6F,YAAjB,EAA+B;AAC7BpB,QAAAA,MAAM,CAACmB,OAAP,CAAe,kCAAf;AACA;AACD;;AACD5F,MAAAA,GAAG,CAAC6F,YAAJ,CAAiBC,UAAjB,CAA4B5B,UAA5B,EAAwC,UAAC6B,YAAD,EAAkB;AACxD,YAAI,CAACA,YAAL,EAAmB;AACjBtB,UAAAA,MAAM,CAACmB,OAAP,CAAe,oCAAf;AACAN,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SAHD,MAGO;AACLb,UAAAA,MAAM,CAACkB,IAAP,CAAY,wCAAZ,EAAsDI,YAAtD;AACAT,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,UAAAA,UAAU,CAACW,YAAD,CAAV;AACD;AACF,OATD;AAUD;AACF,GArBQ,EAqBN,CAAC7B,UAAD,EAAac,WAAb,EAA0BE,eAA1B,CArBM,CAAT;;AAuBA,MAAI,CAAC3Q,OAAD,IAAY8Q,cAAhB,EAAgC;AAC9B,WACE7P;AAAK,MAAA,SAAS,EAAC;AAAf,OACEA;AAAK,MAAA,SAAS,EAAC;AAAf,OACEA,6BAACsB,aAAD;AAAO,MAAA,IAAI,EAAEC,uBAAe,CAACiP,GAA7B;AAAkC,MAAA,KAAK,EAAE/O,mBAAW,CAACiB;AAArD,OACG7C,SAAS,CAAC4Q,8BADb,CADF,EAIEzQ,6BAACgF,YAAD;AACE,MAAA,IAAI,EAAEC,iBAAS,CAACyL,KADlB;AAEE,MAAA,SAAS,EAAC,uCAFZ;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,OAAO,EAAE,mBAAM;AACbzB,QAAAA,MAAM,CAACkB,IAAP,CAAY,8BAAZ;AACA1B,QAAAA,YAAY;AACb;AARH,MAJF,CADF,EAgBEzO,0CACEA,6BAAC2Q,mBAAD;AAAa,MAAA,IAAI,EAAEC,wBAAgB,CAACC;AAApC,MADF,CAhBF,CADF;AAsBD;;AAED,SACE7Q,6BAAC8Q,2BAAD;AACE,IAAA,kBAAkB,EAAE1B,6BADtB;AAEE,IAAA,iBAAiB,EAAEC,wBAFrB;AAGE,IAAA,SAAS,EAAC;AAHZ,KAKErP;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAACsB,aAAD;AAAO,IAAA,IAAI,EAAEC,uBAAe,CAACiP,GAA7B;AAAkC,IAAA,KAAK,EAAE/O,mBAAW,CAACiB;AAArD,KACG7C,SAAS,CAAC4Q,8BADb,CADF,EAIEzQ;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,6BAAC+E,kBAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbkK,MAAAA,MAAM,CAACkB,IAAP,CAAY,8BAAZ;AACA1B,MAAAA,YAAY;AACb;AANH,KAQEzO,6BAACgF,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAACyL,KADlB;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,KAAK,EAAC;AAJR,IARF,CADF,CAJF,CALF,EA2BE1Q;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI4O,oBAAoB,GAChBA,oBAAoB,CAAC;AAAE7P,IAAAA,OAAO,EAAPA;AAAF,GAAD,CADJ,GAGhBiB,6BAAC,cAAD;AACE,IAAA,QAAQ,EAAE,CAACkP,QADb;AAEE,IAAA,OAAO,EAAEnQ,OAFX;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,mBAAmB,EAAE,6BAACM,UAAD,EAAawR,YAAb,EAA8B;AACjD9B,MAAAA,MAAM,CAACkB,IAAP,CAAY,oDAAZ;AACA,UAAM/I,UAAU,GAAGoD,GAAG,CAACwG,qBAAJ,EAAnB;;AACA,UAAInC,qBAAJ,EAA2B;AACzB,YAAMoC,MAAM,GAAGpC,qBAAqB,CAACkC,YAAD,EAAexR,UAAf,EAA2BR,OAAO,CAACmS,IAAnC,CAApC,CADyB;;AAGzBnS,QAAAA,OAAO,CAACoS,aAAR,CAAsBF,MAAtB,EAA8B,UAACzH,QAAD,EAAWzF,KAAX,EAAqB;AACjD,cAAIwM,YAAY,GAAG/G,QAAnB;;AACA,cAAIpC,UAAJ,EAAgB;AACdmJ,YAAAA,YAAY,GAAGxM,KAAf;AACD;;AAED4K,UAAAA,kBAAiB,CAAC4B,YAAD,CAAjB;;AACAZ,UAAAA,kBAAkB,CAACF,0BAAM,EAAP,CAAlB;AACD,SARD;AASA;AACD;;AACD1Q,MAAAA,OAAO,CAACoS,aAAR,CACEJ,YADF,EAEExR,UAFF,EAGER,OAAO,CAACmS,IAHV,EAIE,UAAC1H,QAAD,EAAWzF,KAAX,EAAqB;AACnB,YAAIwM,YAAY,GAAG/G,QAAnB;;AACA,YAAIpC,UAAJ,EAAgB;AACdmJ,UAAAA,YAAY,GAAGxM,KAAf;AACD;;AACDkL,QAAAA,MAAM,CAACkB,IAAP,CAAY,8CAAZ,EAA4DI,YAA5D;;AACA5B,QAAAA,kBAAiB,CAAC4B,YAAD,CAAjB;;AACAZ,QAAAA,kBAAkB,CAACF,0BAAM,EAAP,CAAlB;AACD,OAZH;AAcD;AApCH,IALR,EA8CI1Q,OAAO,CAAC6F,MAAR,KAAmB,UAAnB,GAEI5E,6BAACoR,KAAD;AACE,IAAA,OAAO,EAAErS,OADX;AAEE,IAAA,iBAAiB,EAAE,2BAACwR,YAAD,EAAkB;AACnC;AACA5B,MAAAA,kBAAiB,CAAC4B,YAAD,CAAjB;AACD,KALH;AAME,IAAA,gBAAgB,EACd;AAAA,aAAQ7E,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA3C,GACHA,aAAa,EADV,GAEH2F,uCAA0B,CAAC;AAAE7G,QAAAA,GAAG,EAAHA,GAAF;AAAO8E,QAAAA,kCAAkC,EAAlCA;AAAP,OAAD,CAF9B;AAAA;AAPJ,IAFJ,GAiBItP,4DAEEA;AACE,IAAA,IAAI,EAAC,QADP;AAEE,oBAAc+P,aAFhB;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,SAAS,EAAE;AAAA,aAAMC,gBAAgB,CAAC,CAACD,aAAF,CAAtB;AAAA,KAJb;AAKE,IAAA,SAAS,2IALX;AASE,IAAA,OAAO,EAAE;AAAA,aAAMC,gBAAgB,CAAC,CAACD,aAAF,CAAtB;AAAA;AATX,KAWE/P,6BAACgF,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAACyI,OADlB;AAEE,IAAA,SAAS,EAAC,4CAFZ;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,SAAS,EAAEvI,kBAAU,CAAC3E;AALxB,IAXF,EAkBER,6BAACsB,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,IAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,eAIM7C,SAAS,CAAC8N,+BAJhB,GAKE3N,6BAAC4N,kBAAD;AAAO,IAAA,KAAK,EAAEf,YAAU,CAAC9N,OAAO,CAAC8O,WAAT;AAAxB,IALF,CAlBF,EAyBE7N,6BAACgF,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAACqM,OADlB;AAEE,IAAA,SAAS,EAAE,CACT,6CADS,EAET,gDAFS,EAGRvB,aAAa,GAAG,6CAAH,GAAmD,EAHxD,EAITlH,IAJS,CAIJ,GAJI,CAFb;AAOE,IAAA,MAAM,EAAC,MAPT;AAQE,IAAA,KAAK,EAAC;AARR,IAzBF,CAFF,EAuCIkH,aAAa,IACX/P,6BAAC,iBAAD;AACE,IAAA,WAAW,EAAEhB,MADf;AAEE,IAAA,QAAQ,EAAE,CAACkQ,QAFb;AAAA;AAIE,IAAA,gBAAgB,EACd;AAAA,aAAQxD,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA3C,GACHA,aAAa,EADV,GAEH2F,uCAA0B,CAAC;AAAE7G,QAAAA,GAAG,EAAHA,GAAF;AAAO8E,QAAAA,kCAAkC,EAAlCA;AAAP,OAAD,CAF9B;AAAA,KALJ;AAUE,IAAA,UAAU,EACR9E,GAAG,IAAIA,GAAG,CAACwG,qBAAX,IAAoCxG,GAAG,CAACwG,qBAAJ,EAXxC;AAaE,IAAA,OAAO,EAAEjS,OAbX;AAcE,IAAA,OAAO,EAAEA,OAAO,CAACsE,OAdnB;AAeE,IAAA,gBAAgB,EAAE,0BAAC4I,gBAAD,EAAsB;AACtCgD,MAAAA,MAAM,CAACkB,IAAP,CAAY,qCAAZ;AACApR,MAAAA,OAAO,CAACmN,iBAAR,CAA0BD,gBAA1B,EACGsF,IADH,CACQ,UAACC,GAAD,EAAS;AACb7C,QAAAA,kBAAiB,CAAC6C,GAAD,CAAjB;;AACA7B,QAAAA,kBAAkB,CAACF,0BAAM,EAAP,CAAlB;AACAR,QAAAA,MAAM,CAACkB,IAAP,CAAY,8CAAZ,EAA4DqB,GAA5D;AACD,OALH;AAMD;AAvBH,IAxCN,CA/DR,EAsIExR;AACE,IAAA,SAAS,yHAGH,CAACkP,QAAD,GAAY,iDAAZ,GAAgE,EAH7D,CADX;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,QAAQ,EAAE,CAPZ;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,SAAS,EAAE,qBAAM;AACf,UAAI,CAACA,QAAL,EAAe;AAAE;AAAS;;AAC1BgB,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,KAZH;AAaE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI,CAAChB,QAAL,EAAe;AAAE;AAAS;;AAC1BgB,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;AAhBH,KAkBElQ,6BAACgF,YAAD;AACE,IAAA,IAAI,EAAEC,iBAAS,CAACwM,KADlB;AAEE,IAAA,SAAS,EAAE,CACT,4CADS,EAET,8CAFS,EAGT5I,IAHS,CAGJ,GAHI,CAFb;AAME,IAAA,MAAM,EAAC,MANT;AAOE,IAAA,KAAK,EAAC;AAPR,IAlBF,EA2BE7I,6BAACsB,aAAD;AACE,IAAA,IAAI,EAAEC,uBAAe,CAACwH,UADxB;AAEE,IAAA,KAAK,EAAEtH,mBAAW,CAACiB;AAFrB,KAIG7C,SAAS,CAAC6R,qCAJb,CA3BF,CAtIF,EAyKIzB,qBAAqB,IACnBjQ,6BAAC2R,8BAAD;AACE,IAAA,YAAY,EAAE;AAAA,aAAMzB,wBAAwB,CAAC,KAAD,CAA9B;AAAA,KADhB;AAEE,IAAA,cAAc,EAAE,0BAAM;AACpBjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,kCAAZ,EAAgDpR,OAAhD;AACAA,MAAAA,OAAO,CAAC6S,KAAR,GACGL,IADH,CACQ,YAAM;AACVtC,QAAAA,MAAM,CAACkB,IAAP,CAAY,8CAAZ,EAA4DpR,OAA5D;AACA0P,QAAAA,YAAY;AACb,OAJH;AAKD;AATH,IA1KN,CA3BF,CADF;AAsND;;AAEDD,eAAe,CAAC1M,SAAhB,GAA4B;AAC1B2M,EAAAA,YAAY,EAAE1M,SAAS,CAACC,IADE;AAE1B2M,EAAAA,iBAAiB,EAAE5M,SAAS,CAACC,IAFH;AAG1B6M,EAAAA,qBAAqB,EAAE9M,SAAS,CAACC,IAHP;AAI1B4M,EAAAA,oBAAoB,EAAE7M,SAAS,CAAC8P,SAAV,CAAoB,CACxC9P,SAAS,CAAC+P,OAD8B,EAExC/P,SAAS,CAACC,IAF8B,CAApB,CAJI;AAQ1BqE,EAAAA,kBAAkB,EAAEtE,SAAS,CAACe,IARJ;AAS1BwD,EAAAA,iBAAiB,EAAEvE,SAAS,CAACC,IATH;AAU1B0M,EAAAA,UAAU,EAAE3M,SAAS,CAACI,MAAV,CAAiBF,UAVH;AAW1BkN,EAAAA,OAAO,EAAEpN,SAAS,CAACG,KAAV,CAAgB;AACvBqN,IAAAA,wBAAwB,EAAExN,SAAS,CAACG,KAAV,CAAgB;AACxC2B,MAAAA,KAAK,EAAE9B,SAAS,CAACgQ,MADuB;AAExCC,MAAAA,aAAa,EAAEjQ,SAAS,CAACsG,OAAV,CAAkBtG,SAAS,CAACI,MAA5B,CAFyB;AAGxC8P,MAAAA,iBAAiB,EAAElQ,SAAS,CAACI,MAHW;AAIxC+P,MAAAA,oBAAoB,EAAEnQ,SAAS,CAACsG,OAAV,CAAkBtG,SAAS,CAACI,MAA5B;AAJkB,KAAhB;AADH,GAAhB,CAXiB;AAmB1B;AACA4M,EAAAA,MAAM,EAAEhN,SAAS,CAACG,KAAV,CAAgB;AACtB4M,IAAAA,QAAQ,EAAE/M,SAAS,CAACG,KAAV,CAAgB;AACxBsI,MAAAA,GAAG,EAAEzI,SAAS,CAACG,KAAV,CAAgB;AACnB8O,QAAAA,qBAAqB,EAAEjP,SAAS,CAACC,IADd;AAEnBqO,QAAAA,YAAY,EAAEtO,SAAS,CAAC8P,SAAV,CAAoB,CAChC9P,SAAS,CAACG,KAAV,CAAgB;AACdoO,UAAAA,UAAU,EAAEvO,SAAS,CAACC;AADR,SAAhB,CADgC,EAIhCD,SAAS,CAACC,IAJsB,CAApB,CAFK;AAQnBmQ,QAAAA,8BAA8B,EAAEpQ,SAAS,CAACqQ;AARvB,OAAhB,CADmB;AAWxB5C,MAAAA,WAAW,EAAEzN,SAAS,CAACe;AAXC,KAAhB;AADY,GAAhB,EAcLb,UAlCuB;AAmC1B+M,EAAAA,MAAM,EAAEjN,SAAS,CAACG,KAAV,CAAgB;AACtBlD,IAAAA,MAAM,EAAE+C,SAAS,CAACI,MADI;AAEtBlD,IAAAA,KAAK,EAAE8C,SAAS,CAACI,MAFK;AAGtBuJ,IAAAA,aAAa,EAAE3J,SAAS,CAACC,IAHH;AAItBkN,IAAAA,QAAQ,EAAEnN,SAAS,CAACe,IAJE;AAKtBmM,IAAAA,MAAM,EAAElN,SAAS,CAACG,KAAV,CAAgB;AACtBiO,MAAAA,IAAI,EAAEpO,SAAS,CAACC,IADM;AAEtB+B,MAAAA,KAAK,EAAEhC,SAAS,CAACC,IAFK;AAGtBoO,MAAAA,OAAO,EAAErO,SAAS,CAACC;AAHG,KAAhB;AALc,GAAhB,EAULC;AA7CuB,CAA5B;AAgDAuM,eAAe,CAACzL,YAAhB,GAA+B;AAC7B8L,EAAAA,qBAAqB,EAAE,IADM;AAE7BM,EAAAA,OAAO,EAAE,EAFoB;AAG7B9I,EAAAA,kBAAkB,EAAE,KAHS;AAI7BC,EAAAA,iBAAiB,EAAE,IAJU;AAK7BsI,EAAAA,oBAAoB,EAAE,IALO;AAM7BH,EAAAA,YAAY,EAAE,wBAAM,EANS;AAO7BE,EAAAA,iBAAiB,EAAE,6BAAM;AAPI,CAA/B;AAUA,wBAAepD,uCAAmB,CAACiD,eAAD,CAAlC;;;;"}