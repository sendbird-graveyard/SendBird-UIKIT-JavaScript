{"version":3,"file":"OpenChannel.js","sources":["../../../src/smart-components/OpenchannelConversation/utils.ts","../../../src/smart-components/OpenchannelConversation/components/MessageInpuetWrapper.tsx","../../../src/smart-components/OpenchannelConversation/components/FrozenNotification.tsx","../../../src/ui/OpenchannelConversationHeader/index.tsx","../../../src/ui/OpenchannelUserMessage/utils.ts","../../../src/utils/openChannelUtils.ts","../../../src/ui/OpenchannelUserMessage/index.tsx","../../../src/ui/OpenChannelAdminMessage/index.tsx","../../../src/ui/OpenchannelOGMessage/utils.ts","../../../src/ui/OpenchannelOGMessage/index.tsx","../../../src/ui/OpenchannelThumbnailMessage/utils.ts","../../../src/ui/OpenchannelThumbnailMessage/index.tsx","../../../src/ui/OpenchannelFileMessage/utils.ts","../../../src/ui/OpenchannelFileMessage/index.tsx","../../../src/smart-components/OpenchannelConversation/components/RemoveMessageModal.tsx","../../../src/smart-components/OpenchannelConversation/components/types.ts","../../../src/smart-components/OpenchannelConversation/components/MessageHOC.tsx","../../../src/smart-components/OpenchannelConversation/components/OpenchannelConversationScroll.tsx","../../../src/smart-components/OpenchannelConversation/dux/actionTypes.ts","../../../src/smart-components/OpenchannelConversation/dux/reducers.ts","../../../src/smart-components/OpenchannelConversation/dux/initialState.ts","../../../src/smart-components/OpenchannelConversation/index.tsx"],"sourcesContent":["import format from 'date-fns/format';\nimport Sendbird from 'sendbird';\nimport SendbirdUIKit from '../../index';\n\nexport const getMessageCreatedAt = (message: SendbirdUIKit.EveryMessage): string => format(message.createdAt, 'p');\n\nexport const scrollIntoLast = (selector: string, intialTry = 0): void => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const nodes = document.querySelectorAll(selector);\n    const last = nodes[nodes.length - 1];\n    last.scrollIntoView(false); /** alignToTop: false */\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(selector, currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\n\nexport const isSameGroup = (\n  message: SendbirdUIKit.EveryMessage,\n  comparingMessage: SendbirdUIKit.EveryMessage,\n): boolean => {\n  if (\n    !message\n    || !comparingMessage\n    || message.messageType === 'admin'\n    || comparingMessage.messageType === 'admin'\n  ) {\n    return false\n  }\n\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage: SendbirdUIKit.EveryMessage,\n  currMessage: SendbirdUIKit.EveryMessage,\n  nextMessage: SendbirdUIKit.EveryMessage,\n): [boolean, boolean] => (\n    [\n      isSameGroup(prevMessage, currMessage),\n      isSameGroup(currMessage, nextMessage),\n    ]\n  );\n\nexport const kFormatter = (num: number): string => {\n  if (Math.abs(num) > 999999) {\n    return `${(Math.abs(num) / 1000000).toFixed(1)}M`;\n  }\n\n  if (Math.abs(num) > 999) {\n    return `${(Math.abs(num) / 1000).toFixed(1)}K`;\n  }\n\n  return `${num}`;\n};\n\nexport const isOperator = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { operators } = openChannel;\n  if (operators.map(operator => operator.userId).indexOf(userId) < 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const isDisabledBecauseFrozen = (openChannel: Sendbird.OpenChannel, userId: string): boolean => {\n  const { isFrozen } = openChannel;\n  return isFrozen && !isOperator(openChannel, userId);\n};\n\nexport const isDisabledBecauseMuted = (mutedParticipantIds: string[], userId: string): boolean => {\n  return mutedParticipantIds.indexOf(userId) < 0;\n};\n","import React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\nimport { RenderMessageInputProps } from '../../../index';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageInput from '../../../ui/MessageInput';\n\ninterface Props {\n  channel: Sendbird.OpenChannel;\n  user: Sendbird.User;\n  disabled: boolean;\n  onSendMessage(): void;\n  onFileUpload(file_: File): void;\n  renderMessageInput?(renderProps: RenderMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  disabled,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  if (!channel) {\n    return;\n  }\n\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  return (\n    <div className=\"sendbird-openchannel-footer\">\n      <MessageInput\n        ref={ref}\n        disabled={disabled}\n        onSendMessage={onSendMessage}\n        onFileUpload={onFileUpload}\n        placeholder={(\n          disabled\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED\n          // add disabled because of muted state\n        )}\n      />\n    </div>\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport './frozen-notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-frozen-channel-notification\">\n      <Label\n        className=\"sendbird-frozen-channel-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { ReactElement } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n  LabelStringSet,\n} from '../Label';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation-header';\n\ninterface Props {\n  coverImage?: string;\n  title?: string;\n  subTitle?: string;\n  onActionClick?(): void;\n}\n\nexport default function OpenchannelConversationHeader({\n  coverImage,\n  title = LabelStringSet.NO_TITLE,\n  subTitle = LabelStringSet.NO_TITLE,\n  onActionClick,\n}: Props): ReactElement {\n  return (\n\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__left`}>\n        {\n          coverImage ? (\n            <Avatar\n              className={`${COMPONENT_CLASS_NAME}__left__cover-image`}\n              src={coverImage}\n              alt=\"channel cover image\"\n              width=\"32px\"\n              height=\"32px\"\n            />\n          ) : (\n              <Icon\n                className={`${COMPONENT_CLASS_NAME}__left__cover-image--icon`}\n                width=\"32px\"\n                height=\"32px\"\n                type={IconTypes.AVATAR_NO_IMAGE}\n                fillColor={IconColors.BACKGROUND_3}\n              />\n            )\n        }\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__left__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title}\n        </Label>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__left__sub-title`}\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__right`}>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__right__trigger`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","export const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default { copyToClipboard };\n","import Sendbird from 'sendbird';\nimport { ClientUserMessage, ClientFileMessage } from '../index';\n\nconst OpenChannelMessageStatusTypes = {\n  NONE: 'none',\n  PENDING: 'pending',\n  FAILED: 'failed',\n  CANCELED: 'canceled',\n  SUCCEEDED: 'succeeded'\n};\n\nexport const getSenderFromMessage = (message: ClientUserMessage | ClientFileMessage): Sendbird.User => {\n  return message.sender || message._sender;\n};\n\nexport const checkIsSent = (status: string): boolean => (status === OpenChannelMessageStatusTypes.SUCCEEDED);\n\nexport const checkIsByMe = (message: ClientFileMessage | ClientUserMessage, userId: string): boolean => (getSenderFromMessage(message).userId === userId);\n\ninterface isFineCopyParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineCopy = ({ message }: isFineCopyParams): boolean => {\n  return (message.messageType === 'user' && message.message.length > 0);\n};\n\ninterface isFineResendParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineResend = ({ message, status, userId }: isFineResendParams): boolean => {\n  return checkIsByMe(message, userId)\n    && !checkIsSent(status)\n    && message.isResendable\n    && message.isResendable();\n};\n\ninterface isFineEditParams {\n  message: ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineEdit = ({ message, status, userId }: isFineEditParams): boolean => {\n  return checkIsByMe(message, userId) && checkIsSent(status);\n};\n\ninterface isFineDeleteParams {\n  message: ClientFileMessage | ClientUserMessage;\n  status: string;\n  userId: string;\n}\nexport const isFineDelete = ({ message, userId }: isFineDeleteParams): boolean => {\n  return checkIsByMe(message, userId);\n};\n\ninterface showMenuTriggerParams {\n  message: ClientUserMessage | ClientFileMessage;\n  status: string;\n  userId: string;\n}\nexport const showMenuTrigger = (props: showMenuTriggerParams): boolean => {\n  const { message, status, userId } = props;\n  if (message.messageType === 'user') {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineEdit({ message, status, userId })\n      || isFineCopy({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  } else {\n    return (\n      isFineDelete({ message, status, userId })\n      || isFineResend({ message, status, userId })\n    );\n  }\n};\n","import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientUserMessage;\n  userId: string;\n  className?: string | string[];\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n}\n\nexport default function OpenchannelUserMessage({\n  message,\n  className,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n  status,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push(`sendbird-openchannel-user-message`);\n  const isByMe = checkIsByMe(message, userId);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef.current.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    width=\"24px\"\n                    height=\"24px\"\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { ClientAdminMessage } from '../../index';\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\ninterface Props {\n  message: ClientAdminMessage;\n  className?: string | string[];\n}\n\nexport default function OpenChannelAdminMessage({\n  message,\n  className,\n}: Props): ReactElement {\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-admin-message');\n\n  return (\n    <div className={[...injectingClassName].join(' ')}>\n      <Label\n        className=\"sendbird-openchannel-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message || ''}\n      </Label>\n    </div>\n  );\n}\n","import Sendbird from 'sendbird';\n\nexport const URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const createUrlTester = (regexp: RegExp) => (text: string): boolean => regexp.test(text);\nexport const checkOGIsEnalbed = (message: Sendbird.UserMessage): boolean => {\n  const { ogMetaData } = message;\n  if (!ogMetaData) {\n    return false;\n  }\n  const { url } = ogMetaData;\n  if (!url) {\n    return false;\n  }\n  return true;\n};\n","import React, { useState, useContext, useMemo, useRef, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport LinkLabel from '../LinkLabel';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport uuidv4 from '../../utils/uuid';\nimport { copyToClipboard } from '../OpenchannelUserMessage/utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkOGIsEnalbed, createUrlTester, URL_REG } from './utils';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientUserMessage;\n  className?: string | string[];\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n  userId: string;\n}\n\nexport default function OpenchannelOGMessage({\n  message,\n  className,\n  disabled,\n  showEdit,\n  showRemove,\n  resendMessage,\n  chainTop,\n  status,\n  userId,\n}: Props): JSX.Element {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  const { ogMetaData } = message;\n  const { defaultImage } = ogMetaData;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [contextStyle, setContextStyle] = useState({});\n  const messageComponentRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const isUrl = createUrlTester(URL_REG);\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-og-message');\n  const isByMe = checkIsByMe(message, userId);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const wordClassName = 'sendbird-openchannel-og-message--word';\n    const splitMessage = message.message.split(' ');\n    const matchedMessage = splitMessage\n      .map((word) => (\n        isUrl(word)\n          ? (\n            <LinkLabel\n              key={uuidv4()}\n              className={[\n                wordClassName,\n                'sendbird-openchannel-og-message--word--link'\n              ]}\n              src={word}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.PRIMARY}\n            >\n              {word}\n            </LinkLabel>\n          )\n          : (\n            <Label\n              key={uuidv4()}\n              className={wordClassName}\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {word}\n            </Label>\n          )\n      ));\n\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          className={wordClassName}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.MESSAGE_EDITED}\n        </Label>,\n      );\n    }\n\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  const openLink = () => {\n    if (checkOGIsEnalbed(message)) {\n      const { url } = ogMetaData;\n      window.open(url);\n    }\n  };\n\n  // place conxt menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageComponentRef.current.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n      ref={messageComponentRef}\n    >\n      <div\n        className=\"sendbird-openchannel-og-message__top\"\n      >\n        <div className=\"sendbird-openchannel-og-message__top__left\">\n          {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-og-message__top__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                        ? (\n                          renderUserProfile({\n                            user: sender,\n                            close: closeDropdown,\n                          })\n                        )\n                        : (\n                          <UserProfile\n                            user={sender}\n                            onSuccess={closeDropdown}\n                            disableMessaging\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className=\"sendbird-openchannel-og-message__top__right\">\n          {\n            !chainTop && (\n              <div className=\"sendbird-openchannel-og-message__top__right__title\">\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sender-name\"\n                  type={LabelTypography.CAPTION_2}\n                  color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n                >\n                  {\n                    sender && (\n                      sender.friendName\n                      || sender.nickname\n                      || sender.userId\n                    )\n                  }\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-og-message__top__right__title__sent-at\"\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {\n                    message.createdAt && (\n                      format(message.createdAt, 'p')\n                    )\n                  }\n                </Label>\n              </div>\n            )\n          }\n          <div className=\"sendbird-openchannel-og-message__top__right__description\">\n            <Label\n              className=\"sendbird-openchannel-og-message__top__right__description__message\"\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {MemoizedMessageText()}\n            </Label>\n          </div>\n        </div>\n        {\n          <div\n            className=\"sendbird-openchannel-og-message__top__context-menu\"\n            ref={contextMenuRef}\n            style={contextStyle}\n          >\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message: message, userId: userId, status: status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-og-message__top__context-menu--icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={() => {\n                      toggleDropdown();\n                    }}\n                  >\n                    <Icon\n                      width=\"24px\"\n                      height=\"24px\"\n                      type={IconTypes.MORE}\n                      fillColor={IconColors.CONTENT_INVERSE}\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineCopy({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__copy\"\n                        onClick={() => {\n                          copyToClipboard(message.message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineEdit({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__edit\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showEdit(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__resend\"\n                        onClick={() => {\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        className=\"sendbird-openchannel-og-message__top__context-menu__delete\"\n                        onClick={() => {\n                          if (disabled) {\n                            return;\n                          }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          </div>\n        }\n      </div>\n      <div className=\"sendbird-openchannel-og-message__bottom\">\n        <div className=\"sendbird-openchannel-og-message__bottom__og-tag\">\n          {\n            ogMetaData.url && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__url\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {ogMetaData.url}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.title && (\n              <LinkLabel\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__title\"\n                type={LabelTypography.SUBTITLE_2}\n                color={LabelColors.PRIMARY}\n                src={ogMetaData.url}\n              >\n                {\n                  ogMetaData.title\n                }\n              </LinkLabel>\n            )\n          }\n          {\n            ogMetaData.description && (\n              <Label\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__description\"\n                type={LabelTypography.BODY_2}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {ogMetaData.description}\n              </Label>\n            )\n          }\n          {\n            ogMetaData.url && (\n              <div\n                className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail\"\n                onClick={openLink}\n                onKeyDown={openLink}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {\n                  defaultImage && (\n                    <ImageRenderer\n                      url={defaultImage.url || ''}\n                      alt={defaultImage.alt || ''}\n                      className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image\"\n                      height=\"189px\"\n                      defaultComponent={(\n                        <div className=\"sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image--placeholder\">\n                          <Icon\n                            width=\"56px\"\n                            height=\"56px\"\n                            type={IconTypes.NO_THUMBNAIL}\n                          />\n                        </div>\n                      )}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n}\n","import React, { useContext, useRef } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsByMe,\n  checkIsSent,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientFileMessage;\n  className?: string | string[];\n  disabled: boolean;\n  userId: string;\n  status: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  message,\n  className,\n  disabled,\n  userId,\n  status,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const {\n    type,\n    url,\n    localUrl,\n  } = message;\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-thumbnail-message');\n  const isByMe = checkIsByMe(message, userId);\n  const isMessageSent = checkIsSent(status);\n  const sender = getSenderFromMessage(message);\n\n  return (\n    <div className={injectingClassName.join(' ')}>\n      <div className=\"sendbird-openchannel-thumbnail-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-thumbnail-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-thumbnail-message__right__body\">\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n            onClick={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            onKeyDown={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n            {\n              {\n                [SUPPORTING_TYPES.VIDEO]: (\n                  (url || localUrl)\n                    ? (\n                      <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                        <video\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\"\n                        >\n                          <source src={url || localUrl} type={type} />\n                        </video>\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                          width=\"56px\"\n                          height=\"56px\"\n                          type={IconTypes.PLAY}\n                        />\n                      </div>\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.IMAGE]: (\n                  (url || localUrl)\n                    ? (\n                      <ImageRenderer\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                        height=\"270px\"\n                        url={url || localUrl}\n                        alt=\"image\"\n                      />\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                        width=\"56px\"\n                        height=\"56px\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.UNSUPPORTED]: (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                    width=\"56px\"\n                    height=\"56px\"\n                    type={IconTypes.PHOTO}\n                    fillColor={IconColors.ON_BACKGROUND_2}\n                  />\n                ),\n              }[getSupportingFileType(type)]\n            }\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            showMenuTrigger({ message, userId, status }) && (\n              <IconButton\n                className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                width=\"32px\"\n                height=\"32px\"\n                onClick={toggleDropdown}\n              >\n                <Icon\n                  width=\"24px\"\n                  height=\"24px\"\n                  type={IconTypes.MORE}\n                  fillColor={IconColors.CONTENT_INVERSE}\n                />\n              </IconButton>\n            )\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              parentRef={contextMenuRef}\n              parentContainRef={contextMenuRef}\n              closeDropdown={closeDropdown}\n              openLeft\n            >\n              {\n                isFineResend({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      resendMessage(message);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                  </MenuItem>\n                )\n              }\n              {\n                isFineDelete({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) {\n                        return;\n                      }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","import { IconTypes } from '../Icon';\n\nexport const checkFileType = (fileUrl: string): string => {\n  let result = null;\n  const imageFile = /(\\.gif|\\.jpg|\\.jpeg|\\.txt|\\.pdf)$/i;\n  const audioFile = /(\\.mp3)$/i;\n  if (imageFile.test(fileUrl)) {\n    result = IconTypes.FILE_DOCUMENT;\n  } else if (audioFile.test(fileUrl)) {\n    result = IconTypes.FILE_AUDIO;\n  }\n  return result;\n}\n\nexport const truncate = (fullStr:string, strLen: number): string => {\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n","import React, { useContext, useRef } from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport TextButton from '../TextButton';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { checkFileType, truncate } from './utils';\nimport { ClientFileMessage } from '../../index';\nimport {\n  checkIsByMe,\n  isFineDelete,\n  isFineResend,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  message: ClientFileMessage;\n  className?: string | string[];\n  userId: string;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  status: string;\n\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientFileMessage): void;\n}\n\nexport default function OpenchannelFileMessage({\n  message,\n  className,\n  userId,\n  disabled,\n  chainTop,\n  status,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n\n  const openFileUrl = () => { window.open(message.url); };\n\n  const injectingClassName = Array.isArray(className) ? className : [className];\n  injectingClassName.push('sendbird-openchannel-file-message');\n  const isByMe = checkIsByMe(message, userId);\n  const sender = getSenderFromMessage(message);\n\n  return (\n    <div\n      className={injectingClassName.join(' ')}\n    >\n      <div className=\"sendbird-openchannel-file-message__left\">\n        {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                  className=\"sendbird-openchannel-file-message__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: 0, paddingBottom: 0 }}\n                  >\n                    {\n                      renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n      </div>\n      <div className=\"sendbird-openchannel-file-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-file-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-file-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message.createdAt && (\n                    format(message.createdAt, 'p')\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-file-message__right__body\">\n          {\n            checkFileType(message.url) && (\n              <Icon\n                className=\"sendbird-openchannel-file-message__right__body__icon\"\n                width=\"48px\"\n                height=\"48px\"\n                type={checkFileType(message.url)}\n                color={IconColors.PRIMARY}\n              />\n            )\n          }\n          <TextButton\n            className=\"sendbird-openchannel-file-message__right__body__file-name\"\n            onClick={openFileUrl}\n          >\n            <Label\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {truncate(message.url, 40)}\n            </Label>\n          </TextButton>\n        </div>\n      </div>\n      <div\n        className=\"sendbird-openchannel-file-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        {\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                showMenuTrigger({ message, userId, status }) && (\n                  <IconButton\n                    className=\"sendbird-openchannel-file-message__context-menu__icon\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    onClick={toggleDropdown}\n                  >\n                    <Icon\n                      type={IconTypes.MORE}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                  </IconButton>\n                )\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={contextMenuRef}\n                  parentContainRef={contextMenuRef}\n                  closeDropdown={closeDropdown}\n                  openLeft\n                >\n                  {\n                    isFineResend({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          resendMessage(message);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                      </MenuItem>\n                    )\n                  }\n                  {\n                    isFineDelete({ message, userId, status }) && (\n                      <MenuItem\n                        onClick={() => {\n                          if (disabled) { return; }\n                          showRemove(true);\n                          closeDropdown();\n                        }}\n                      >\n                        {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                      </MenuItem>\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n        }\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react'\nimport { ClientFileMessage, ClientUserMessage } from '../../..'\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  onCloseModal(): void;\n  onDeleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n}\n\nexport default function RemoveMessageModal({\n  onCloseModal,\n  onDeleteMessage,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n}\n","import { EveryMessage } from '../../..';\nimport { isImage, isVideo } from '../../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message: EveryMessage): string => {\n  if ((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user') {\n    return (message.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message.isAdminMessage && message.isAdminMessage()) {\n    return MessageTypes.ADMIN;\n  }\n  if (message.messageType === 'file') {\n    return (isImage(message.type) || isVideo(message.type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return MessageTypes.UNKNOWN;\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import React, { useState, useRef, ReactElement } from 'react';\n\nimport format from 'date-fns/format';\nimport { ClientFileMessage, ClientUserMessage, EveryMessage } from '../../../index';\n\nimport OpenChannelUserMessage from '../../../ui/OpenchannelUserMessage';\nimport OpenChannelAdminMessage from '../../../ui/OpenChannelAdminMessage';\nimport OpenChannelOGMessage from '../../../ui/OpenchannelOGMessage';\nimport OpenChannelThumbnailMessage from '../../../ui/OpenchannelThumbnailMessage';\nimport OpenChannelFileMessage from '../../../ui/OpenchannelFileMessage';\n// import UnknownMessage from '../../../ui/UnknownMessage';\n\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\n\nimport RemoveMessageModal from './RemoveMessageModal';\nimport {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n} from './types';\n\ninterface Props {\n  message: EveryMessage;\n  userId: string;\n  disabled: boolean;\n  editDisabled: boolean;\n  hasSeperator: boolean;\n  deleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n  updateMessage(messageId: number, text: string, callback?: () => void): void;\n  resendMessage(failedMessage: ClientUserMessage | ClientFileMessage): void;\n  status?: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n}\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeperator,\n  deleteMessage,\n  updateMessage,\n  resendMessage,\n  status,\n  chainTop,\n  chainBottom,\n}: Props): ReactElement {\n  let sender: SendBird.User = null;\n  if (message.messageType !== 'admin') {\n    sender = message.sender;\n  }\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  let isByMe = false;\n\n  if (sender && message.messageType !== 'admin') {\n    // pending and failed messages are by me\n    isByMe = (userId === sender.userId)\n      || (message.requestState === SendingMessageStatus.PENDING)\n      || (message.requestState === SendingMessageStatus.FAILED);\n  }\n\n  if (message.messageType === 'user' && showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-seperator */}\n      {\n        hasSeperator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: (() => {\n            if (message.messageType === 'admin') {\n              return (\n                <OpenChannelAdminMessage message={message} />\n              )\n            }\n          })(),\n          [MessageTypes.FILE]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelFileMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.OG]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelOGMessage\n                  message={message}\n                  status={status}\n                  userId={userId}\n                  showEdit={setShowEdit}\n                  disabled={disabled}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.THUMBNAIL]: (() => {\n            if (message.messageType === 'file') {\n              return (\n                <OpenChannelThumbnailMessage\n                  message={message}\n                  disabled={disabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  onClick={setShowFileViewer}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.USER]: (() => {\n            if (message.messageType === 'user') {\n              return (\n                <OpenChannelUserMessage\n                  message={message}\n                  userId={userId}\n                  disabled={disabled}\n                  showEdit={setShowEdit}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  status={status}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n            return;\n          })(),\n          [MessageTypes.UNKNOWN]: (() => {\n            return;\n            // return (\n            //   <OpenChannelUnknownMessage message={message} />\n            // );\n          })(),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              if (message.messageType !== 'admin') {\n                deleteMessage(message);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={deleteMessage}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {/* {\n        !((message.isFileMessage && message.isFileMessage()) || message.messageType === 'file')\n        && !(message.isAdminMessage && message.isAdminMessage())\n        && !(((message.isUserMessage && message.isUserMessage()) || message.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            status={status}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      } */}\n    </div>\n  );\n}\n","import React, { ReactElement, useRef, useEffect } from 'react';\nimport isSameDay from 'date-fns/isSameDay';\nimport { ClientFileMessage, ClientUserMessage, EveryMessage } from '../../../index';\nimport MessageHoc from './MessageHOC';\n\nimport './openchannel-conversation-scroll.scss';\nimport { compareMessagesForGrouping } from '../utils';\n\ninterface Props {\n  openchannel: SendBird.OpenChannel;\n  user: SendBird.User;\n  allMessages: EveryMessage[];\n  useMessageGrouping: boolean;\n  isOnline: boolean;\n  hasMore: boolean;\n  onScroll(callback?: () => void): void;\n  scrollDownPromise: PromiseLike<void>;\n  showScrollDownButton?(bool: boolean): void;\n  updateMessage(messageId: number, text: string, callback?: () => void ): void;\n  deleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void ): void;\n  resendMessage(failedMessage: ClientUserMessage | ClientFileMessage): void;\n}\n\nexport default function OpenchannelConversationScroll(\n  {\n    useMessageGrouping = true,\n    openchannel,\n    user,\n    allMessages,\n    isOnline = true,\n    hasMore,\n    onScroll,\n    scrollDownPromise,\n    showScrollDownButton,\n    updateMessage,\n    deleteMessage,\n    resendMessage,\n  }: Props\n): ReactElement {\n  const scrollRef = useRef(null);\n\n  const handleOnScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = element;\n    if (showScrollDownButton) {\n      if (scrollHeight > scrollTop + clientHeight) {\n        showScrollDownButton(true);\n      } else {\n        showScrollDownButton(false);\n      }\n    }\n\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      onScroll(() => {\n        const first = nodes[0];\n        first.scrollIntoView();\n      });\n    }\n  };\n\n  useEffect(() => {\n    // This promise is created in everytime when user click the scroll to bottom button\n    // This scope waits when user click the button and scrolls to the bottom of conversation\n    if (scrollDownPromise && scrollRef && scrollRef.current) {\n      scrollDownPromise.then(() => {\n        scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n        if (showScrollDownButton) {\n          showScrollDownButton(false);\n        }\n      });\n    }\n    return;\n  }, [scrollDownPromise]);\n\n  return (\n    <div\n      className=\"sendbird-openchannel-conversation-scroll\"\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      <div className=\"sendbird-openchannel-conversation-scroll__container\">\n        <div className=\"sendbird-openchannel-conversation-scroll__container__padding\" />\n        <div className=\"sendbird-openchannel-conversation-scroll__container__item-container\">\n          {\n            allMessages.map((message, index) => {\n              let status: string;\n\n              if (message.messageType !== 'admin') {\n                status = message.sendingStatus;\n              }\n\n              const previousMessage = allMessages[index - 1];\n              const nextMessage = allMessages[index - 1];\n\n              const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n              const currentCreatedAt = message.createdAt;\n              // https://stackoverflow.com/a/41855608\n              const hasSeperator = !(previousMessageCreatedAt && (\n                isSameDay(currentCreatedAt, previousMessageCreatedAt)\n              ));\n\n              const [chainTop, chainBottom] = useMessageGrouping\n                ? compareMessagesForGrouping(previousMessage, message, nextMessage)\n                : [false, false];\n              return (\n                <MessageHoc\n                  key={message.messageId}\n                  message={message}\n                  status={status}\n                  userId={user.userId}\n                  disabled={!isOnline}\n                  editDisabled={openchannel.isFrozen}\n                  hasSeperator={hasSeperator}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                  deleteMessage={deleteMessage}\n                  updateMessage={updateMessage}\n                  resendMessage={resendMessage}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAIL = 'GET_PREV_MESSAGES_FAIL';\nexport const SENDING_MESSAGE_FAILED = 'SENDING_MESSAGE_FAILED';\nexport const SENDING_MESSAGE_SUCCEEDED = 'SENDING_MESSAGE_SUCCEEDED';\nexport const SENDING_MESSAGE_START = 'SENDING_MESSAGE_START';\nexport const RESENDING_MESSAGE_START = 'RESENDING_MESSAGE_START';\n\n// event handlers\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nexport const ON_OPERATOR_UPDATED = 'ON_OPERATOR_UPDATED';\nexport const ON_USER_ENTERED = 'ON_USER_ENTERED';\nexport const ON_USER_EXITED = 'ON_USER_EXITED';\nexport const ON_USER_MUTED = 'ON_USER_MUTED';\nexport const ON_USER_UNMUTED = 'ON_USER_UNMUTED';\nexport const ON_USER_BANNED = 'ON_USER_BANNED';\nexport const ON_USER_UNBANNED = 'ON_USER_UNBANNED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_META_DATA_CREATED = 'ON_META_DATA_CREATED';\nexport const ON_META_DATA_UPDATED = 'ON_META_DATA_UPDATED';\nexport const ON_META_DATA_DELETED = 'ON_META_DATA_DELETED';\nexport const ON_META_COUNTERS_CREATED = 'ON_META_COUNTERS_CREATED';\nexport const ON_META_COUNTERS_UPDATED = 'ON_META_COUNTERS_UPDATED';\nexport const ON_META_COUNTERS_DELETED = 'ON_META_COUNTERS_DELETED';\nexport const ON_MENTION_RECEIVED = 'ON_MENTION_RECEIVED';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\nimport compareIds from '../../../utils/compareIds.js';\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\n// @ts-ignore: Unreachable code error\ninterface ActionInterface {\n  type: string;\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.RESET_MESSAGES: {\n      return {\n        ...state,\n        allMessages: [],\n      };\n    }\n\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const currentChannel = action.payload;\n      const operators = currentChannel.operators;\n      if (\n        !state.isInvalid\n        && state.currentOpenChannel\n        && state.currentOpenChannel.url\n        && (state.currentOpenChannel.url === currentChannel.url)\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: currentChannel,\n        isInvalid: false,\n        operators: operators,\n        participants: operators,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.GET_PREV_MESSAGES_SUCESS:\n    case actionTypes.GET_PREV_MESSAGES_FAIL: {\n      const isFailed = (action.type === actionTypes.GET_PREV_MESSAGES_FAIL);\n      const {\n        currentOpenChannel = {},\n        messages = [],\n        hasMore,\n        lastMessageTimestamp,\n      } = action.payload;\n      const actionChannelUrl = currentOpenChannel.url;\n      const receivedMessages = isFailed ? [] : messages;\n      const _hasMore = isFailed ? false : hasMore;\n      const _lastMessageTimestamp = isFailed ? 0 : lastMessageTimestamp;\n\n      const stateChannel = state.currentOpenChannel;\n      const stateChannelUrl = stateChannel.url;\n\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      const filteredAllMessages = state.allMessages.filter((message) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, message.messageId)))\n      ));\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: _hasMore,\n        lastMessageTimestamp: _lastMessageTimestamp,\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_START: {\n      const {\n        message,\n        channel,\n      } = action.payload;\n      if (channel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...message },\n        ],\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_SUCCEEDED: {\n      const sentMessage = action.payload;\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SENDING_MESSAGE_FAILED: {\n      const sentMessage = action.payload;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, sentMessage.reqId) ? sentMessage : m\n        )),\n      };\n    }\n    case actionTypes.RESENDING_MESSAGE_START: {\n      const eventedChannel = action.payload.channel;\n      const resentMessage = action.payload.message;\n      if (eventedChannel.url !== state.currentOpenChannel.url) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, resentMessage.reqId) ? resentMessage : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const eventedChannel = action.payload.channel;\n      const receivedMessage = action.payload.message;\n      const {\n        currentOpenChannel\n      } = state;\n\n      if (\n        !compareIds(eventedChannel.url, currentOpenChannel.url)\n        || (\n          !(state.allMessages.map(\n            (message) => message.messageId).indexOf(receivedMessage.messageId) < 0\n        ))\n      ) {\n        return state;\n      }\n\n      return {\n        ...state,\n        allMessages: [...state.allMessages, receivedMessage],\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedMessage = action.payload.message;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((message) => (\n          message.isIdentical(updatedMessage)\n            ? updatedMessage\n            : message\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED: {\n      const eventedChannel = action.payload.channel;\n      const deletedMessageId = action.payload.messageId;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((message) => (\n          !compareIds(message.messageId, deletedMessageId)\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID: {\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    }\n    case actionTypes.ON_OPERATOR_UPDATED: {\n      const eventedChannel = action.payload.channel;\n      const updatedOperators = action.payload.operators;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: {\n          ...state.currentOpenChannel,\n          operators: updatedOperators,\n        },\n        operators: updatedOperators,\n      };\n    }\n    case actionTypes.ON_USER_ENTERED: {\n      const eventedChannel = action.payload.channel;\n      const enteredUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: [...state.participants, enteredUser],\n      };\n    }\n    case actionTypes.ON_USER_EXITED: {\n      const eventedChannel = action.payload.channel;\n      const exitedUser = action.payload.user;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== eventedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        participants: state.participants.filter((participant) => (\n          !compareIds(participant.userId, exitedUser.userId)\n        )),\n      };\n    }\n    case actionTypes.ON_USER_MUTED: {\n      // const eventedChannel = action.payload.channel;\n      // const mutedUser = action.payload.user;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_USER_UNMUTED: {\n      // const eventedChannel = action.payload.channel;\n      // const unmutedUser = action.payload.user;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_USER_BANNED: {\n      // const eventedChannel = action.payload.channel;\n      // const bannedUser = action.payload.user;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_USER_UNBANNED: {\n      // const eventedChannel = action.payload.channel;\n      // const unbannedUser = action.payload.user;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_CHANNEL_FROZEN: {\n      const frozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== frozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: true,\n      };\n    }\n    case actionTypes.ON_CHANNEL_UNFROZEN: {\n      const unfrozenChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== unfrozenChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        frozen: false,\n      };\n    }\n    case actionTypes.ON_CHANNEL_CHANGED: {\n      const changedChannel = action.payload;\n      const currentChannel = state.currentOpenChannel;\n      if (!currentChannel || currentChannel.url && (currentChannel.url !== changedChannel.url)) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOpenChannel: changedChannel,\n      };\n    }\n    case actionTypes.ON_META_DATA_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaData = action.payload.metaData;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_DATA_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaDataKeys = action.payload.metaDataKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_CREATED: {\n      // const eventedChannel = action.payload.channel;\n      // const createdMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_UPDATED: {\n      // const eventedChannel = action.payload.channel;\n      // const updatedMetaCounter = action.payload.metaCounter;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_META_COUNTERS_DELETED: {\n      // const eventedChannel = action.payload.channel;\n      // const deletedMetaCounterKeys = action.payload.metaCounterKeys;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    case actionTypes.ON_MENTION_RECEIVED: {\n      // const eventedChannel = action.payload.channel;\n      // const mentionedMessage = action.payload.message;\n      // return {\n      //   ...state\n      // };\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n","import Sendbird from 'sendbird';\nimport { EveryMessage } from '../../../index';\n\nexport interface State {\n  allMessages: EveryMessage[];\n  loading: boolean;\n  initialized: boolean;\n  currentOpenChannel: Sendbird.OpenChannel;\n  isInvalid: boolean;\n  hasMore: boolean;\n  lastMessageTimestamp: number;\n  frozen: boolean;\n  operators: Sendbird.User[];\n  participants: Sendbird.User[];\n  // add banned participant ids\n  // add muted participant ids\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  initialized: false,\n  currentOpenChannel: null,\n  isInvalid: false,\n  hasMore: false,\n  lastMessageTimestamp: 0,\n  frozen: false,\n  operators: [],\n  participants: [],\n  // bannedParticipantIds\n  // mutedParticipantIds\n};\n\nexport default initialState;\n","import React, {\n  useRef,\n  useCallback,\n  useEffect,\n  useReducer,\n  useContext,\n  useState,\n} from 'react';\nimport Sendbird from 'sendbird';\nimport * as utils from './utils';\nimport './index.scss';\n\nimport MessageInputWrapper from './components/MessageInpuetWrapper';\nimport FrozenChannelNotification from './components/FrozenNotification';\nimport OpenchannelConversationHeader from '../../ui/OpenchannelConversationHeader';\nimport OpenchannelConversationScroll from './components/OpenchannelConversationScroll';\nimport Icon, { IconColors, IconTypes } from '../../ui/Icon';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport {\n  EveryMessage,\n  ClientUserMessage,\n  ClientFileMessage,\n  OpenChannelProps,\n} from '../../index';\nimport messagesReducer from './dux/reducers';\nimport messagesInitialState from './dux/initialState';\nimport * as messageActionTypes from './dux/actionTypes';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext.jsx';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport uuidv4 from '../../utils/uuid';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation';\n\ninterface Props extends OpenChannelProps {\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: {\n      user: Sendbird.User,\n    },\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    disableUserProfile?: boolean;\n    renderUserProfile?(): JSX.Element;\n  };\n}\n\nexport const OpenchannelConversation = (props: Props): JSX.Element => {\n  // props\n  const {\n    useMessageGrouping,\n    channelUrl,\n    stores,\n    config,\n    queries = {},\n    disableUserProfile,\n    renderUserProfile,\n    renderChannelTitle,\n    renderMessageInput,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onChatHeaderActionClick\n  } = props;\n\n  const {\n    sdkStore,\n    userStore,\n  } = stores;\n  const {\n    userId,\n    isOnline,\n    logger,\n  } = config;\n\n  const {\n    sdk\n  } = sdkStore;\n  const {\n    user\n  } = userStore;\n\n  // hook variables\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const {\n    allMessages,\n    loading,\n    initialized,\n    currentOpenChannel,\n    isInvalid,\n    hasMore,\n    lastMessageTimestamp,\n  } = messagesStore;\n  // ref\n  const messageInputRef = useRef(null); // useSendMessageCallback\n  const { stringSet } = useContext(LocalizationContext);\n  const [scrollDownPromise, setScrollDownPromise] = useState(null);\n  const [showScrollDownButton, setShowScrollDownButton] = useState(false);\n\n  // const\n  const sdkInit = sdkStore.initialized;\n  const userFilledMessageListParams = queries ? queries.messageListParams: null;\n  const disabled = !initialized\n    || !isOnline\n    || utils.isDisabledBecauseFrozen(currentOpenChannel, userId);\n  // || utils.isDisabledBecauseMuted(mutedParticipantIds, userId)\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  // useSetChannel\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.OpenChannel) {\n      logger.info('OpenChannel | useSetChannel fetching channel', channelUrl);\n      sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n        if (!error) {\n          logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: openChannel,\n          });\n          openChannel.enter((error) => {\n            if (error) {\n              logger.warning('OpenChannel | useSetChannel enter channel failed', { channelUrl, error });\n              messagesDispatcher({\n                type: messageActionTypes.SET_CHANNEL_INVALID,\n              });\n            }\n          });\n        } else {\n          logger.warning('OpenChannel | useSetChannel fetch channel failed', { channelUrl, error });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        }\n      });\n      // .then((openChannel) => {\n      //   logger.info('OpenChannel | useSetChannel fetched channel', openChannel);\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CURRENT_CHANNEL,\n      //     payload: openChannel,\n      //   });\n      // })\n      // .catch((error) => {\n      //   logger.warning('OpenChannel | useSetChannel fetch channel failed', { channelUrl, error });\n      //   messagesDispatcher({\n      //     type: messageActionTypes.SET_CHANNEL_INVALID,\n      //   });\n      // });\n    }\n  }, [channelUrl, sdkInit]);\n\n  // useHandleChannelEvents\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (currentOpenChannel && currentOpenChannel.url && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('OpenChannel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_RECEIVED,\n          payload: { channel, message },\n        });\n      };\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageUpdated', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n      ChannelHandler.onMessageDeleted = (channel, messageId) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMessageDeleted', { channelUrl, messageId });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: { channel, messageId },\n        });\n      };\n      ChannelHandler.onOperatorUpdated = (channel, operators) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onOperatorUpdated', { channelUrl, operators });\n        messagesDispatcher({\n          type: messageActionTypes.ON_OPERATOR_UPDATED,\n          payload: { channel, operators },\n        });\n      };\n      ChannelHandler.onUserEntered = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserEntered', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_ENTERED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserExited = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserExited', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_EXITED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserMuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserMuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_MUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnmuted = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnmuted', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNMUTED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserBanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserBanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_BANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onUserUnbanned = (channel, user) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onUserUnbanned', { channelUrl, user });\n        messagesDispatcher({\n          type: messageActionTypes.ON_USER_UNBANNED,\n          payload: { channel, user },\n        });\n      };\n      ChannelHandler.onChannelFrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelFrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_FROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelUnfrozen = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelUnfrozen', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_UNFROZEN,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onChannelChanged = (channel) => {\n        logger.info('OpenChannel | useHandleChannelEvents: onChannelChanged', channel);\n        messagesDispatcher({\n          type: messageActionTypes.ON_CHANNEL_CHANGED,\n          payload: channel,\n        });\n      };\n      ChannelHandler.onMetaDataCreated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataCreated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_CREATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataUpdated = (channel, metaData) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataUpdated', { channelUrl, metaData });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_UPDATED,\n          payload: { channel, metaData },\n        });\n      };\n      ChannelHandler.onMetaDataDeleted = (channel, metaDataKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaDataDeleted', { channelUrl, metaDataKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_DATA_DELETED,\n          payload: { channel, metaDataKeys },\n        });\n      };\n      ChannelHandler.onMetaCountersCreated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersCreated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_CREATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersUpdated = (channel, metaCounter) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersUpdated', { channelUrl, metaCounter });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_UPDATED,\n          payload: { channel, metaCounter },\n        });\n      };\n      ChannelHandler.onMetaCountersDeleted = (channel, metaCounterKeys) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMetaCountersDeleted', { channelUrl, metaCounterKeys });\n        messagesDispatcher({\n          type: messageActionTypes.ON_META_COUNTERS_DELETED,\n          payload: { channel, metaCounterKeys },\n        });\n      };\n      ChannelHandler.onMentionReceived = (channel, message) => {\n        const channelUrl = channel.url;\n        logger.info('OpenChannel | useHandleChannelEvents: onMentionReceived', { channelUrl, message });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MENTION_RECEIVED,\n          payload: { channel, message },\n        });\n      };\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('OpenChannel | useHandleChannelEvents: Removing message receiver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [currentOpenChannel]);\n\n  // useInitialMessagesFetch\n  useEffect(() => {\n    logger.info('OpenChannel | useInitialMessagesFetch: Setup started', currentOpenChannel);\n\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams && currentOpenChannel && currentOpenChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = 30;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReactions = false;\n      if (userFilledMessageListParams) {\n        Object.keys(userFilledMessageListParams).forEach(key => {\n          messageListParams[key] = userFilledMessageListParams[key];\n        });\n        logger.info('OpenChannel | Used customizedMessageListParams');\n      }\n\n      logger.info('OpenChannel | Fetching messages', { currentOpenChannel, messageListParams });\n\n      currentOpenChannel.getMessagesByTimestamp(\n        new Date().getTime(),\n        messageListParams,\n        (messages, error) => {\n          if (!error) {\n            logger.info('OpenChannel | Fetching messages succeeded', messages);\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimestamp = hasMore\n            ? messages[0].createdAt\n            : null;\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                currentOpenChannel,\n                messages,\n                hasMore,\n                lastMessageTimestamp,\n              },\n            });\n            setTimeout(() => {\n              utils.scrollIntoLast('.sendbird-msg--scroll-ref');\n            });\n          } else {\n            logger.error('OpenChannel | Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n              payload: {\n                currentOpenChannel,\n                messages: [],\n                hasMore: false,\n                lastMessageTimestamp: 0,\n              },\n            });\n          }\n        },\n      );\n      // todo: use promise after CoreSDK adds required TS methods\n      // .then((messages) => {\n      //   console.log('get messages via getMessagesByTimestamp', messages);\n      //   const hasMore = (messages && messages.length > 0);\n      //   const lastMessageTimestamp = hasMore\n      //     ? messages[0].createdAt\n      //     : null;\n      //   messagesDispatcher({\n      //     type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n      //     payload: {\n      //       currentOpenChannel,\n      //       messages,\n      //       hasMore,\n      //       lastMessageTimestamp,\n      //     },\n      //   });\n      // })\n      // .catch((error: Error): void => {\n      //   logger.error('OpenChannel | Fetching messages failed', error);\n      //   messagesDispatcher({\n      //     type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n      //     payload: {\n      //       currentOpenChannel,\n      //       messages: [],\n      //       hasMore: false,\n      //       lastMessageTimestamp: 0,\n      //     }\n      //   });\n      // });\n    }\n  }, [currentOpenChannel]);\n\n  // useScrollCallback\n  const onScroll = useCallback((callback) => {\n    if (!hasMore) {\n      return;\n    }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReactions = false;\n\n    if (userFilledMessageListParams) {\n      Object.keys(userFilledMessageListParams).forEach(key => {\n        messageListParams[key] = userFilledMessageListParams[key];\n      });\n      logger.info('OpenChannel: Used userFilledMessageListParams');\n    }\n\n    logger.info('OpenChannel: Fetching messages', { currentOpenChannel, messageListParams });\n\n    currentOpenChannel.getMessagesByTimestamp(\n      lastMessageTimestamp || new Date().getTime(),\n      messageListParams,\n      (messages, error) => {\n        if (!error) {\n          logger.info('OpenChannel | Fetching messages succeeded', messages);\n          const hasMore = (messages && messages.length > 0);\n          const lastMessageTimestamp = hasMore\n            ? messages[0].createdAt\n            : null;\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              currentOpenChannel,\n              messages,\n              hasMore,\n              lastMessageTimestamp,\n            },\n          });\n          setTimeout(() => {\n            callback();\n          });\n        } else {\n          logger.error('OpenChannel | Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.GET_PREV_MESSAGES_FAIL,\n            payload: {\n              currentOpenChannel,\n              messages: [],\n              hasMore: false,\n              lastMessageTimestamp: 0,\n            },\n          });\n        }\n      }\n    );\n  }, [currentOpenChannel, lastMessageTimestamp]);\n\n  // useSendMessageCallback\n  const handleSendMessage = useCallback(() => {\n    const text = messageInputRef.current.value;\n\n    function createParamsDefualt(txt: string | number): Sendbird.UserMessageParams {\n      const message = typeof txt === 'string' ? txt.trim() : txt.toString(10).trim();\n      const params = new sdk.UserMessageParams();\n      params.message = message;\n      return params;\n    }\n\n    const createCustomParams = onBeforeSendUserMessage\n      && typeof onBeforeSendUserMessage === 'function';\n\n    if (createCustomParams) {\n      logger.info('OpenChannel | Creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n    }\n\n    const params = onBeforeSendUserMessage\n      ? onBeforeSendUserMessage(text)\n      : createParamsDefualt(text);\n\n    logger.info('OpenChannel | Sending message has started', params);\n\n    const pendingMessage = currentOpenChannel.sendUserMessage(params, (message, error) => {\n      if (error) {\n        logger.warning('OpenChannel | Sending message failed', { message });\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_FAILED,\n          payload: message,\n        });\n        return;\n      }\n      logger.info('OpenChannel | Sending message succeeded', { message });\n      messagesDispatcher({\n        type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n        payload: message,\n      });\n    });\n    messagesDispatcher({\n      type: messageActionTypes.SENDING_MESSAGE_START,\n      payload: {\n        message: pendingMessage,\n        channel: currentOpenChannel,\n      },\n    });\n  }, [currentOpenChannel, onBeforeSendUserMessage]);\n\n  // useFileUploadCallback\n  const handleFileUpload = useCallback((file) => {\n    function createParamsDefualt(file_: File): Sendbird.FileMessageParams {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    }\n\n    const createCustomParams = onBeforeSendFileMessage\n      && typeof onBeforeSendFileMessage === 'function';\n\n    if (createCustomParams) {\n      logger.info('OpenChannel | Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n    }\n\n    const params = onBeforeSendFileMessage\n      ? onBeforeSendFileMessage(file)\n      : createParamsDefualt(file);\n\n    logger.info('OpenChannel | Uploading file message start', params);\n\n    const pendingMessage = currentOpenChannel.sendFileMessage(\n      params,\n      (message: EveryMessage, error: Sendbird.SendBirdError) => {\n        if (error) {\n          logger.error('OpenChannel | Sending file message failed', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SENDING_MESSAGE_FAILED,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('OpenChannel | Sending message succeeded', message);\n        messagesDispatcher({\n          type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n          payload: message,\n        });\n      }\n    );\n\n    messagesDispatcher({\n      type: messageActionTypes.SENDING_MESSAGE_START,\n      payload: {\n        message: {\n          ...pendingMessage,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentOpenChannel,\n      }\n    });\n  }, [currentOpenChannel, onBeforeSendFileMessage]);\n\n  // useUpdateMessageCallback\n  const updateMessage = useCallback((messageId: number, text: string, callback?: () => void): void => {\n\n    function createParamsDefualt(txt: string): SendBird.UserMessageParams {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    }\n\n    if (onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function') {\n      logger.info('OpenChannel | Creating params using onBeforeUpdateUserMessage');\n    }\n\n    const params = onBeforeSendUserMessage\n      ? onBeforeSendUserMessage(text)\n      : createParamsDefualt(text);\n\n    currentOpenChannel.updateUserMessage(messageId, params, (message, error) => {\n      if (callback) {\n        callback();\n      }\n      if (!error) {\n        logger.info('OpenChannel | Updating message succeeded', { message, params });\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentOpenChannel,\n            message,\n          },\n        });\n      } else {\n        logger.warning('OpenChannel | Updating message failed', error);\n      }\n    });\n  }, [currentOpenChannel, messagesDispatcher, onBeforeSendUserMessage]);\n\n  // useDeleteMessageCallback\n  const deleteMessage = useCallback((message: ClientUserMessage | ClientFileMessage, callback?: () => void): void => {\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('OpenChannel | useDeleteMessageCallback: Deleting message requestState: ', requestState);\n\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('OpenChannel | useDeleteMessageCallback: Deleted message from local: ', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (callback) {\n        callback();\n      }\n      return;\n    }\n\n    currentOpenChannel.deleteMessage(message, (error) => {\n      logger.info('OpenChannel | useDeleteMessageCallback: Deleting message from remote: ', requestState);\n      if (callback) {\n        callback();\n      }\n      if (!error) {\n        logger.info('OpenChannel | useDeleteMessageCallback: Deleting message succeeded', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: {\n            channel: currentOpenChannel,\n            messageId: message.messageId,\n          },\n        });\n      } else {\n        logger.warning('OpenChannel | useDeleteMessageCallback: Deleting message failed', error);\n      }\n    });\n  }, [currentOpenChannel, messagesDispatcher]);\n\n  // useResendMessageCallback\n  const resendMessage = useCallback((failedMessage: ClientUserMessage | ClientFileMessage) => {\n    logger.info('OpenChannel | Reseding message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function' && failedMessage.isResendable()) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESENDING_MESSAGE_START,\n        payload: {\n          channel: currentOpenChannel,\n          message: failedMessage,\n        },\n      });\n\n      // userMessage\n      if (messageType === 'user' && failedMessage.messageType === 'user') {\n        currentOpenChannel.resendUserMessage(failedMessage, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | Reseding message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | Resending message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n        return;\n      }\n\n      // fileMessage\n      if (messageType === 'file' && failedMessage.messageType === 'file') {\n        currentOpenChannel.resendFileMessage(failedMessage, file, (message, error) => {\n          if (!error) {\n            logger.info('OpenChannel | Resending file message succeeded', message);\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_SUCCEEDED,\n              payload: message,\n            });\n          } else {\n            logger.warning('OpenChannel | Resending file message failed', error);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SENDING_MESSAGE_FAILED,\n              payload: failedMessage,\n            });\n          }\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('OpenChannel | Message is not resendable');\n      logger.warning('OpenChannel | Message is not resendable', failedMessage);\n    }\n  }, [currentOpenChannel, messagesDispatcher]);\n\n  const handleClickScrollDownButton = () => {\n    const promise = new Promise((resolve) => {\n      resolve();\n    });\n    setScrollDownPromise(promise);\n  };\n\n  if (!currentOpenChannel || !currentOpenChannel.url) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (loading) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.LOADING} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className={COMPONENT_CLASS_NAME}><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n\n  return (\n    <UserProfileProvider\n      className={COMPONENT_CLASS_NAME}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        showScrollDownButton && (\n          <div\n            className={`${COMPONENT_CLASS_NAME}__go-to-bottom`}\n            onClick={handleClickScrollDownButton}\n            onKeyDown={handleClickScrollDownButton}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              type={IconTypes.SHEVRON_DOWN}\n              fillColor={IconColors.CONTENT}\n            />\n          </div>\n        )\n      }\n      {\n        renderChannelTitle\n          ? renderChannelTitle({\n            channel: currentOpenChannel,\n            user: user,\n          })\n          : (\n            <OpenchannelConversationHeader\n              title={currentOpenChannel.name}\n              subTitle={`${utils.kFormatter(currentOpenChannel.participantCount)} ${stringSet.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS}`}\n              coverImage={currentOpenChannel.coverUrl}\n              onActionClick={onChatHeaderActionClick}\n            />\n          )\n      }\n      {\n        currentOpenChannel.isFrozen && (\n          <FrozenChannelNotification />\n        )\n      }\n      <OpenchannelConversationScroll\n        openchannel={currentOpenChannel}\n        user={user}\n        useMessageGrouping={useMessageGrouping}\n        isOnline={isOnline}\n        allMessages={allMessages}\n        onScroll={onScroll}\n        hasMore={hasMore}\n        scrollDownPromise={scrollDownPromise}\n        showScrollDownButton={setShowScrollDownButton}\n        updateMessage={updateMessage}\n        deleteMessage={deleteMessage}\n        resendMessage={resendMessage}\n      />\n      {\n        renderMessageInput\n          ? (\n            renderMessageInput({\n              channel: currentOpenChannel,\n              user: user,\n              disabled: disabled,\n            })\n          )\n          : (\n            <MessageInputWrapper\n              channel={currentOpenChannel}\n              user={user}\n              ref={messageInputRef}\n              disabled={disabled}\n              onSendMessage={handleSendMessage}\n              onFileUpload={handleFileUpload}\n              renderMessageInput={renderMessageInput}\n            />\n          )\n      }\n    </UserProfileProvider>\n  );\n};\n\nexport default withSendbirdContext(OpenchannelConversation);\n"],"names":["getMessageCreatedAt","message","format","createdAt","scrollIntoLast","selector","intialTry","MAX_TRIES","currentTry","nodes","document","querySelectorAll","last","length","scrollIntoView","error","setTimeout","isSameGroup","comparingMessage","messageType","sendingStatus","sender","userId","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","kFormatter","num","Math","abs","toFixed","isOperator","openChannel","operators","map","operator","indexOf","isDisabledBecauseFrozen","isFrozen","MessageInputWrapper","_a","ref","channel","user","disabled","onSendMessage","onFileUpload","renderMessageInput","stringSet","useContext","LocalizationContext","React","MessageInput","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","forwardRef","FrozenNotification","Label","LabelTypography","CAPTION_2","CHANNEL_FROZEN","COMPONENT_CLASS_NAME","OpenchannelConversationHeader","coverImage","_b","title","LabelStringSet","NO_TITLE","_c","subTitle","onActionClick","Avatar","Icon","IconTypes","AVATAR_NO_IMAGE","IconColors","BACKGROUND_3","H_2","LabelColors","ONBACKGROUND_1","BODY_2","ONBACKGROUND_2","IconButton","INFO","PRIMARY","copyToClipboard","text","window","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","OpenChannelMessageStatusTypes","NONE","PENDING","FAILED","CANCELED","SUCCEEDED","getSenderFromMessage","_sender","checkIsSent","status","checkIsByMe","isFineCopy","isFineResend","isResendable","isFineEdit","isFineDelete","showMenuTrigger","props","OpenchannelUserMessage","className","resendMessage","showEdit","showRemove","chainTop","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","useState","contextStyle","setContextStyle","injectingClassName","Array","isArray","push","isByMe","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","word","updatedAt","uuidv4","BODY_1","MESSAGE_EDITED","useEffect","current","clientHeight","top","innerWidth","join","ContextMenu","toggleDropdown","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","close","UserProfile","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","MORE","CONTENT_INVERSE","MenuItem","CONTEXT_MENU_DROPDOWN__COPY","CONTEXT_MENU_DROPDOWN__EDIT","CONTEXT_MENU_DROPDOWN__RESEND","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelAdminMessage","__spreadArrays","URL_REG","createUrlTester","regexp","test","checkOGIsEnalbed","ogMetaData","url","OpenchannelOGMessage","defaultImage","messageComponentRef","isUrl","wordClassName","LinkLabel","openLink","open","SUBTITLE_2","description","ImageRenderer","alt","NO_THUMBNAIL","SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","OpenchannelThumbnailMessage","onClick","localUrl","isMessageSent","PLAY","PHOTO","ON_BACKGROUND_2","checkFileType","fileUrl","result","imageFile","audioFile","FILE_DOCUMENT","FILE_AUDIO","truncate","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","ceil","backChars","floor","substr","OpenchannelFileMessage","openFileUrl","TextButton","RemoveMessageModal","onCloseModal","onDeleteMessage","Modal","MODAL__DELETE_MESSAGE__TITLE","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","UNKNOWN","SendingMessageStatus","getMessageType","isUserMessage","isAdminMessage","isImage","isVideo","MessageHoc","editDisabled","hasSeperator","deleteMessage","updateMessage","chainBottom","setShowEdit","_d","setShowRemove","_e","showFileViewer","setShowFileViewer","editMessageInputRef","requestState","messageId","DateSeparator","OpenChannelFileMessage","OpenChannelOGMessage","OpenChannelThumbnailMessage","OpenChannelUserMessage","FileViewer","OpenchannelConversationScroll","useMessageGrouping","openchannel","allMessages","isOnline","hasMore","onScroll","scrollDownPromise","showScrollDownButton","scrollRef","handleOnScroll","e","element","target","scrollTop","scrollHeight","nodes_1","first","then","scrollTo","index","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","RESET_MESSAGES","GET_PREV_MESSAGES_SUCESS","GET_PREV_MESSAGES_FAIL","SENDING_MESSAGE_FAILED","SENDING_MESSAGE_SUCCEEDED","SENDING_MESSAGE_START","RESENDING_MESSAGE_START","ON_MESSAGE_RECEIVED","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","ON_OPERATOR_UPDATED","ON_USER_ENTERED","ON_USER_EXITED","ON_USER_MUTED","ON_USER_UNMUTED","ON_USER_BANNED","ON_USER_UNBANNED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_CHANNEL_CHANGED","ON_META_DATA_CREATED","ON_META_DATA_UPDATED","ON_META_DATA_DELETED","ON_META_COUNTERS_CREATED","ON_META_COUNTERS_UPDATED","ON_META_COUNTERS_DELETED","ON_MENTION_RECEIVED","reducer","state","action","actionTypes","currentChannel","payload","isInvalid","currentOpenChannel","participants","isFailed","messages","lastMessageTimestamp","actionChannelUrl","receivedMessages_1","_hasMore","_lastMessageTimestamp","stateChannel","stateChannelUrl","filteredAllMessages","filter","find","compareIds","loading","initialized","sentMessage_1","newMessages","m","reqId","sentMessage_2","eventedChannel","resentMessage_1","receivedMessage","updatedMessage_1","isIdentical","deletedMessageId_1","updatedOperators","enteredUser","exitedUser_1","participant","frozenChannel","frozen","unfrozenChannel","changedChannel","initialState","OpenchannelConversation","channelUrl","stores","config","queries","renderChannelTitle","onBeforeSendUserMessage","onBeforeSendFileMessage","onChatHeaderActionClick","sdkStore","userStore","logger","sdk","useReducer","messagesReducer","messagesInitialState","messagesStore","messagesDispatcher","messageInputRef","setScrollDownPromise","setShowScrollDownButton","sdkInit","userFilledMessageListParams","messageListParams","utils","userDefinedDisableUserProfile","userDefinedRenderProfile","OpenChannel","info","getChannel","messageActionTypes","enter","warning","messageReceiverId","ChannelHandler","onMessageReceived","onMessageUpdated","onMessageDeleted","onOperatorUpdated","onUserEntered","onUserExited","onUserMuted","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelFrozen","onChannelUnfrozen","onChannelChanged","onMetaDataCreated","metaData","onMetaDataUpdated","onMetaDataDeleted","metaDataKeys","onMetaCountersCreated","metaCounter","onMetaCountersUpdated","onMetaCountersDeleted","metaCounterKeys","onMentionReceived","addChannelHandler","removeChannelHandler","MessageListParams","getMessagesByTimestamp","messageListParams_1","prevResultSize","isInclusive","includeReplies","includeReactions","Object","keys","forEach","key","Date","getTime","hasMore_1","lastMessageTimestamp_1","useCallback","callback","hasMore_2","lastMessageTimestamp_2","handleSendMessage","value","createParamsDefualt","txt","trim","toString","params","UserMessageParams","createCustomParams","pendingMessage","sendUserMessage","handleFileUpload","file","file_","FileMessageParams","sendFileMessage","URL","createObjectURL","updateUserMessage","failedMessage","resendUserMessage","resendFileMessage","console","handleClickScrollDownButton","promise","Promise","resolve","PlaceHolder","PlaceHolderTypes","NO_CHANNELS","LOADING","WRONG","UserProfileProvider","SHEVRON_DOWN","CONTENT","name","participantCount","OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS","coverUrl","FrozenChannelNotification","withSendbirdContext"],"mappings":"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"}